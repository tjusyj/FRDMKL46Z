   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"sensorCompass.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	iGpx,2,2
  18              		.comm	iGpy,2,2
  19              		.comm	iGpz,2,2
  20              		.comm	iBpx,2,2
  21              		.comm	iBpy,2,2
  22              		.comm	iBpz,2,2
  23              		.comm	fBpx,4,4
  24              		.comm	fBpy,4,4
  25              		.comm	fBpz,4,4
  26              		.comm	fBcx,4,4
  27              		.comm	fBcy,4,4
  28              		.comm	fBcz,4,4
  29              		.comm	fBfx,4,4
  30              		.comm	fBfy,4,4
  31              		.comm	fBfz,4,4
  32              		.comm	fGpx,4,4
  33              		.comm	fGpy,4,4
  34              		.comm	fGpz,4,4
  35              		.comm	fPhi6DOF,4,4
  36              		.comm	fLPPhi6DOF,4,4
  37              		.comm	fThe6DOF,4,4
  38              		.comm	fLPThe6DOF,4,4
  39              		.comm	fPsi6DOF,4,4
  40              		.comm	fLPPsi6DOF,4,4
  41              		.comm	fRho6DOF,4,4
  42              		.comm	fLPRho6DOF,4,4
  43              		.comm	fdelta6DOF,4,4
  44              		.comm	fLPdelta6DOF,4,4
  45              		.comm	ecompass_direction,4,4
  46              		.comm	validmagcal,4,4
  47              		.comm	loopcounter,4,4
  48              		.comm	MagBufferCount,4,4
  49              		.comm	iMagBuff,1500,4
  50              		.comm	SOLUTIONSIZE,4,4
  51              		.global	CALUPDACTIVE
  52              		.section	.data.CALUPDACTIVE,"aw",%progbits
  53              		.align	2
  56              	CALUPDACTIVE:
  57 0000 01000000 		.word	1
  58              		.global	HARDCORRACTIVE
  59              		.section	.data.HARDCORRACTIVE,"aw",%progbits
  60              		.align	2
  63              	HARDCORRACTIVE:
  64 0000 01000000 		.word	1
  65              		.global	SOFTCORRACTIVE
  66              		.section	.data.SOFTCORRACTIVE,"aw",%progbits
  67              		.align	2
  70              	SOFTCORRACTIVE:
  71 0000 01000000 		.word	1
  72              		.global	TILTCORRACTIVE
  73              		.section	.data.TILTCORRACTIVE,"aw",%progbits
  74              		.align	2
  77              	TILTCORRACTIVE:
  78 0000 01000000 		.word	1
  79              		.comm	fVx,4,4
  80              		.comm	fVy,4,4
  81              		.comm	fVz,4,4
  82              		.comm	xfinvW,36,4
  83              		.comm	finvW,12,4
  84              		.comm	fB,4,4
  85              		.comm	fFitErrorpc,4,4
  86              		.comm	xA,36,4
  87              		.comm	A,12,4
  88              		.comm	xinvA,36,4
  89              		.comm	invA,12,4
  90              		.comm	ftrVx,4,4
  91              		.comm	ftrVy,4,4
  92              		.comm	ftrVz,4,4
  93              		.comm	xftrinvW,36,4
  94              		.comm	ftrinvW,12,4
  95              		.comm	ftrB,4,4
  96              		.comm	ftrFitErrorpc,4,4
  97              		.comm	det,4,4
  98              		.comm	xfR6DOFn,36,4
  99              		.comm	fR6DOFn,12,4
 100              		.comm	xfLPR6DOFn,36,4
 101              		.comm	fLPR6DOFn,12,4
 102              		.comm	xfLPR6DOFnm1,36,4
 103              		.comm	fLPR6DOFnm1,12,4
 104              		.comm	xfX7,2688,4
 105              		.comm	fX7,384,4
 106              		.comm	xftmpA7x7,196,4
 107              		.comm	ftmpA7x7,28,4
 108              		.comm	xftmpB7x7,196,4
 109              		.comm	ftmpB7x7,28,4
 110              		.comm	xftmpA7x1,28,4
 111              		.comm	ftmpA7x1,28,4
 112              		.comm	xfX4,1536,4
 113              		.comm	fX4,384,4
 114              		.comm	xfY,384,4
 115              		.comm	fY,384,4
 116              		.comm	xftmpA4x1,16,4
 117              		.comm	ftmpA4x1,16,4
 118              		.comm	xftmpA4x4,64,4
 119              		.comm	ftmpA4x4,16,4
 120              		.comm	xftmpB4x1,16,4
 121              		.comm	ftmpB4x1,16,4
 122              		.comm	xftmpB4x4,64,4
 123              		.comm	ftmpB4x4,16,4
 124              		.comm	xftmpA3x3,36,4
 125              		.comm	ftmpA3x3,12,4
 126              		.comm	xftmpB3x3,36,4
 127              		.comm	ftmpB3x3,12,4
 128              		.comm	xftmpA3x1,12,4
 129              		.comm	ftmpA3x1,12,4
 130              		.comm	COORDSYSTEM,4,4
 131              		.comm	fqR6DOFn,16,4
 132              		.comm	fqLPR6DOFn,16,4
 133              		.global	iPhi6DOF
 134              		.section	.bss.iPhi6DOF,"aw",%nobits
 135              		.align	2
 138              	iPhi6DOF:
 139 0000 00000000 		.space	4
 140              		.global	iThe6DOF
 141              		.section	.bss.iThe6DOF,"aw",%nobits
 142              		.align	2
 145              	iThe6DOF:
 146 0000 00000000 		.space	4
 147              		.global	iPsi6DOF
 148              		.section	.bss.iPsi6DOF,"aw",%nobits
 149              		.align	2
 152              	iPsi6DOF:
 153 0000 00000000 		.space	4
 154              		.section	.text.fSixDOFMyNEDSensorDrivers,"ax",%progbits
 155              		.align	2
 156              		.global	fSixDOFMyNEDSensorDrivers
 157              		.code	16
 158              		.thumb_func
 160              	fSixDOFMyNEDSensorDrivers:
 161              	.LFB0:
 162              		.file 1 "C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_De
   1:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
   2:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** #include "common.h"
   3:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** #include "arm_cm0.h"
   4:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** #include "sensorCompass.h"
   5:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** #include "hal_dev_mag3110.h"
   6:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** #include "hal_dev_mma8451.h"
   7:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
   8:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** #include "median.h"
   9:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** #include "stdio.h"
  10:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** #include "math.h"
  11:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** #include "stdlib.h"
  12:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** #include "time.h"
  13:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
  14:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** #include "task_mgr.h"
  15:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
  16:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** //*****************variables*****************//
  17:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** // global scalars 
  18:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
  19:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** int16 iGpx, iGpy, iGpz;						// raw accelerometer sensor output in bit counts 
  20:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** int16 iBpx, iBpy, iBpz;						// raw magnetometer sensor output in bit counts 
  21:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** float fBpx, fBpy, fBpz;						// raw magnetometer data in uT 
  22:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** float fBcx, fBcy, fBcz;						// mag data in uT after calibration correction 
  23:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** float fBfx, fBfy, fBfz;						// mag data in uT after tilt correction 
  24:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** float fGpx, fGpy, fGpz;						// raw accel data in g or m/s2
  25:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** float fPhi6DOF, fLPPhi6DOF;					// raw and low pass roll angle phi (deg)
  26:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** float fThe6DOF, fLPThe6DOF;					// raw and low pass pitch angle the (deg)
  27:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** float fPsi6DOF, fLPPsi6DOF;					// raw and low pass yaw angle psi (deg)
  28:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** float fRho6DOF, fLPRho6DOF;					// raw and low pass compass angle rho (deg)
  29:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** float fdelta6DOF, fLPdelta6DOF;				// raw and low pass filtered geomagnetic inclination angle delta
  30:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** int ecompass_direction;
  31:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
  32:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** // magnetometer constants //
  33:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** #define fuTpercount 0.1F			// MAG3110 and FXOS8700 provide 0.1uT per count resolution 
  34:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** #define fcountsperuT 10.0F			// must be reciprocal of fuTpercount 
  35:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
  36:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** // accelerometer constants //
  37:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** #define fcountsperg 4096.0F			// MMA8451 and FXOS8700 provide 4096 counts per g in 2g mode
  38:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** #define fgpercount 0.0002441406F	// reciprocal of fcountsperg
  39:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** #define fms2percount 0.00239502F	// FXOS8700CQ provides 9.81m/s2 per 4096 counts
  40:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
  41:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** // general scalars 
  42:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** int32 validmagcal;					// flag to denote a valid magnetic cal exists 
  43:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** int32 loopcounter;					// global counter incrementing each iteration of compass 
  44:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** int32 MagBufferCount;				// number of magnetometer readings in  the magnetic buffer 
  45:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
  46:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** // magnetometer measurement buffer
  47:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** #define MAGBUFFSIZE 5				// dimension in magnetometer buffer: 5 implies 5^3 or 125  
  48:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** #define miterations 70
  49:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
  50:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
  51:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
  52:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** struct iMagReading
  53:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** {
  54:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	int16 iBx;		// raw x channel measurement in magnetometer coordinate frame
  55:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	int16 iBy;		// raw y channel measurement in magnetometer coordinate frame
  56:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	int16 iBz;		// raw z channel measurement in magnetometer coordinate frame
  57:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	int32 index;	// time index which increments by 1 each iteration of the eCompass
  58:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** }; // single measurement entry in magnetometer buffer
  59:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
  60:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
  61:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** struct iMagReading iMagBuff[MAGBUFFSIZE][MAGBUFFSIZE][MAGBUFFSIZE];	// magnetometer measurement buf
  62:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
  63:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
  64:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** ///*******************************
  65:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** // multiplicative conversion constants 
  66:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** #define DegToRad 0.01745329251994F	// degrees to radians conversion 
  67:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** #define RadToDeg 57.2957795130823F	// radians to degrees conversion  
  68:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** #define frecip180 0.0055555555555F	// multiplicative factor 1/180 
  69:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
  70:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** // magnetic calibration constants 
  71:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** int32 SOLUTIONSIZE;							// calibration model size: 4 or 7 elements 
  72:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** #define MINEQUATIONS 24						// minimum number of measurements used for calibration 
  73:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** #define MAXEQUATIONS 96						// maximum number of measurements used for calibration 
  74:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** #define MINBFIT 5.0F						// minimum acceptable geomagnetic field B for valid calibration
  75:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** #define MAXBFIT 100.0F						// maximum acceptable geomagnetic field B for valid calibration
  76:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** #define FITERRORAGING 0.0033333F			// reciprocal of time (s) for fit error to increase by e=2.718 (
  77:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
  78:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** // flags controlling operation of the algorithms: normally should be TRUE
  79:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** int32 CALUPDACTIVE = TRUE;					// combined hard and soft iron updating flag
  80:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** int32 HARDCORRACTIVE = TRUE;				// flag for subtraction of hard iron estimate
  81:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** int32 SOFTCORRACTIVE = TRUE;				// flag for subtraction of soft iron estimate
  82:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** int32 TILTCORRACTIVE = TRUE;				// flag for applying tilt correction
  83:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
  84:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
  85:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** // floating point magnetic calibration variables
  86:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** float fVx, fVy, fVz;							// current computed hard iron calibration in uT 
  87:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** float xfinvW[3][3], *finvW[3];					// current computed inverse soft iron matrix size 
  88:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** float fB;										// current computed geomagnetic field magnitude in uT 
  89:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** float fFitErrorpc;							    // current computed fit error %
  90:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** float xA[3][3], *A[3];							// ellipsoid matrix A 
  91:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** float xinvA[3][3], *invA[3];					// inverse of ellipsoid matrix A 
  92:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** float ftrVx, ftrVy, ftrVz;						// trial computed hard iron calibration in uT 
  93:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** float xftrinvW[3][3], *ftrinvW[3];				// trial computed inverse soft iron matrix size 
  94:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** float ftrB;										// trial computed geomagnetic field magnitude in uT 
  95:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** float ftrFitErrorpc;							// trial computed fit error %
  96:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** float det;										// matrix determinant
  97:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
  98:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** // float orientation matrices 
  99:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** float xfR6DOFn[3][3], *fR6DOFn[3];			// 6DOF rotation matrix for sample n 
 100:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** float xfLPR6DOFn[3][3], *fLPR6DOFn[3];		// low pass 6DOF rotation matrix for sample n 
 101:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** float xfLPR6DOFnm1[3][3], *fLPR6DOFnm1[3];	// low pass 6DOF rotation matrix for sample n-1 
 102:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 103:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** // timing constants
 104:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** #define FS 50.0F					// eCompass sampling frequency (Hz)
 105:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** #define DELTAT 0.02F				// eCompass sampling interval (secs), must be reciprocal of FS
 106:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** #define ANGLE_LPF_FPU 0.0625F		// reciprocal of IR (in samples) of orientation low pass filter so 1
 107:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** #define CALINTERVAL 500				// interval in samples for re-computation of the calibration 
 108:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 109:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** // constants to minimise numerical noise in the matrix functions 
 110:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** #define fmatrixscaling 0.02F	    // approx normalises geomagnetic field 50uT 
 111:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** #define finvmatrixscaling 50.0F		// inverse of fmatrixscaling
 112:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 113:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** // 7 element float calibration arrays
 114:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** float xfX7[MAXEQUATIONS][7], *fX7[MAXEQUATIONS];			// matrix of measurements X 
 115:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** float xftmpA7x7[7][7], *ftmpA7x7[7];						// scratch 7x7 matrix 
 116:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** float xftmpB7x7[7][7], *ftmpB7x7[7];						// scratch 7x7 matrix 
 117:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** float xftmpA7x1[7][1], *ftmpA7x1[7];						// scratch 7x1 matrix 
 118:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 119:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** // 4 element float calibration arrays
 120:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** float xfX4[MAXEQUATIONS][4], *fX4[MAXEQUATIONS];			// matrix of measurements X 
 121:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** float xfY[MAXEQUATIONS][1], *fY[MAXEQUATIONS];				// 4 element model dependent variables 
 122:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** float xftmpA4x1[4][1], *ftmpA4x1[4];						// scratch 4x1 matrix 
 123:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** float xftmpA4x4[4][4], *ftmpA4x4[4];						// scratch 4x4 matrix 
 124:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** float xftmpB4x1[4][1], *ftmpB4x1[4];						// scratch 4x1 matrix 
 125:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** float xftmpB4x4[4][4], *ftmpB4x4[4];						// scratch 4x4 matrix
 126:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 127:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** // other float global arrays
 128:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** float xftmpA3x3[3][3], *ftmpA3x3[3];						// scratch 3x3 matrix 
 129:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** float xftmpB3x3[3][3], *ftmpB3x3[3];						// scratch 3x3 matrix 
 130:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** float xftmpA3x1[3][1], *ftmpA3x1[3];						// scratch 3x1 vector 
 131:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 132:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** //#define COORDSYSTEM NED
 133:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 134:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** // coordinate system selected
 135:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** #define NED 0                       // identifier for NED angle output 
 136:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** #define ANDROID 1                   // identifier for Android angle output 
 137:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** #define WIN8 2						// identifier for Windows 8 angle output
 138:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 139:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** int32 COORDSYSTEM;
 140:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 141:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** // orientation quaternions 
 142:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** //struct fquaternion fqR6DOFn, fqLPR6DOFn;	// current and low pass 6DOF orientation quaternion 
 143:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** fquaternion fqR6DOFn, fqLPR6DOFn;	// current and low pass 6DOF orientation quaternion 
 144:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 145:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** #define SOLUTIONSIZE 7
 146:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 147:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** extern char tmrFlag;
 148:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** //int variables
 149:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** int iPhi6DOF = 0;
 150:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** int iThe6DOF = 0;
 151:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** int iPsi6DOF = 0;
 152:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 153:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** //LCD
 154:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** extern void  vfnLCD_Write_Msg (uint8 *lbpMessage);
 155:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 156:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** //*************************************************************************************************
 157:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 158:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 159:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 160:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 161:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** void fSixDOFMyNEDSensorDrivers(void)
 162:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** {
 163              		.loc 1 162 0
 164              		.cfi_startproc
 165 0000 80B5     		push	{r7, lr}
 166              	.LCFI0:
 167              		.cfi_def_cfa_offset 8
 168              		.cfi_offset 7, -8
 169              		.cfi_offset 14, -4
 170 0002 00AF     		add	r7, sp, #0
 171              	.LCFI1:
 172              		.cfi_def_cfa_register 7
 163:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****      // read accel and magnetomertor 
 164:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****      // accelerometer readings: iGpx , iGpy , iGpz
 165:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****      // magnetometer readings: iBpx , iBpy , iBpz  
 166:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****   
 167:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****       iBpx = iMagReadX();
 173              		.loc 1 167 0
 174 0004 FFF7FEFF 		bl	iMagReadX
 175 0008 031C     		mov	r3, r0
 176 000a 9AB2     		uxth	r2, r3
 177 000c 114B     		ldr	r3, .L2
 178 000e 1A80     		strh	r2, [r3]
 168:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****       iBpy = iMagReadY();
 179              		.loc 1 168 0
 180 0010 FFF7FEFF 		bl	iMagReadY
 181 0014 031C     		mov	r3, r0
 182 0016 9AB2     		uxth	r2, r3
 183 0018 0F4B     		ldr	r3, .L2+4
 184 001a 1A80     		strh	r2, [r3]
 169:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****       iBpz = iMagReadZ();
 185              		.loc 1 169 0
 186 001c FFF7FEFF 		bl	iMagReadZ
 187 0020 031C     		mov	r3, r0
 188 0022 9AB2     		uxth	r2, r3
 189 0024 0D4B     		ldr	r3, .L2+8
 190 0026 1A80     		strh	r2, [r3]
 170:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****       
 171:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****       iGpx = iAcclReadX();
 191              		.loc 1 171 0
 192 0028 FFF7FEFF 		bl	iAcclReadX
 193 002c 031C     		mov	r3, r0
 194 002e 9AB2     		uxth	r2, r3
 195 0030 0B4B     		ldr	r3, .L2+12
 196 0032 1A80     		strh	r2, [r3]
 172:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****       iGpy = iAcclReadY();
 197              		.loc 1 172 0
 198 0034 FFF7FEFF 		bl	iAcclReadY
 199 0038 031C     		mov	r3, r0
 200 003a 9AB2     		uxth	r2, r3
 201 003c 094B     		ldr	r3, .L2+16
 202 003e 1A80     		strh	r2, [r3]
 173:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****       iGpz = iAcclReadZ();
 203              		.loc 1 173 0
 204 0040 FFF7FEFF 		bl	iAcclReadZ
 205 0044 031C     		mov	r3, r0
 206 0046 9AB2     		uxth	r2, r3
 207 0048 074B     		ldr	r3, .L2+20
 208 004a 1A80     		strh	r2, [r3]
 174:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 175:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****    
 176:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****       fintToFloatData();
 209              		.loc 1 176 0
 210 004c FFF7FEFF 		bl	fintToFloatData
 177:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** }
 211              		.loc 1 177 0
 212 0050 BD46     		mov	sp, r7
 213              		@ sp needed for prologue
 214 0052 80BD     		pop	{r7, pc}
 215              	.L3:
 216              		.align	2
 217              	.L2:
 218 0054 00000000 		.word	iBpx
 219 0058 00000000 		.word	iBpy
 220 005c 00000000 		.word	iBpz
 221 0060 00000000 		.word	iGpx
 222 0064 00000000 		.word	iGpy
 223 0068 00000000 		.word	iGpz
 224              		.cfi_endproc
 225              	.LFE0:
 227              		.global	__aeabi_i2f
 228              		.global	__aeabi_fmul
 229              		.section	.text.fintToFloatData,"ax",%progbits
 230              		.align	2
 231              		.global	fintToFloatData
 232              		.code	16
 233              		.thumb_func
 235              	fintToFloatData:
 236              	.LFB1:
 178:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 179:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** void fintToFloatData(void){
 237              		.loc 1 179 0
 238              		.cfi_startproc
 239 0000 80B5     		push	{r7, lr}
 240              	.LCFI2:
 241              		.cfi_def_cfa_offset 8
 242              		.cfi_offset 7, -8
 243              		.cfi_offset 14, -4
 244 0002 00AF     		add	r7, sp, #0
 245              	.LCFI3:
 246              		.cfi_def_cfa_register 7
 180:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****   // get float sensor data in units of g and uT
 181:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****  fGpx = (float) iGpx * fgpercount;
 247              		.loc 1 181 0
 248 0004 2D4B     		ldr	r3, .L5
 249 0006 1B88     		ldrh	r3, [r3]
 250 0008 1BB2     		sxth	r3, r3
 251 000a 181C     		mov	r0, r3
 252 000c FFF7FEFF 		bl	__aeabi_i2f
 253 0010 031C     		add	r3, r0, #0
 254 0012 181C     		add	r0, r3, #0
 255 0014 2A49     		ldr	r1, .L5+4
 256 0016 FFF7FEFF 		bl	__aeabi_fmul
 257 001a 031C     		add	r3, r0, #0
 258 001c 1A1C     		add	r2, r3, #0
 259 001e 294B     		ldr	r3, .L5+8
 260 0020 1A60     		str	r2, [r3]
 182:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****  fGpy = (float) iGpy * fgpercount;
 261              		.loc 1 182 0
 262 0022 294B     		ldr	r3, .L5+12
 263 0024 1B88     		ldrh	r3, [r3]
 264 0026 1BB2     		sxth	r3, r3
 265 0028 181C     		mov	r0, r3
 266 002a FFF7FEFF 		bl	__aeabi_i2f
 267 002e 031C     		add	r3, r0, #0
 268 0030 181C     		add	r0, r3, #0
 269 0032 2349     		ldr	r1, .L5+4
 270 0034 FFF7FEFF 		bl	__aeabi_fmul
 271 0038 031C     		add	r3, r0, #0
 272 003a 1A1C     		add	r2, r3, #0
 273 003c 234B     		ldr	r3, .L5+16
 274 003e 1A60     		str	r2, [r3]
 183:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****  fGpz = (float) iGpz * fgpercount;
 275              		.loc 1 183 0
 276 0040 234B     		ldr	r3, .L5+20
 277 0042 1B88     		ldrh	r3, [r3]
 278 0044 1BB2     		sxth	r3, r3
 279 0046 181C     		mov	r0, r3
 280 0048 FFF7FEFF 		bl	__aeabi_i2f
 281 004c 031C     		add	r3, r0, #0
 282 004e 181C     		add	r0, r3, #0
 283 0050 1B49     		ldr	r1, .L5+4
 284 0052 FFF7FEFF 		bl	__aeabi_fmul
 285 0056 031C     		add	r3, r0, #0
 286 0058 1A1C     		add	r2, r3, #0
 287 005a 1E4B     		ldr	r3, .L5+24
 288 005c 1A60     		str	r2, [r3]
 184:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****  fBpx = (float) iBpx * fuTpercount;
 289              		.loc 1 184 0
 290 005e 1E4B     		ldr	r3, .L5+28
 291 0060 1B88     		ldrh	r3, [r3]
 292 0062 1BB2     		sxth	r3, r3
 293 0064 181C     		mov	r0, r3
 294 0066 FFF7FEFF 		bl	__aeabi_i2f
 295 006a 031C     		add	r3, r0, #0
 296 006c 181C     		add	r0, r3, #0
 297 006e 1B49     		ldr	r1, .L5+32
 298 0070 FFF7FEFF 		bl	__aeabi_fmul
 299 0074 031C     		add	r3, r0, #0
 300 0076 1A1C     		add	r2, r3, #0
 301 0078 194B     		ldr	r3, .L5+36
 302 007a 1A60     		str	r2, [r3]
 185:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****  fBpy = (float) iBpy * fuTpercount;
 303              		.loc 1 185 0
 304 007c 194B     		ldr	r3, .L5+40
 305 007e 1B88     		ldrh	r3, [r3]
 306 0080 1BB2     		sxth	r3, r3
 307 0082 181C     		mov	r0, r3
 308 0084 FFF7FEFF 		bl	__aeabi_i2f
 309 0088 031C     		add	r3, r0, #0
 310 008a 181C     		add	r0, r3, #0
 311 008c 1349     		ldr	r1, .L5+32
 312 008e FFF7FEFF 		bl	__aeabi_fmul
 313 0092 031C     		add	r3, r0, #0
 314 0094 1A1C     		add	r2, r3, #0
 315 0096 144B     		ldr	r3, .L5+44
 316 0098 1A60     		str	r2, [r3]
 186:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****  fBpz = (float) iBpz * fuTpercount;
 317              		.loc 1 186 0
 318 009a 144B     		ldr	r3, .L5+48
 319 009c 1B88     		ldrh	r3, [r3]
 320 009e 1BB2     		sxth	r3, r3
 321 00a0 181C     		mov	r0, r3
 322 00a2 FFF7FEFF 		bl	__aeabi_i2f
 323 00a6 031C     		add	r3, r0, #0
 324 00a8 181C     		add	r0, r3, #0
 325 00aa 0C49     		ldr	r1, .L5+32
 326 00ac FFF7FEFF 		bl	__aeabi_fmul
 327 00b0 031C     		add	r3, r0, #0
 328 00b2 1A1C     		add	r2, r3, #0
 329 00b4 0E4B     		ldr	r3, .L5+52
 330 00b6 1A60     		str	r2, [r3]
 187:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** }
 331              		.loc 1 187 0
 332 00b8 BD46     		mov	sp, r7
 333              		@ sp needed for prologue
 334 00ba 80BD     		pop	{r7, pc}
 335              	.L6:
 336              		.align	2
 337              	.L5:
 338 00bc 00000000 		.word	iGpx
 339 00c0 FEFF7F39 		.word	964689918
 340 00c4 00000000 		.word	fGpx
 341 00c8 00000000 		.word	iGpy
 342 00cc 00000000 		.word	fGpy
 343 00d0 00000000 		.word	iGpz
 344 00d4 00000000 		.word	fGpz
 345 00d8 00000000 		.word	iBpx
 346 00dc CDCCCC3D 		.word	1036831949
 347 00e0 00000000 		.word	fBpx
 348 00e4 00000000 		.word	iBpy
 349 00e8 00000000 		.word	fBpy
 350 00ec 00000000 		.word	iBpz
 351 00f0 00000000 		.word	fBpz
 352              		.cfi_endproc
 353              	.LFE1:
 355              		.global	__aeabi_f2d
 356              		.global	__aeabi_dmul
 357              		.global	__aeabi_dadd
 358              		.global	__aeabi_d2iz
 359              		.section	.text.fUpdateMagnetometerBuffer,"ax",%progbits
 360              		.align	2
 361              		.global	fUpdateMagnetometerBuffer
 362              		.code	16
 363              		.thumb_func
 365              	fUpdateMagnetometerBuffer:
 366              	.LFB2:
 188:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 189:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** // update the magnetic measurement buffer with most recent data 
 190:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** void fUpdateMagnetometerBuffer(void)
 191:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** {
 367              		.loc 1 191 0
 368              		.cfi_startproc
 369 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 370              	.LCFI4:
 371              		.cfi_def_cfa_offset 20
 372              		.cfi_offset 4, -20
 373              		.cfi_offset 5, -16
 374              		.cfi_offset 6, -12
 375              		.cfi_offset 7, -8
 376              		.cfi_offset 14, -4
 377 0002 89B0     		sub	sp, sp, #36
 378              	.LCFI5:
 379              		.cfi_def_cfa_offset 56
 380 0004 00AF     		add	r7, sp, #0
 381              	.LCFI6:
 382              		.cfi_def_cfa_register 7
 192:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// local variables 
 193:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	int32 j, k, l;						// magnetic buffer indices 
 194:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	int32 previndex;					// previous time index in the bin being over-written 
 195:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	int32 oldestj, oldestk, oldestl;	// indices of bin with oldest data 
 196:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	int32 oldestindex;					// time index of bin with oldest data 
 197:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 198:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// map -90 to 90 degrees onto range 0 to MAGBUFFSIZE - 1 
 199:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	j = (int32) ((atan2(fGpx, fabs(fGpy)) * RadToDeg + 90.0F) * (float) MAGBUFFSIZE * frecip180);
 383              		.loc 1 199 0
 384 0006 B44B     		ldr	r3, .L22+32
 385 0008 1B68     		ldr	r3, [r3]
 386 000a 181C     		add	r0, r3, #0
 387 000c FFF7FEFF 		bl	__aeabi_f2d
 388 0010 051C     		mov	r5, r0
 389 0012 0E1C     		mov	r6, r1
 390 0014 B14B     		ldr	r3, .L22+36
 391 0016 1B68     		ldr	r3, [r3]
 392 0018 5B00     		lsl	r3, r3, #1
 393 001a 5B08     		lsr	r3, r3, #1
 394 001c 181C     		add	r0, r3, #0
 395 001e FFF7FEFF 		bl	__aeabi_f2d
 396 0022 031C     		mov	r3, r0
 397 0024 0C1C     		mov	r4, r1
 398 0026 281C     		mov	r0, r5
 399 0028 311C     		mov	r1, r6
 400 002a 1A1C     		mov	r2, r3
 401 002c 231C     		mov	r3, r4
 402 002e FFF7FEFF 		bl	atan2
 403 0032 031C     		mov	r3, r0
 404 0034 0C1C     		mov	r4, r1
 405 0036 181C     		mov	r0, r3
 406 0038 211C     		mov	r1, r4
 407 003a A04B     		ldr	r3, .L22+4
 408 003c 9E4A     		ldr	r2, .L22
 409 003e FFF7FEFF 		bl	__aeabi_dmul
 410 0042 031C     		mov	r3, r0
 411 0044 0C1C     		mov	r4, r1
 412 0046 181C     		mov	r0, r3
 413 0048 211C     		mov	r1, r4
 414 004a 9D4A     		ldr	r2, .L22+8
 415 004c 9D4B     		ldr	r3, .L22+12
 416 004e FFF7FEFF 		bl	__aeabi_dadd
 417 0052 031C     		mov	r3, r0
 418 0054 0C1C     		mov	r4, r1
 419 0056 181C     		mov	r0, r3
 420 0058 211C     		mov	r1, r4
 421 005a 9B4A     		ldr	r2, .L22+16
 422 005c 9B4B     		ldr	r3, .L22+20
 423 005e FFF7FEFF 		bl	__aeabi_dmul
 424 0062 031C     		mov	r3, r0
 425 0064 0C1C     		mov	r4, r1
 426 0066 181C     		mov	r0, r3
 427 0068 211C     		mov	r1, r4
 428 006a 994A     		ldr	r2, .L22+24
 429 006c 994B     		ldr	r3, .L22+28
 430 006e FFF7FEFF 		bl	__aeabi_dmul
 431 0072 031C     		mov	r3, r0
 432 0074 0C1C     		mov	r4, r1
 433 0076 181C     		mov	r0, r3
 434 0078 211C     		mov	r1, r4
 435 007a FFF7FEFF 		bl	__aeabi_d2iz
 436 007e 031C     		mov	r3, r0
 437 0080 FB61     		str	r3, [r7, #28]
 200:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	k = (int32) ((atan2(fGpy, fabs(fGpz)) * RadToDeg + 90.0F) * (float) MAGBUFFSIZE * frecip180);
 438              		.loc 1 200 0
 439 0082 964B     		ldr	r3, .L22+36
 440 0084 1B68     		ldr	r3, [r3]
 441 0086 181C     		add	r0, r3, #0
 442 0088 FFF7FEFF 		bl	__aeabi_f2d
 443 008c 051C     		mov	r5, r0
 444 008e 0E1C     		mov	r6, r1
 445 0090 934B     		ldr	r3, .L22+40
 446 0092 1B68     		ldr	r3, [r3]
 447 0094 5B00     		lsl	r3, r3, #1
 448 0096 5B08     		lsr	r3, r3, #1
 449 0098 181C     		add	r0, r3, #0
 450 009a FFF7FEFF 		bl	__aeabi_f2d
 451 009e 031C     		mov	r3, r0
 452 00a0 0C1C     		mov	r4, r1
 453 00a2 281C     		mov	r0, r5
 454 00a4 311C     		mov	r1, r6
 455 00a6 1A1C     		mov	r2, r3
 456 00a8 231C     		mov	r3, r4
 457 00aa FFF7FEFF 		bl	atan2
 458 00ae 031C     		mov	r3, r0
 459 00b0 0C1C     		mov	r4, r1
 460 00b2 181C     		mov	r0, r3
 461 00b4 211C     		mov	r1, r4
 462 00b6 814B     		ldr	r3, .L22+4
 463 00b8 7F4A     		ldr	r2, .L22
 464 00ba FFF7FEFF 		bl	__aeabi_dmul
 465 00be 031C     		mov	r3, r0
 466 00c0 0C1C     		mov	r4, r1
 467 00c2 181C     		mov	r0, r3
 468 00c4 211C     		mov	r1, r4
 469 00c6 7E4A     		ldr	r2, .L22+8
 470 00c8 7E4B     		ldr	r3, .L22+12
 471 00ca FFF7FEFF 		bl	__aeabi_dadd
 472 00ce 031C     		mov	r3, r0
 473 00d0 0C1C     		mov	r4, r1
 474 00d2 181C     		mov	r0, r3
 475 00d4 211C     		mov	r1, r4
 476 00d6 7C4A     		ldr	r2, .L22+16
 477 00d8 7C4B     		ldr	r3, .L22+20
 478 00da FFF7FEFF 		bl	__aeabi_dmul
 479 00de 031C     		mov	r3, r0
 480 00e0 0C1C     		mov	r4, r1
 481 00e2 181C     		mov	r0, r3
 482 00e4 211C     		mov	r1, r4
 483 00e6 7A4A     		ldr	r2, .L22+24
 484 00e8 7A4B     		ldr	r3, .L22+28
 485 00ea FFF7FEFF 		bl	__aeabi_dmul
 486 00ee 031C     		mov	r3, r0
 487 00f0 0C1C     		mov	r4, r1
 488 00f2 181C     		mov	r0, r3
 489 00f4 211C     		mov	r1, r4
 490 00f6 FFF7FEFF 		bl	__aeabi_d2iz
 491 00fa 031C     		mov	r3, r0
 492 00fc BB61     		str	r3, [r7, #24]
 201:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	l = (int32) ((atan2(fGpz, fabs(fGpx)) * RadToDeg + 90.0F) * (float) MAGBUFFSIZE * frecip180);
 493              		.loc 1 201 0
 494 00fe 784B     		ldr	r3, .L22+40
 495 0100 1B68     		ldr	r3, [r3]
 496 0102 181C     		add	r0, r3, #0
 497 0104 FFF7FEFF 		bl	__aeabi_f2d
 498 0108 051C     		mov	r5, r0
 499 010a 0E1C     		mov	r6, r1
 500 010c 724B     		ldr	r3, .L22+32
 501 010e 1B68     		ldr	r3, [r3]
 502 0110 5B00     		lsl	r3, r3, #1
 503 0112 5B08     		lsr	r3, r3, #1
 504 0114 181C     		add	r0, r3, #0
 505 0116 FFF7FEFF 		bl	__aeabi_f2d
 506 011a 031C     		mov	r3, r0
 507 011c 0C1C     		mov	r4, r1
 508 011e 281C     		mov	r0, r5
 509 0120 311C     		mov	r1, r6
 510 0122 1A1C     		mov	r2, r3
 511 0124 231C     		mov	r3, r4
 512 0126 FFF7FEFF 		bl	atan2
 513 012a 031C     		mov	r3, r0
 514 012c 0C1C     		mov	r4, r1
 515 012e 181C     		mov	r0, r3
 516 0130 211C     		mov	r1, r4
 517 0132 624B     		ldr	r3, .L22+4
 518 0134 604A     		ldr	r2, .L22
 519 0136 FFF7FEFF 		bl	__aeabi_dmul
 520 013a 031C     		mov	r3, r0
 521 013c 0C1C     		mov	r4, r1
 522 013e 181C     		mov	r0, r3
 523 0140 211C     		mov	r1, r4
 524 0142 5F4A     		ldr	r2, .L22+8
 525 0144 5F4B     		ldr	r3, .L22+12
 526 0146 FFF7FEFF 		bl	__aeabi_dadd
 527 014a 031C     		mov	r3, r0
 528 014c 0C1C     		mov	r4, r1
 529 014e 181C     		mov	r0, r3
 530 0150 211C     		mov	r1, r4
 531 0152 5D4A     		ldr	r2, .L22+16
 532 0154 5D4B     		ldr	r3, .L22+20
 533 0156 FFF7FEFF 		bl	__aeabi_dmul
 534 015a 031C     		mov	r3, r0
 535 015c 0C1C     		mov	r4, r1
 536 015e 181C     		mov	r0, r3
 537 0160 211C     		mov	r1, r4
 538 0162 5B4A     		ldr	r2, .L22+24
 539 0164 5B4B     		ldr	r3, .L22+28
 540 0166 FFF7FEFF 		bl	__aeabi_dmul
 541 016a 031C     		mov	r3, r0
 542 016c 0C1C     		mov	r4, r1
 543 016e 181C     		mov	r0, r3
 544 0170 211C     		mov	r1, r4
 545 0172 FFF7FEFF 		bl	__aeabi_d2iz
 546 0176 031C     		mov	r3, r0
 547 0178 7B61     		str	r3, [r7, #20]
 202:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 203:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// bounds safety check in case exactly on boundary 
 204:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	if (j >= MAGBUFFSIZE) j = MAGBUFFSIZE - 1;		
 548              		.loc 1 204 0
 549 017a FB69     		ldr	r3, [r7, #28]
 550 017c 042B     		cmp	r3, #4
 551 017e 01DD     		ble	.L8
 552              		.loc 1 204 0 is_stmt 0
 553 0180 0423     		mov	r3, #4
 554 0182 FB61     		str	r3, [r7, #28]
 555              	.L8:
 205:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	if (k >= MAGBUFFSIZE) k = MAGBUFFSIZE - 1;	
 556              		.loc 1 205 0 is_stmt 1
 557 0184 BB69     		ldr	r3, [r7, #24]
 558 0186 042B     		cmp	r3, #4
 559 0188 01DD     		ble	.L9
 560              		.loc 1 205 0 is_stmt 0
 561 018a 0423     		mov	r3, #4
 562 018c BB61     		str	r3, [r7, #24]
 563              	.L9:
 206:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	if (l >= MAGBUFFSIZE) l = MAGBUFFSIZE - 1;	
 564              		.loc 1 206 0 is_stmt 1
 565 018e 7B69     		ldr	r3, [r7, #20]
 566 0190 042B     		cmp	r3, #4
 567 0192 01DD     		ble	.L10
 568              		.loc 1 206 0 is_stmt 0
 569 0194 0423     		mov	r3, #4
 570 0196 7B61     		str	r3, [r7, #20]
 571              	.L10:
 207:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 208:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// save the previous time index in this bin for later use 
 209:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	previndex = iMagBuff[j][k][l].index;
 572              		.loc 1 209 0 is_stmt 1
 573 0198 5248     		ldr	r0, .L22+44
 574 019a 7B69     		ldr	r3, [r7, #20]
 575 019c B969     		ldr	r1, [r7, #24]
 576 019e FC69     		ldr	r4, [r7, #28]
 577 01a0 1A1C     		mov	r2, r3
 578 01a2 5200     		lsl	r2, r2, #1
 579 01a4 D218     		add	r2, r2, r3
 580 01a6 9300     		lsl	r3, r2, #2
 581 01a8 1A1C     		mov	r2, r3
 582 01aa 0B1C     		mov	r3, r1
 583 01ac 1B01     		lsl	r3, r3, #4
 584 01ae 5B1A     		sub	r3, r3, r1
 585 01b0 9B00     		lsl	r3, r3, #2
 586 01b2 D218     		add	r2, r2, r3
 587 01b4 9623     		mov	r3, #150
 588 01b6 5B00     		lsl	r3, r3, #1
 589 01b8 6343     		mul	r3, r4
 590 01ba D318     		add	r3, r2, r3
 591 01bc C318     		add	r3, r0, r3
 592 01be 0833     		add	r3, r3, #8
 593 01c0 1B68     		ldr	r3, [r3]
 594 01c2 3B60     		str	r3, [r7]
 210:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 211:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// store the raw short integer magnetometer reading 
 212:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	iMagBuff[j][k][l].iBx = iBpx;
 595              		.loc 1 212 0
 596 01c4 484B     		ldr	r3, .L22+48
 597 01c6 1C88     		ldrh	r4, [r3]
 598 01c8 4648     		ldr	r0, .L22+44
 599 01ca 7969     		ldr	r1, [r7, #20]
 600 01cc BA69     		ldr	r2, [r7, #24]
 601 01ce FD69     		ldr	r5, [r7, #28]
 602 01d0 0B1C     		mov	r3, r1
 603 01d2 5B00     		lsl	r3, r3, #1
 604 01d4 5B18     		add	r3, r3, r1
 605 01d6 9B00     		lsl	r3, r3, #2
 606 01d8 9621     		mov	r1, #150
 607 01da 4900     		lsl	r1, r1, #1
 608 01dc 6943     		mul	r1, r5
 609 01de 5918     		add	r1, r3, r1
 610 01e0 131C     		mov	r3, r2
 611 01e2 1B01     		lsl	r3, r3, #4
 612 01e4 9B1A     		sub	r3, r3, r2
 613 01e6 9B00     		lsl	r3, r3, #2
 614 01e8 CB18     		add	r3, r1, r3
 615 01ea 221C     		add	r2, r4, #0
 616 01ec 1A52     		strh	r2, [r3, r0]
 213:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	iMagBuff[j][k][l].iBy = iBpy;
 617              		.loc 1 213 0
 618 01ee 3F4B     		ldr	r3, .L22+52
 619 01f0 1888     		ldrh	r0, [r3]
 620 01f2 3C4C     		ldr	r4, .L22+44
 621 01f4 7969     		ldr	r1, [r7, #20]
 622 01f6 BA69     		ldr	r2, [r7, #24]
 623 01f8 FD69     		ldr	r5, [r7, #28]
 624 01fa 0B1C     		mov	r3, r1
 625 01fc 5B00     		lsl	r3, r3, #1
 626 01fe 5B18     		add	r3, r3, r1
 627 0200 9B00     		lsl	r3, r3, #2
 628 0202 9621     		mov	r1, #150
 629 0204 4900     		lsl	r1, r1, #1
 630 0206 6943     		mul	r1, r5
 631 0208 5918     		add	r1, r3, r1
 632 020a 131C     		mov	r3, r2
 633 020c 1B01     		lsl	r3, r3, #4
 634 020e 9B1A     		sub	r3, r3, r2
 635 0210 9B00     		lsl	r3, r3, #2
 636 0212 CB18     		add	r3, r1, r3
 637 0214 E318     		add	r3, r4, r3
 638 0216 021C     		add	r2, r0, #0
 639 0218 5A80     		strh	r2, [r3, #2]
 214:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	iMagBuff[j][k][l].iBz = iBpz;	
 640              		.loc 1 214 0
 641 021a 354B     		ldr	r3, .L22+56
 642 021c 1888     		ldrh	r0, [r3]
 643 021e 314C     		ldr	r4, .L22+44
 644 0220 7969     		ldr	r1, [r7, #20]
 645 0222 BA69     		ldr	r2, [r7, #24]
 646 0224 FD69     		ldr	r5, [r7, #28]
 647 0226 0B1C     		mov	r3, r1
 648 0228 5B00     		lsl	r3, r3, #1
 649 022a 5B18     		add	r3, r3, r1
 650 022c 9B00     		lsl	r3, r3, #2
 651 022e 9621     		mov	r1, #150
 652 0230 4900     		lsl	r1, r1, #1
 653 0232 6943     		mul	r1, r5
 654 0234 5918     		add	r1, r3, r1
 655 0236 131C     		mov	r3, r2
 656 0238 1B01     		lsl	r3, r3, #4
 657 023a 9B1A     		sub	r3, r3, r2
 658 023c 9B00     		lsl	r3, r3, #2
 659 023e CB18     		add	r3, r1, r3
 660 0240 E318     		add	r3, r4, r3
 661 0242 021C     		add	r2, r0, #0
 662 0244 9A80     		strh	r2, [r3, #4]
 215:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 216:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// set the time index to the loop counter (valid value 0 at start of first pass) 
 217:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	iMagBuff[j][k][l].index = loopcounter;
 663              		.loc 1 217 0
 664 0246 2B4B     		ldr	r3, .L22+60
 665 0248 1868     		ldr	r0, [r3]
 666 024a 264C     		ldr	r4, .L22+44
 667 024c 7B69     		ldr	r3, [r7, #20]
 668 024e B969     		ldr	r1, [r7, #24]
 669 0250 FD69     		ldr	r5, [r7, #28]
 670 0252 1A1C     		mov	r2, r3
 671 0254 5200     		lsl	r2, r2, #1
 672 0256 D218     		add	r2, r2, r3
 673 0258 9300     		lsl	r3, r2, #2
 674 025a 1A1C     		mov	r2, r3
 675 025c 0B1C     		mov	r3, r1
 676 025e 1B01     		lsl	r3, r3, #4
 677 0260 5B1A     		sub	r3, r3, r1
 678 0262 9B00     		lsl	r3, r3, #2
 679 0264 D218     		add	r2, r2, r3
 680 0266 9623     		mov	r3, #150
 681 0268 5B00     		lsl	r3, r3, #1
 682 026a 6B43     		mul	r3, r5
 683 026c D318     		add	r3, r2, r3
 684 026e E318     		add	r3, r4, r3
 685 0270 0833     		add	r3, r3, #8
 686 0272 1860     		str	r0, [r3]
 218:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 219:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// no additional action needed if current bin was active but action is needed if bin was inactive 
 220:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	if (previndex == -1)
 687              		.loc 1 220 0
 688 0274 3B68     		ldr	r3, [r7]
 689 0276 0133     		add	r3, r3, #1
 690 0278 00D0     		beq	.LCB478
 691 027a B5E0     		b	.L21	@long jump
 692              	.LCB478:
 221:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	{
 222:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 223:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		if (MagBufferCount < MAXEQUATIONS)
 693              		.loc 1 223 0
 694 027c 1E4B     		ldr	r3, .L22+64
 695 027e 1B68     		ldr	r3, [r3]
 696 0280 5F2B     		cmp	r3, #95
 697 0282 05DC     		bgt	.L12
 224:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		{
 225:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			// simply increase the count of active measurements for calibration 
 226:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			MagBufferCount++;
 698              		.loc 1 226 0
 699 0284 1C4B     		ldr	r3, .L22+64
 700 0286 1B68     		ldr	r3, [r3]
 701 0288 5A1C     		add	r2, r3, #1
 702 028a 1B4B     		ldr	r3, .L22+64
 703 028c 1A60     		str	r2, [r3]
 227:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		}
 228:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****           
 229:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		else
 230:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		{
 231:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			// we need to find and de-activate the oldest reading 
 232:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			oldestindex = loopcounter;
 233:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			oldestj = oldestk = oldestl = 0; // to avoid compiler error
 234:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			for (j = 0; j < MAGBUFFSIZE; j++)
 235:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			{
 236:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 				for (k = 0; k < MAGBUFFSIZE; k++)
 237:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 				{
 238:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					for (l = 0; l < MAGBUFFSIZE; l++)
 239:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					{
 240:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						if ((iMagBuff[j][k][l].index != -1) && (iMagBuff[j][k][l].index < oldestindex))
 241:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						{
 242:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 							oldestj = j;
 243:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 							oldestk = k;
 244:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 							oldestl = l;
 245:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 							oldestindex = iMagBuff[oldestj][oldestk][oldestl].index;
 246:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						}
 247:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					}
 248:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 				}
 249:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			}
 250:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			// deactivate the oldest reading without bothering to zero the measurement data
 251:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			iMagBuff[oldestj][oldestk][oldestl].index = -1;
 252:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		}
 253:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	}
 254:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 255:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	return;
 704              		.loc 1 255 0
 705 028e ABE0     		b	.L21
 706              	.L12:
 232:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			oldestindex = loopcounter;
 707              		.loc 1 232 0
 708 0290 184B     		ldr	r3, .L22+60
 709 0292 1B68     		ldr	r3, [r3]
 710 0294 7B60     		str	r3, [r7, #4]
 233:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			oldestj = oldestk = oldestl = 0; // to avoid compiler error
 711              		.loc 1 233 0
 712 0296 0023     		mov	r3, #0
 713 0298 BB60     		str	r3, [r7, #8]
 714 029a BB68     		ldr	r3, [r7, #8]
 715 029c FB60     		str	r3, [r7, #12]
 716 029e FB68     		ldr	r3, [r7, #12]
 717 02a0 3B61     		str	r3, [r7, #16]
 234:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			for (j = 0; j < MAGBUFFSIZE; j++)
 718              		.loc 1 234 0
 719 02a2 0023     		mov	r3, #0
 720 02a4 FB61     		str	r3, [r7, #28]
 721 02a6 84E0     		b	.L13
 722              	.L19:
 236:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 				for (k = 0; k < MAGBUFFSIZE; k++)
 723              		.loc 1 236 0
 724 02a8 0023     		mov	r3, #0
 725 02aa BB61     		str	r3, [r7, #24]
 726 02ac 7AE0     		b	.L14
 727              	.L18:
 238:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					for (l = 0; l < MAGBUFFSIZE; l++)
 728              		.loc 1 238 0
 729 02ae 0023     		mov	r3, #0
 730 02b0 7B61     		str	r3, [r7, #20]
 731 02b2 71E0     		b	.L15
 732              	.L23:
 733 02b4 C046C046 		.align	3
 734              	.L22:
 735 02b8 00000020 		.word	536870912
 736 02bc DCA54C40 		.word	1078765020
 737 02c0 00000000 		.word	0
 738 02c4 00805640 		.word	1079410688
 739 02c8 00000000 		.word	0
 740 02cc 00001440 		.word	1075052544
 741 02d0 00000020 		.word	536870912
 742 02d4 6CC1763F 		.word	1064747372
 743 02d8 00000000 		.word	fGpx
 744 02dc 00000000 		.word	fGpy
 745 02e0 00000000 		.word	fGpz
 746 02e4 00000000 		.word	iMagBuff
 747 02e8 00000000 		.word	iBpx
 748 02ec 00000000 		.word	iBpy
 749 02f0 00000000 		.word	iBpz
 750 02f4 00000000 		.word	loopcounter
 751 02f8 00000000 		.word	MagBufferCount
 752              	.L17:
 240:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						if ((iMagBuff[j][k][l].index != -1) && (iMagBuff[j][k][l].index < oldestindex))
 753              		.loc 1 240 0
 754 02fc 3C48     		ldr	r0, .L24
 755 02fe 7B69     		ldr	r3, [r7, #20]
 756 0300 B969     		ldr	r1, [r7, #24]
 757 0302 FC69     		ldr	r4, [r7, #28]
 758 0304 1A1C     		mov	r2, r3
 759 0306 5200     		lsl	r2, r2, #1
 760 0308 D218     		add	r2, r2, r3
 761 030a 9300     		lsl	r3, r2, #2
 762 030c 1A1C     		mov	r2, r3
 763 030e 0B1C     		mov	r3, r1
 764 0310 1B01     		lsl	r3, r3, #4
 765 0312 5B1A     		sub	r3, r3, r1
 766 0314 9B00     		lsl	r3, r3, #2
 767 0316 D218     		add	r2, r2, r3
 768 0318 9623     		mov	r3, #150
 769 031a 5B00     		lsl	r3, r3, #1
 770 031c 6343     		mul	r3, r4
 771 031e D318     		add	r3, r2, r3
 772 0320 C318     		add	r3, r0, r3
 773 0322 0833     		add	r3, r3, #8
 774 0324 1B68     		ldr	r3, [r3]
 775 0326 0133     		add	r3, r3, #1
 776 0328 33D0     		beq	.L16
 240:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						if ((iMagBuff[j][k][l].index != -1) && (iMagBuff[j][k][l].index < oldestindex))
 777              		.loc 1 240 0 is_stmt 0
 778 032a 3148     		ldr	r0, .L24
 779 032c 7B69     		ldr	r3, [r7, #20]
 780 032e B969     		ldr	r1, [r7, #24]
 781 0330 FC69     		ldr	r4, [r7, #28]
 782 0332 1A1C     		mov	r2, r3
 783 0334 5200     		lsl	r2, r2, #1
 784 0336 D218     		add	r2, r2, r3
 785 0338 9300     		lsl	r3, r2, #2
 786 033a 1A1C     		mov	r2, r3
 787 033c 0B1C     		mov	r3, r1
 788 033e 1B01     		lsl	r3, r3, #4
 789 0340 5B1A     		sub	r3, r3, r1
 790 0342 9B00     		lsl	r3, r3, #2
 791 0344 D218     		add	r2, r2, r3
 792 0346 9623     		mov	r3, #150
 793 0348 5B00     		lsl	r3, r3, #1
 794 034a 6343     		mul	r3, r4
 795 034c D318     		add	r3, r2, r3
 796 034e C318     		add	r3, r0, r3
 797 0350 0833     		add	r3, r3, #8
 798 0352 1A68     		ldr	r2, [r3]
 799 0354 7B68     		ldr	r3, [r7, #4]
 800 0356 9A42     		cmp	r2, r3
 801 0358 1BDA     		bge	.L16
 242:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 							oldestj = j;
 802              		.loc 1 242 0 is_stmt 1
 803 035a FB69     		ldr	r3, [r7, #28]
 804 035c 3B61     		str	r3, [r7, #16]
 243:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 							oldestk = k;
 805              		.loc 1 243 0
 806 035e BB69     		ldr	r3, [r7, #24]
 807 0360 FB60     		str	r3, [r7, #12]
 244:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 							oldestl = l;
 808              		.loc 1 244 0
 809 0362 7B69     		ldr	r3, [r7, #20]
 810 0364 BB60     		str	r3, [r7, #8]
 245:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 							oldestindex = iMagBuff[oldestj][oldestk][oldestl].index;
 811              		.loc 1 245 0
 812 0366 2248     		ldr	r0, .L24
 813 0368 BB68     		ldr	r3, [r7, #8]
 814 036a F968     		ldr	r1, [r7, #12]
 815 036c 3C69     		ldr	r4, [r7, #16]
 816 036e 1A1C     		mov	r2, r3
 817 0370 5200     		lsl	r2, r2, #1
 818 0372 D218     		add	r2, r2, r3
 819 0374 9300     		lsl	r3, r2, #2
 820 0376 1A1C     		mov	r2, r3
 821 0378 0B1C     		mov	r3, r1
 822 037a 1B01     		lsl	r3, r3, #4
 823 037c 5B1A     		sub	r3, r3, r1
 824 037e 9B00     		lsl	r3, r3, #2
 825 0380 D218     		add	r2, r2, r3
 826 0382 9623     		mov	r3, #150
 827 0384 5B00     		lsl	r3, r3, #1
 828 0386 6343     		mul	r3, r4
 829 0388 D318     		add	r3, r2, r3
 830 038a C318     		add	r3, r0, r3
 831 038c 0833     		add	r3, r3, #8
 832 038e 1B68     		ldr	r3, [r3]
 833 0390 7B60     		str	r3, [r7, #4]
 834              	.L16:
 238:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					for (l = 0; l < MAGBUFFSIZE; l++)
 835              		.loc 1 238 0
 836 0392 7B69     		ldr	r3, [r7, #20]
 837 0394 0133     		add	r3, r3, #1
 838 0396 7B61     		str	r3, [r7, #20]
 839              	.L15:
 238:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					for (l = 0; l < MAGBUFFSIZE; l++)
 840              		.loc 1 238 0 is_stmt 0
 841 0398 7B69     		ldr	r3, [r7, #20]
 842 039a 042B     		cmp	r3, #4
 843 039c AEDD     		ble	.L17
 236:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 				for (k = 0; k < MAGBUFFSIZE; k++)
 844              		.loc 1 236 0 is_stmt 1
 845 039e BB69     		ldr	r3, [r7, #24]
 846 03a0 0133     		add	r3, r3, #1
 847 03a2 BB61     		str	r3, [r7, #24]
 848              	.L14:
 236:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 				for (k = 0; k < MAGBUFFSIZE; k++)
 849              		.loc 1 236 0 is_stmt 0
 850 03a4 BB69     		ldr	r3, [r7, #24]
 851 03a6 042B     		cmp	r3, #4
 852 03a8 00DC     		bgt	.LCB629
 853 03aa 80E7     		b	.L18	@long jump
 854              	.LCB629:
 234:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			for (j = 0; j < MAGBUFFSIZE; j++)
 855              		.loc 1 234 0 is_stmt 1
 856 03ac FB69     		ldr	r3, [r7, #28]
 857 03ae 0133     		add	r3, r3, #1
 858 03b0 FB61     		str	r3, [r7, #28]
 859              	.L13:
 234:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			for (j = 0; j < MAGBUFFSIZE; j++)
 860              		.loc 1 234 0 is_stmt 0
 861 03b2 FB69     		ldr	r3, [r7, #28]
 862 03b4 042B     		cmp	r3, #4
 863 03b6 00DC     		bgt	.LCB637
 864 03b8 76E7     		b	.L19	@long jump
 865              	.LCB637:
 251:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			iMagBuff[oldestj][oldestk][oldestl].index = -1;
 866              		.loc 1 251 0 is_stmt 1
 867 03ba 0D48     		ldr	r0, .L24
 868 03bc BB68     		ldr	r3, [r7, #8]
 869 03be F968     		ldr	r1, [r7, #12]
 870 03c0 3C69     		ldr	r4, [r7, #16]
 871 03c2 1A1C     		mov	r2, r3
 872 03c4 5200     		lsl	r2, r2, #1
 873 03c6 D218     		add	r2, r2, r3
 874 03c8 9300     		lsl	r3, r2, #2
 875 03ca 1A1C     		mov	r2, r3
 876 03cc 0B1C     		mov	r3, r1
 877 03ce 1B01     		lsl	r3, r3, #4
 878 03d0 5B1A     		sub	r3, r3, r1
 879 03d2 9B00     		lsl	r3, r3, #2
 880 03d4 D218     		add	r2, r2, r3
 881 03d6 9623     		mov	r3, #150
 882 03d8 5B00     		lsl	r3, r3, #1
 883 03da 6343     		mul	r3, r4
 884 03dc D318     		add	r3, r2, r3
 885 03de C318     		add	r3, r0, r3
 886 03e0 0833     		add	r3, r3, #8
 887 03e2 0122     		mov	r2, #1
 888 03e4 5242     		neg	r2, r2
 889 03e6 1A60     		str	r2, [r3]
 890              	.L21:
 891              		.loc 1 255 0
 892 03e8 C046     		mov	r8, r8
 893              	.L7:
 256:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** }
 894              		.loc 1 256 0
 895 03ea BD46     		mov	sp, r7
 896 03ec 09B0     		add	sp, sp, #36
 897              		@ sp needed for prologue
 898 03ee F0BD     		pop	{r4, r5, r6, r7, pc}
 899              	.L25:
 900              		.align	2
 901              	.L24:
 902 03f0 00000000 		.word	iMagBuff
 903              		.cfi_endproc
 904              	.LFE2:
 906              		.global	__aeabi_fsub
 907              		.global	__aeabi_fadd
 908 03f4 C046C046 		.section	.text.fInvertMagCal,"ax",%progbits
 909              		.align	2
 910              		.global	fInvertMagCal
 911              		.code	16
 912              		.thumb_func
 914              	fInvertMagCal:
 915              	.LFB3:
 257:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 258:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** // map the uncalibrated magnetometer data Bp (uT) onto calibrated data Bc (uT) 
 259:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** void fInvertMagCal(void)
 260:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** {
 916              		.loc 1 260 0
 917              		.cfi_startproc
 918 0000 90B5     		push	{r4, r7, lr}
 919              	.LCFI7:
 920              		.cfi_def_cfa_offset 12
 921              		.cfi_offset 4, -12
 922              		.cfi_offset 7, -8
 923              		.cfi_offset 14, -4
 924 0002 85B0     		sub	sp, sp, #20
 925              	.LCFI8:
 926              		.cfi_def_cfa_offset 32
 927 0004 00AF     		add	r7, sp, #0
 928              	.LCFI9:
 929              		.cfi_def_cfa_register 7
 261:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// local  variables 
 262:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	float ftmpx, ftmpy, ftmpz;
 263:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 264:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// remove the computed hard iron offset if enabled 
 265:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	if (HARDCORRACTIVE)
 930              		.loc 1 265 0
 931 0006 674B     		ldr	r3, .L32
 932 0008 1B68     		ldr	r3, [r3]
 933 000a 002B     		cmp	r3, #0
 934 000c 24D0     		beq	.L27
 266:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	{
 267:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		fBcx = fBpx - fVx;
 935              		.loc 1 267 0
 936 000e 664B     		ldr	r3, .L32+4
 937 0010 1A68     		ldr	r2, [r3]
 938 0012 664B     		ldr	r3, .L32+8
 939 0014 1B68     		ldr	r3, [r3]
 940 0016 101C     		add	r0, r2, #0
 941 0018 191C     		add	r1, r3, #0
 942 001a FFF7FEFF 		bl	__aeabi_fsub
 943 001e 031C     		add	r3, r0, #0
 944 0020 1A1C     		add	r2, r3, #0
 945 0022 634B     		ldr	r3, .L32+12
 946 0024 1A60     		str	r2, [r3]
 268:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		fBcy = fBpy - fVy;
 947              		.loc 1 268 0
 948 0026 634B     		ldr	r3, .L32+16
 949 0028 1A68     		ldr	r2, [r3]
 950 002a 634B     		ldr	r3, .L32+20
 951 002c 1B68     		ldr	r3, [r3]
 952 002e 101C     		add	r0, r2, #0
 953 0030 191C     		add	r1, r3, #0
 954 0032 FFF7FEFF 		bl	__aeabi_fsub
 955 0036 031C     		add	r3, r0, #0
 956 0038 1A1C     		add	r2, r3, #0
 957 003a 604B     		ldr	r3, .L32+24
 958 003c 1A60     		str	r2, [r3]
 269:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		fBcz = fBpz - fVz;
 959              		.loc 1 269 0
 960 003e 604B     		ldr	r3, .L32+28
 961 0040 1A68     		ldr	r2, [r3]
 962 0042 604B     		ldr	r3, .L32+32
 963 0044 1B68     		ldr	r3, [r3]
 964 0046 101C     		add	r0, r2, #0
 965 0048 191C     		add	r1, r3, #0
 966 004a FFF7FEFF 		bl	__aeabi_fsub
 967 004e 031C     		add	r3, r0, #0
 968 0050 1A1C     		add	r2, r3, #0
 969 0052 5D4B     		ldr	r3, .L32+36
 970 0054 1A60     		str	r2, [r3]
 971 0056 0BE0     		b	.L28
 972              	.L27:
 270:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	}
 271:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	else
 272:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	{
 273:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		fBcx = fBpx;
 973              		.loc 1 273 0
 974 0058 534B     		ldr	r3, .L32+4
 975 005a 1A68     		ldr	r2, [r3]
 976 005c 544B     		ldr	r3, .L32+12
 977 005e 1A60     		str	r2, [r3]
 274:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		fBcy = fBpy;
 978              		.loc 1 274 0
 979 0060 544B     		ldr	r3, .L32+16
 980 0062 1A68     		ldr	r2, [r3]
 981 0064 554B     		ldr	r3, .L32+24
 982 0066 1A60     		str	r2, [r3]
 275:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		fBcz = fBpz;
 983              		.loc 1 275 0
 984 0068 554B     		ldr	r3, .L32+28
 985 006a 1A68     		ldr	r2, [r3]
 986 006c 564B     		ldr	r3, .L32+36
 987 006e 1A60     		str	r2, [r3]
 988              	.L28:
 276:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	}
 277:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 278:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// remove the computed soft iron offset if enabled 
 279:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	if (SOFTCORRACTIVE)
 989              		.loc 1 279 0
 990 0070 564B     		ldr	r3, .L32+40
 991 0072 1B68     		ldr	r3, [r3]
 992 0074 002B     		cmp	r3, #0
 993 0076 00D1     		bne	.LCB758
 994 0078 8FE0     		b	.L31	@long jump
 995              	.LCB758:
 280:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	{
 281:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		ftmpx = finvW[0][0] * fBcx + finvW[0][1] * fBcy + finvW[0][2] * fBcz;
 996              		.loc 1 281 0
 997 007a 554B     		ldr	r3, .L32+44
 998 007c 1B68     		ldr	r3, [r3]
 999 007e 1A68     		ldr	r2, [r3]
 1000 0080 4B4B     		ldr	r3, .L32+12
 1001 0082 1B68     		ldr	r3, [r3]
 1002 0084 101C     		add	r0, r2, #0
 1003 0086 191C     		add	r1, r3, #0
 1004 0088 FFF7FEFF 		bl	__aeabi_fmul
 1005 008c 031C     		add	r3, r0, #0
 1006 008e 1C1C     		add	r4, r3, #0
 1007 0090 4F4B     		ldr	r3, .L32+44
 1008 0092 1B68     		ldr	r3, [r3]
 1009 0094 0433     		add	r3, r3, #4
 1010 0096 1A68     		ldr	r2, [r3]
 1011 0098 484B     		ldr	r3, .L32+24
 1012 009a 1B68     		ldr	r3, [r3]
 1013 009c 101C     		add	r0, r2, #0
 1014 009e 191C     		add	r1, r3, #0
 1015 00a0 FFF7FEFF 		bl	__aeabi_fmul
 1016 00a4 031C     		add	r3, r0, #0
 1017 00a6 201C     		add	r0, r4, #0
 1018 00a8 191C     		add	r1, r3, #0
 1019 00aa FFF7FEFF 		bl	__aeabi_fadd
 1020 00ae 031C     		add	r3, r0, #0
 1021 00b0 1C1C     		add	r4, r3, #0
 1022 00b2 474B     		ldr	r3, .L32+44
 1023 00b4 1B68     		ldr	r3, [r3]
 1024 00b6 0833     		add	r3, r3, #8
 1025 00b8 1A68     		ldr	r2, [r3]
 1026 00ba 434B     		ldr	r3, .L32+36
 1027 00bc 1B68     		ldr	r3, [r3]
 1028 00be 101C     		add	r0, r2, #0
 1029 00c0 191C     		add	r1, r3, #0
 1030 00c2 FFF7FEFF 		bl	__aeabi_fmul
 1031 00c6 031C     		add	r3, r0, #0
 1032 00c8 201C     		add	r0, r4, #0
 1033 00ca 191C     		add	r1, r3, #0
 1034 00cc FFF7FEFF 		bl	__aeabi_fadd
 1035 00d0 031C     		add	r3, r0, #0
 1036 00d2 FB60     		str	r3, [r7, #12]
 282:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		ftmpy = finvW[1][0] * fBcx + finvW[1][1] * fBcy + finvW[1][2] * fBcz;
 1037              		.loc 1 282 0
 1038 00d4 3E4B     		ldr	r3, .L32+44
 1039 00d6 5B68     		ldr	r3, [r3, #4]
 1040 00d8 1A68     		ldr	r2, [r3]
 1041 00da 354B     		ldr	r3, .L32+12
 1042 00dc 1B68     		ldr	r3, [r3]
 1043 00de 101C     		add	r0, r2, #0
 1044 00e0 191C     		add	r1, r3, #0
 1045 00e2 FFF7FEFF 		bl	__aeabi_fmul
 1046 00e6 031C     		add	r3, r0, #0
 1047 00e8 1C1C     		add	r4, r3, #0
 1048 00ea 394B     		ldr	r3, .L32+44
 1049 00ec 5B68     		ldr	r3, [r3, #4]
 1050 00ee 0433     		add	r3, r3, #4
 1051 00f0 1A68     		ldr	r2, [r3]
 1052 00f2 324B     		ldr	r3, .L32+24
 1053 00f4 1B68     		ldr	r3, [r3]
 1054 00f6 101C     		add	r0, r2, #0
 1055 00f8 191C     		add	r1, r3, #0
 1056 00fa FFF7FEFF 		bl	__aeabi_fmul
 1057 00fe 031C     		add	r3, r0, #0
 1058 0100 201C     		add	r0, r4, #0
 1059 0102 191C     		add	r1, r3, #0
 1060 0104 FFF7FEFF 		bl	__aeabi_fadd
 1061 0108 031C     		add	r3, r0, #0
 1062 010a 1C1C     		add	r4, r3, #0
 1063 010c 304B     		ldr	r3, .L32+44
 1064 010e 5B68     		ldr	r3, [r3, #4]
 1065 0110 0833     		add	r3, r3, #8
 1066 0112 1A68     		ldr	r2, [r3]
 1067 0114 2C4B     		ldr	r3, .L32+36
 1068 0116 1B68     		ldr	r3, [r3]
 1069 0118 101C     		add	r0, r2, #0
 1070 011a 191C     		add	r1, r3, #0
 1071 011c FFF7FEFF 		bl	__aeabi_fmul
 1072 0120 031C     		add	r3, r0, #0
 1073 0122 201C     		add	r0, r4, #0
 1074 0124 191C     		add	r1, r3, #0
 1075 0126 FFF7FEFF 		bl	__aeabi_fadd
 1076 012a 031C     		add	r3, r0, #0
 1077 012c BB60     		str	r3, [r7, #8]
 283:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		ftmpz = finvW[2][0] * fBcx + finvW[2][1] * fBcy + finvW[2][2] * fBcz;
 1078              		.loc 1 283 0
 1079 012e 284B     		ldr	r3, .L32+44
 1080 0130 9B68     		ldr	r3, [r3, #8]
 1081 0132 1A68     		ldr	r2, [r3]
 1082 0134 1E4B     		ldr	r3, .L32+12
 1083 0136 1B68     		ldr	r3, [r3]
 1084 0138 101C     		add	r0, r2, #0
 1085 013a 191C     		add	r1, r3, #0
 1086 013c FFF7FEFF 		bl	__aeabi_fmul
 1087 0140 031C     		add	r3, r0, #0
 1088 0142 1C1C     		add	r4, r3, #0
 1089 0144 224B     		ldr	r3, .L32+44
 1090 0146 9B68     		ldr	r3, [r3, #8]
 1091 0148 0433     		add	r3, r3, #4
 1092 014a 1A68     		ldr	r2, [r3]
 1093 014c 1B4B     		ldr	r3, .L32+24
 1094 014e 1B68     		ldr	r3, [r3]
 1095 0150 101C     		add	r0, r2, #0
 1096 0152 191C     		add	r1, r3, #0
 1097 0154 FFF7FEFF 		bl	__aeabi_fmul
 1098 0158 031C     		add	r3, r0, #0
 1099 015a 201C     		add	r0, r4, #0
 1100 015c 191C     		add	r1, r3, #0
 1101 015e FFF7FEFF 		bl	__aeabi_fadd
 1102 0162 031C     		add	r3, r0, #0
 1103 0164 1C1C     		add	r4, r3, #0
 1104 0166 1A4B     		ldr	r3, .L32+44
 1105 0168 9B68     		ldr	r3, [r3, #8]
 1106 016a 0833     		add	r3, r3, #8
 1107 016c 1A68     		ldr	r2, [r3]
 1108 016e 164B     		ldr	r3, .L32+36
 1109 0170 1B68     		ldr	r3, [r3]
 1110 0172 101C     		add	r0, r2, #0
 1111 0174 191C     		add	r1, r3, #0
 1112 0176 FFF7FEFF 		bl	__aeabi_fmul
 1113 017a 031C     		add	r3, r0, #0
 1114 017c 201C     		add	r0, r4, #0
 1115 017e 191C     		add	r1, r3, #0
 1116 0180 FFF7FEFF 		bl	__aeabi_fadd
 1117 0184 031C     		add	r3, r0, #0
 1118 0186 7B60     		str	r3, [r7, #4]
 284:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		fBcx = ftmpx; 
 1119              		.loc 1 284 0
 1120 0188 094B     		ldr	r3, .L32+12
 1121 018a FA68     		ldr	r2, [r7, #12]
 1122 018c 1A60     		str	r2, [r3]
 285:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		fBcy = ftmpy;	
 1123              		.loc 1 285 0
 1124 018e 0B4B     		ldr	r3, .L32+24
 1125 0190 BA68     		ldr	r2, [r7, #8]
 1126 0192 1A60     		str	r2, [r3]
 286:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		fBcz = ftmpz;	
 1127              		.loc 1 286 0
 1128 0194 0C4B     		ldr	r3, .L32+36
 1129 0196 7A68     		ldr	r2, [r7, #4]
 1130 0198 1A60     		str	r2, [r3]
 1131              	.L31:
 287:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	}
 288:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	return;
 1132              		.loc 1 288 0
 1133 019a C046     		mov	r8, r8
 1134              	.L26:
 289:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** }
 1135              		.loc 1 289 0
 1136 019c BD46     		mov	sp, r7
 1137 019e 05B0     		add	sp, sp, #20
 1138              		@ sp needed for prologue
 1139 01a0 90BD     		pop	{r4, r7, pc}
 1140              	.L33:
 1141 01a2 C046     		.align	2
 1142              	.L32:
 1143 01a4 00000000 		.word	HARDCORRACTIVE
 1144 01a8 00000000 		.word	fBpx
 1145 01ac 00000000 		.word	fVx
 1146 01b0 00000000 		.word	fBcx
 1147 01b4 00000000 		.word	fBpy
 1148 01b8 00000000 		.word	fVy
 1149 01bc 00000000 		.word	fBcy
 1150 01c0 00000000 		.word	fBpz
 1151 01c4 00000000 		.word	fVz
 1152 01c8 00000000 		.word	fBcz
 1153 01cc 00000000 		.word	SOFTCORRACTIVE
 1154 01d0 00000000 		.word	finvW
 1155              		.cfi_endproc
 1156              	.LFE3:
 1158              		.global	__aeabi_d2f
 1159              		.global	__aeabi_fdiv
 1160              		.global	__aeabi_fcmpeq
 1161              		.global	__aeabi_fcmpge
 1162              		.global	__aeabi_fcmplt
 1163              		.section	.text.feCompassNED,"ax",%progbits
 1164              		.align	2
 1165              		.global	feCompassNED
 1166              		.code	16
 1167              		.thumb_func
 1169              	feCompassNED:
 1170              	.LFB4:
 290:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 291:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** // Xtrinsic NED tilt-compensated e-Compass function 
 292:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** void feCompassNED(float fBx, float fBy, float fBz, float fGx, float fGy, float fGz)
 293:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** {
 1171              		.loc 1 293 0
 1172              		.cfi_startproc
 1173 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1174              	.LCFI10:
 1175              		.cfi_def_cfa_offset 20
 1176              		.cfi_offset 4, -20
 1177              		.cfi_offset 5, -16
 1178              		.cfi_offset 6, -12
 1179              		.cfi_offset 7, -8
 1180              		.cfi_offset 14, -4
 1181 0002 8DB0     		sub	sp, sp, #52
 1182              	.LCFI11:
 1183              		.cfi_def_cfa_offset 72
 1184 0004 00AF     		add	r7, sp, #0
 1185              	.LCFI12:
 1186              		.cfi_def_cfa_register 7
 1187 0006 F860     		str	r0, [r7, #12]
 1188 0008 B960     		str	r1, [r7, #8]
 1189 000a 7A60     		str	r2, [r7, #4]
 1190 000c 3B60     		str	r3, [r7]
 294:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// stack variables 
 295:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// fBx, fBy, fBz: float magnetometer sensor in any units but here uT
 296:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// fGx, fGy, fGz: float accelerometer sensor in any units but here g
 297:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 298:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// output 
 299:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// all float eCompass functions, Xtrinsic and Wahba, for all OS (NED, Android and Win) compute 
 300:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// the instantaneous roll, pitch, yaw and compass angles Phi, Theta, Psi and Rho 
 301:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// the instantaneous orientation matrix R6DOFn 
 302:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// the de-rotated magnetic fields Bfx, Bfy, Bfz 
 303:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// the instantaneous rotation quaternion fqR6DOFn 
 304:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// and then call a function to low pass the rotation matrix and obtain the low pass filtered angle
 305:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 306:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// local variables 
 307:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	float sinPhi, cosPhi;			// sine and cosine 
 308:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	float sinThe, cosThe;			// sine and cosine 
 309:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	float sinPsi, cosPsi;			// sine and cosine 
 310:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	float rmodG, rmodB;				// reciprocals of moduli of gravitational and magnetic vectors 
 311:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 312:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// estimate the declination angle delta (90 minus angle between the vectors) 
 313:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	rmodG = 1.0F / (float) sqrt(fGx * fGx + fGy * fGy + fGz * fGz);
 1191              		.loc 1 313 0
 1192 000e 3868     		ldr	r0, [r7]
 1193 0010 3968     		ldr	r1, [r7]
 1194 0012 FFF7FEFF 		bl	__aeabi_fmul
 1195 0016 031C     		add	r3, r0, #0
 1196 0018 1C1C     		add	r4, r3, #0
 1197 001a B86C     		ldr	r0, [r7, #72]
 1198 001c B96C     		ldr	r1, [r7, #72]
 1199 001e FFF7FEFF 		bl	__aeabi_fmul
 1200 0022 031C     		add	r3, r0, #0
 1201 0024 201C     		add	r0, r4, #0
 1202 0026 191C     		add	r1, r3, #0
 1203 0028 FFF7FEFF 		bl	__aeabi_fadd
 1204 002c 031C     		add	r3, r0, #0
 1205 002e 1C1C     		add	r4, r3, #0
 1206 0030 F86C     		ldr	r0, [r7, #76]
 1207 0032 F96C     		ldr	r1, [r7, #76]
 1208 0034 FFF7FEFF 		bl	__aeabi_fmul
 1209 0038 031C     		add	r3, r0, #0
 1210 003a 201C     		add	r0, r4, #0
 1211 003c 191C     		add	r1, r3, #0
 1212 003e FFF7FEFF 		bl	__aeabi_fadd
 1213 0042 031C     		add	r3, r0, #0
 1214 0044 181C     		add	r0, r3, #0
 1215 0046 FFF7FEFF 		bl	__aeabi_f2d
 1216 004a 031C     		mov	r3, r0
 1217 004c 0C1C     		mov	r4, r1
 1218 004e 181C     		mov	r0, r3
 1219 0050 211C     		mov	r1, r4
 1220 0052 FFF7FEFF 		bl	sqrt
 1221 0056 031C     		mov	r3, r0
 1222 0058 0C1C     		mov	r4, r1
 1223 005a 181C     		mov	r0, r3
 1224 005c 211C     		mov	r1, r4
 1225 005e FFF7FEFF 		bl	__aeabi_d2f
 1226 0062 031C     		add	r3, r0, #0
 1227 0064 FE20     		mov	r0, #254
 1228 0066 8005     		lsl	r0, r0, #22
 1229 0068 191C     		add	r1, r3, #0
 1230 006a FFF7FEFF 		bl	__aeabi_fdiv
 1231 006e 031C     		add	r3, r0, #0
 1232 0070 FB62     		str	r3, [r7, #44]
 314:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	rmodB = 1.0F / (float) sqrt(fBx * fBx + fBy * fBy + fBz * fBz);
 1233              		.loc 1 314 0
 1234 0072 F868     		ldr	r0, [r7, #12]
 1235 0074 F968     		ldr	r1, [r7, #12]
 1236 0076 FFF7FEFF 		bl	__aeabi_fmul
 1237 007a 031C     		add	r3, r0, #0
 1238 007c 1C1C     		add	r4, r3, #0
 1239 007e B868     		ldr	r0, [r7, #8]
 1240 0080 B968     		ldr	r1, [r7, #8]
 1241 0082 FFF7FEFF 		bl	__aeabi_fmul
 1242 0086 031C     		add	r3, r0, #0
 1243 0088 201C     		add	r0, r4, #0
 1244 008a 191C     		add	r1, r3, #0
 1245 008c FFF7FEFF 		bl	__aeabi_fadd
 1246 0090 031C     		add	r3, r0, #0
 1247 0092 1C1C     		add	r4, r3, #0
 1248 0094 7868     		ldr	r0, [r7, #4]
 1249 0096 7968     		ldr	r1, [r7, #4]
 1250 0098 FFF7FEFF 		bl	__aeabi_fmul
 1251 009c 031C     		add	r3, r0, #0
 1252 009e 201C     		add	r0, r4, #0
 1253 00a0 191C     		add	r1, r3, #0
 1254 00a2 FFF7FEFF 		bl	__aeabi_fadd
 1255 00a6 031C     		add	r3, r0, #0
 1256 00a8 181C     		add	r0, r3, #0
 1257 00aa FFF7FEFF 		bl	__aeabi_f2d
 1258 00ae 031C     		mov	r3, r0
 1259 00b0 0C1C     		mov	r4, r1
 1260 00b2 181C     		mov	r0, r3
 1261 00b4 211C     		mov	r1, r4
 1262 00b6 FFF7FEFF 		bl	sqrt
 1263 00ba 031C     		mov	r3, r0
 1264 00bc 0C1C     		mov	r4, r1
 1265 00be 181C     		mov	r0, r3
 1266 00c0 211C     		mov	r1, r4
 1267 00c2 FFF7FEFF 		bl	__aeabi_d2f
 1268 00c6 031C     		add	r3, r0, #0
 1269 00c8 FE20     		mov	r0, #254
 1270 00ca 8005     		lsl	r0, r0, #22
 1271 00cc 191C     		add	r1, r3, #0
 1272 00ce FFF7FEFF 		bl	__aeabi_fdiv
 1273 00d2 031C     		add	r3, r0, #0
 1274 00d4 BB62     		str	r3, [r7, #40]
 315:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	fdelta6DOF = (float) asin((fGx * fBx + fGy * fBy + fGz * fBz) * rmodG * rmodB) * RadToDeg;
 1275              		.loc 1 315 0
 1276 00d6 3868     		ldr	r0, [r7]
 1277 00d8 F968     		ldr	r1, [r7, #12]
 1278 00da FFF7FEFF 		bl	__aeabi_fmul
 1279 00de 031C     		add	r3, r0, #0
 1280 00e0 1C1C     		add	r4, r3, #0
 1281 00e2 B86C     		ldr	r0, [r7, #72]
 1282 00e4 B968     		ldr	r1, [r7, #8]
 1283 00e6 FFF7FEFF 		bl	__aeabi_fmul
 1284 00ea 031C     		add	r3, r0, #0
 1285 00ec 201C     		add	r0, r4, #0
 1286 00ee 191C     		add	r1, r3, #0
 1287 00f0 FFF7FEFF 		bl	__aeabi_fadd
 1288 00f4 031C     		add	r3, r0, #0
 1289 00f6 1C1C     		add	r4, r3, #0
 1290 00f8 F86C     		ldr	r0, [r7, #76]
 1291 00fa 7968     		ldr	r1, [r7, #4]
 1292 00fc FFF7FEFF 		bl	__aeabi_fmul
 1293 0100 031C     		add	r3, r0, #0
 1294 0102 201C     		add	r0, r4, #0
 1295 0104 191C     		add	r1, r3, #0
 1296 0106 FFF7FEFF 		bl	__aeabi_fadd
 1297 010a 031C     		add	r3, r0, #0
 1298 010c 181C     		add	r0, r3, #0
 1299 010e F96A     		ldr	r1, [r7, #44]
 1300 0110 FFF7FEFF 		bl	__aeabi_fmul
 1301 0114 031C     		add	r3, r0, #0
 1302 0116 181C     		add	r0, r3, #0
 1303 0118 B96A     		ldr	r1, [r7, #40]
 1304 011a FFF7FEFF 		bl	__aeabi_fmul
 1305 011e 031C     		add	r3, r0, #0
 1306 0120 181C     		add	r0, r3, #0
 1307 0122 FFF7FEFF 		bl	__aeabi_f2d
 1308 0126 031C     		mov	r3, r0
 1309 0128 0C1C     		mov	r4, r1
 1310 012a 181C     		mov	r0, r3
 1311 012c 211C     		mov	r1, r4
 1312 012e FFF7FEFF 		bl	asin
 1313 0132 031C     		mov	r3, r0
 1314 0134 0C1C     		mov	r4, r1
 1315 0136 181C     		mov	r0, r3
 1316 0138 211C     		mov	r1, r4
 1317 013a FFF7FEFF 		bl	__aeabi_d2f
 1318 013e 031C     		add	r3, r0, #0
 1319 0140 181C     		add	r0, r3, #0
 1320 0142 A349     		ldr	r1, .L50
 1321 0144 FFF7FEFF 		bl	__aeabi_fmul
 1322 0148 031C     		add	r3, r0, #0
 1323 014a 1A1C     		add	r2, r3, #0
 1324 014c A14B     		ldr	r3, .L50+4
 1325 014e 1A60     		str	r2, [r3]
 316:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 317:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// calculate roll angle Phi (-180deg, 180deg) 
 318:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	fPhi6DOF = (float) atan2(fGy,fGz) * RadToDeg;
 1326              		.loc 1 318 0
 1327 0150 B86C     		ldr	r0, [r7, #72]
 1328 0152 FFF7FEFF 		bl	__aeabi_f2d
 1329 0156 051C     		mov	r5, r0
 1330 0158 0E1C     		mov	r6, r1
 1331 015a F86C     		ldr	r0, [r7, #76]
 1332 015c FFF7FEFF 		bl	__aeabi_f2d
 1333 0160 031C     		mov	r3, r0
 1334 0162 0C1C     		mov	r4, r1
 1335 0164 281C     		mov	r0, r5
 1336 0166 311C     		mov	r1, r6
 1337 0168 1A1C     		mov	r2, r3
 1338 016a 231C     		mov	r3, r4
 1339 016c FFF7FEFF 		bl	atan2
 1340 0170 031C     		mov	r3, r0
 1341 0172 0C1C     		mov	r4, r1
 1342 0174 181C     		mov	r0, r3
 1343 0176 211C     		mov	r1, r4
 1344 0178 FFF7FEFF 		bl	__aeabi_d2f
 1345 017c 031C     		add	r3, r0, #0
 1346 017e 181C     		add	r0, r3, #0
 1347 0180 9349     		ldr	r1, .L50
 1348 0182 FFF7FEFF 		bl	__aeabi_fmul
 1349 0186 031C     		add	r3, r0, #0
 1350 0188 1A1C     		add	r2, r3, #0
 1351 018a 934B     		ldr	r3, .L50+8
 1352 018c 1A60     		str	r2, [r3]
 319:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	sinPhi = (float) sin(fPhi6DOF * DegToRad);  
 1353              		.loc 1 319 0
 1354 018e 924B     		ldr	r3, .L50+8
 1355 0190 1B68     		ldr	r3, [r3]
 1356 0192 181C     		add	r0, r3, #0
 1357 0194 9149     		ldr	r1, .L50+12
 1358 0196 FFF7FEFF 		bl	__aeabi_fmul
 1359 019a 031C     		add	r3, r0, #0
 1360 019c 181C     		add	r0, r3, #0
 1361 019e FFF7FEFF 		bl	__aeabi_f2d
 1362 01a2 031C     		mov	r3, r0
 1363 01a4 0C1C     		mov	r4, r1
 1364 01a6 181C     		mov	r0, r3
 1365 01a8 211C     		mov	r1, r4
 1366 01aa FFF7FEFF 		bl	sin
 1367 01ae 031C     		mov	r3, r0
 1368 01b0 0C1C     		mov	r4, r1
 1369 01b2 181C     		mov	r0, r3
 1370 01b4 211C     		mov	r1, r4
 1371 01b6 FFF7FEFF 		bl	__aeabi_d2f
 1372 01ba 031C     		add	r3, r0, #0
 1373 01bc 7B62     		str	r3, [r7, #36]
 320:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	cosPhi = (float) cos(fPhi6DOF * DegToRad);
 1374              		.loc 1 320 0
 1375 01be 864B     		ldr	r3, .L50+8
 1376 01c0 1B68     		ldr	r3, [r3]
 1377 01c2 181C     		add	r0, r3, #0
 1378 01c4 8549     		ldr	r1, .L50+12
 1379 01c6 FFF7FEFF 		bl	__aeabi_fmul
 1380 01ca 031C     		add	r3, r0, #0
 1381 01cc 181C     		add	r0, r3, #0
 1382 01ce FFF7FEFF 		bl	__aeabi_f2d
 1383 01d2 031C     		mov	r3, r0
 1384 01d4 0C1C     		mov	r4, r1
 1385 01d6 181C     		mov	r0, r3
 1386 01d8 211C     		mov	r1, r4
 1387 01da FFF7FEFF 		bl	cos
 1388 01de 031C     		mov	r3, r0
 1389 01e0 0C1C     		mov	r4, r1
 1390 01e2 181C     		mov	r0, r3
 1391 01e4 211C     		mov	r1, r4
 1392 01e6 FFF7FEFF 		bl	__aeabi_d2f
 1393 01ea 031C     		add	r3, r0, #0
 1394 01ec 3B62     		str	r3, [r7, #32]
 321:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 322:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// de-rotate by roll angle Phi 
 323:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	fBfy = fBy * cosPhi - fBz * sinPhi;
 1395              		.loc 1 323 0
 1396 01ee B868     		ldr	r0, [r7, #8]
 1397 01f0 396A     		ldr	r1, [r7, #32]
 1398 01f2 FFF7FEFF 		bl	__aeabi_fmul
 1399 01f6 031C     		add	r3, r0, #0
 1400 01f8 1C1C     		add	r4, r3, #0
 1401 01fa 7868     		ldr	r0, [r7, #4]
 1402 01fc 796A     		ldr	r1, [r7, #36]
 1403 01fe FFF7FEFF 		bl	__aeabi_fmul
 1404 0202 031C     		add	r3, r0, #0
 1405 0204 201C     		add	r0, r4, #0
 1406 0206 191C     		add	r1, r3, #0
 1407 0208 FFF7FEFF 		bl	__aeabi_fsub
 1408 020c 031C     		add	r3, r0, #0
 1409 020e 1A1C     		add	r2, r3, #0
 1410 0210 734B     		ldr	r3, .L50+16
 1411 0212 1A60     		str	r2, [r3]
 324:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	fBz = fBy * sinPhi + fBz * cosPhi;
 1412              		.loc 1 324 0
 1413 0214 B868     		ldr	r0, [r7, #8]
 1414 0216 796A     		ldr	r1, [r7, #36]
 1415 0218 FFF7FEFF 		bl	__aeabi_fmul
 1416 021c 031C     		add	r3, r0, #0
 1417 021e 1C1C     		add	r4, r3, #0
 1418 0220 7868     		ldr	r0, [r7, #4]
 1419 0222 396A     		ldr	r1, [r7, #32]
 1420 0224 FFF7FEFF 		bl	__aeabi_fmul
 1421 0228 031C     		add	r3, r0, #0
 1422 022a 201C     		add	r0, r4, #0
 1423 022c 191C     		add	r1, r3, #0
 1424 022e FFF7FEFF 		bl	__aeabi_fadd
 1425 0232 031C     		add	r3, r0, #0
 1426 0234 7B60     		str	r3, [r7, #4]
 325:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	fGz = fGy * sinPhi + fGz * cosPhi;
 1427              		.loc 1 325 0
 1428 0236 B86C     		ldr	r0, [r7, #72]
 1429 0238 796A     		ldr	r1, [r7, #36]
 1430 023a FFF7FEFF 		bl	__aeabi_fmul
 1431 023e 031C     		add	r3, r0, #0
 1432 0240 1C1C     		add	r4, r3, #0
 1433 0242 F86C     		ldr	r0, [r7, #76]
 1434 0244 396A     		ldr	r1, [r7, #32]
 1435 0246 FFF7FEFF 		bl	__aeabi_fmul
 1436 024a 031C     		add	r3, r0, #0
 1437 024c 201C     		add	r0, r4, #0
 1438 024e 191C     		add	r1, r3, #0
 1439 0250 FFF7FEFF 		bl	__aeabi_fadd
 1440 0254 031C     		add	r3, r0, #0
 1441 0256 FB64     		str	r3, [r7, #76]
 326:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 327:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// check for division by zero and calculate pitch angle Theta (-90deg, 90deg) 
 328:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	if (fGz == 0.0F)
 1442              		.loc 1 328 0
 1443 0258 F86C     		ldr	r0, [r7, #76]
 1444 025a 0021     		mov	r1, #0
 1445 025c FFF7FEFF 		bl	__aeabi_fcmpeq
 1446 0260 031C     		mov	r3, r0
 1447 0262 002B     		cmp	r3, #0
 1448 0264 0ED0     		beq	.L48
 1449              	.L45:
 329:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	{
 330:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		if (fGx >= 0.0F) fThe6DOF = -90.0F;
 1450              		.loc 1 330 0
 1451 0266 3868     		ldr	r0, [r7]
 1452 0268 0021     		mov	r1, #0
 1453 026a FFF7FEFF 		bl	__aeabi_fcmpge
 1454 026e 031C     		mov	r3, r0
 1455 0270 002B     		cmp	r3, #0
 1456 0272 03D0     		beq	.L49
 1457              	.L46:
 1458              		.loc 1 330 0 is_stmt 0
 1459 0274 5B4B     		ldr	r3, .L50+20
 1460 0276 5C4A     		ldr	r2, .L50+24
 1461 0278 1A60     		str	r2, [r3]
 1462 027a 24E0     		b	.L39
 1463              	.L49:
 331:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		else fThe6DOF = 90.0F;
 1464              		.loc 1 331 0 is_stmt 1
 1465 027c 594B     		ldr	r3, .L50+20
 1466 027e 5B4A     		ldr	r2, .L50+28
 1467 0280 1A60     		str	r2, [r3]
 1468 0282 20E0     		b	.L39
 1469              	.L48:
 332:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	}
 333:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	else
 334:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		fThe6DOF = (float)atan(-fGx / fGz) * RadToDeg;
 1470              		.loc 1 334 0
 1471 0284 3B68     		ldr	r3, [r7]
 1472 0286 8022     		mov	r2, #128
 1473 0288 1206     		lsl	r2, r2, #24
 1474 028a 5340     		eor	r3, r2
 1475 028c 181C     		add	r0, r3, #0
 1476 028e F96C     		ldr	r1, [r7, #76]
 1477 0290 FFF7FEFF 		bl	__aeabi_fdiv
 1478 0294 031C     		add	r3, r0, #0
 1479 0296 181C     		add	r0, r3, #0
 1480 0298 FFF7FEFF 		bl	__aeabi_f2d
 1481 029c 031C     		mov	r3, r0
 1482 029e 0C1C     		mov	r4, r1
 1483 02a0 181C     		mov	r0, r3
 1484 02a2 211C     		mov	r1, r4
 1485 02a4 FFF7FEFF 		bl	atan
 1486 02a8 031C     		mov	r3, r0
 1487 02aa 0C1C     		mov	r4, r1
 1488 02ac 181C     		mov	r0, r3
 1489 02ae 211C     		mov	r1, r4
 1490 02b0 FFF7FEFF 		bl	__aeabi_d2f
 1491 02b4 031C     		add	r3, r0, #0
 1492 02b6 181C     		add	r0, r3, #0
 1493 02b8 4549     		ldr	r1, .L50
 1494 02ba FFF7FEFF 		bl	__aeabi_fmul
 1495 02be 031C     		add	r3, r0, #0
 1496 02c0 1A1C     		add	r2, r3, #0
 1497 02c2 484B     		ldr	r3, .L50+20
 1498 02c4 1A60     		str	r2, [r3]
 1499              	.L39:
 335:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	sinThe = (float) sin(fThe6DOF * DegToRad);	
 1500              		.loc 1 335 0
 1501 02c6 474B     		ldr	r3, .L50+20
 1502 02c8 1B68     		ldr	r3, [r3]
 1503 02ca 181C     		add	r0, r3, #0
 1504 02cc 4349     		ldr	r1, .L50+12
 1505 02ce FFF7FEFF 		bl	__aeabi_fmul
 1506 02d2 031C     		add	r3, r0, #0
 1507 02d4 181C     		add	r0, r3, #0
 1508 02d6 FFF7FEFF 		bl	__aeabi_f2d
 1509 02da 031C     		mov	r3, r0
 1510 02dc 0C1C     		mov	r4, r1
 1511 02de 181C     		mov	r0, r3
 1512 02e0 211C     		mov	r1, r4
 1513 02e2 FFF7FEFF 		bl	sin
 1514 02e6 031C     		mov	r3, r0
 1515 02e8 0C1C     		mov	r4, r1
 1516 02ea 181C     		mov	r0, r3
 1517 02ec 211C     		mov	r1, r4
 1518 02ee FFF7FEFF 		bl	__aeabi_d2f
 1519 02f2 031C     		add	r3, r0, #0
 1520 02f4 FB61     		str	r3, [r7, #28]
 336:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	cosThe = (float) cos(fThe6DOF * DegToRad);	
 1521              		.loc 1 336 0
 1522 02f6 3B4B     		ldr	r3, .L50+20
 1523 02f8 1B68     		ldr	r3, [r3]
 1524 02fa 181C     		add	r0, r3, #0
 1525 02fc 3749     		ldr	r1, .L50+12
 1526 02fe FFF7FEFF 		bl	__aeabi_fmul
 1527 0302 031C     		add	r3, r0, #0
 1528 0304 181C     		add	r0, r3, #0
 1529 0306 FFF7FEFF 		bl	__aeabi_f2d
 1530 030a 031C     		mov	r3, r0
 1531 030c 0C1C     		mov	r4, r1
 1532 030e 181C     		mov	r0, r3
 1533 0310 211C     		mov	r1, r4
 1534 0312 FFF7FEFF 		bl	cos
 1535 0316 031C     		mov	r3, r0
 1536 0318 0C1C     		mov	r4, r1
 1537 031a 181C     		mov	r0, r3
 1538 031c 211C     		mov	r1, r4
 1539 031e FFF7FEFF 		bl	__aeabi_d2f
 1540 0322 031C     		add	r3, r0, #0
 1541 0324 BB61     		str	r3, [r7, #24]
 337:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 338:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// de-rotate by pitch angle Theta 
 339:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	fBfx = fBx * cosThe + fBz * sinThe;
 1542              		.loc 1 339 0
 1543 0326 F868     		ldr	r0, [r7, #12]
 1544 0328 B969     		ldr	r1, [r7, #24]
 1545 032a FFF7FEFF 		bl	__aeabi_fmul
 1546 032e 031C     		add	r3, r0, #0
 1547 0330 1C1C     		add	r4, r3, #0
 1548 0332 7868     		ldr	r0, [r7, #4]
 1549 0334 F969     		ldr	r1, [r7, #28]
 1550 0336 FFF7FEFF 		bl	__aeabi_fmul
 1551 033a 031C     		add	r3, r0, #0
 1552 033c 201C     		add	r0, r4, #0
 1553 033e 191C     		add	r1, r3, #0
 1554 0340 FFF7FEFF 		bl	__aeabi_fadd
 1555 0344 031C     		add	r3, r0, #0
 1556 0346 1A1C     		add	r2, r3, #0
 1557 0348 294B     		ldr	r3, .L50+32
 1558 034a 1A60     		str	r2, [r3]
 340:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	fBfz = -fBx * sinThe + fBz * cosThe;
 1559              		.loc 1 340 0
 1560 034c FB68     		ldr	r3, [r7, #12]
 1561 034e 8022     		mov	r2, #128
 1562 0350 1206     		lsl	r2, r2, #24
 1563 0352 5340     		eor	r3, r2
 1564 0354 181C     		add	r0, r3, #0
 1565 0356 F969     		ldr	r1, [r7, #28]
 1566 0358 FFF7FEFF 		bl	__aeabi_fmul
 1567 035c 031C     		add	r3, r0, #0
 1568 035e 1C1C     		add	r4, r3, #0
 1569 0360 7868     		ldr	r0, [r7, #4]
 1570 0362 B969     		ldr	r1, [r7, #24]
 1571 0364 FFF7FEFF 		bl	__aeabi_fmul
 1572 0368 031C     		add	r3, r0, #0
 1573 036a 201C     		add	r0, r4, #0
 1574 036c 191C     		add	r1, r3, #0
 1575 036e FFF7FEFF 		bl	__aeabi_fadd
 1576 0372 031C     		add	r3, r0, #0
 1577 0374 1A1C     		add	r2, r3, #0
 1578 0376 1F4B     		ldr	r3, .L50+36
 1579 0378 1A60     		str	r2, [r3]
 341:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 342:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// calculate yaw = ecompass angle Psi (0deg, 360deg) with or without tilt compensation 
 343:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	if (TILTCORRACTIVE)
 1580              		.loc 1 343 0
 1581 037a 1F4B     		ldr	r3, .L50+40
 1582 037c 1B68     		ldr	r3, [r3]
 1583 037e 002B     		cmp	r3, #0
 1584 0380 3ED0     		beq	.L40
 344:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		fPsi6DOF = (float)atan2(-fBfy, fBfx) * RadToDeg; 
 1585              		.loc 1 344 0
 1586 0382 174B     		ldr	r3, .L50+16
 1587 0384 1B68     		ldr	r3, [r3]
 1588 0386 8022     		mov	r2, #128
 1589 0388 1206     		lsl	r2, r2, #24
 1590 038a 5340     		eor	r3, r2
 1591 038c 181C     		add	r0, r3, #0
 1592 038e FFF7FEFF 		bl	__aeabi_f2d
 1593 0392 051C     		mov	r5, r0
 1594 0394 0E1C     		mov	r6, r1
 1595 0396 164B     		ldr	r3, .L50+32
 1596 0398 1B68     		ldr	r3, [r3]
 1597 039a 181C     		add	r0, r3, #0
 1598 039c FFF7FEFF 		bl	__aeabi_f2d
 1599 03a0 031C     		mov	r3, r0
 1600 03a2 0C1C     		mov	r4, r1
 1601 03a4 281C     		mov	r0, r5
 1602 03a6 311C     		mov	r1, r6
 1603 03a8 1A1C     		mov	r2, r3
 1604 03aa 231C     		mov	r3, r4
 1605 03ac FFF7FEFF 		bl	atan2
 1606 03b0 031C     		mov	r3, r0
 1607 03b2 0C1C     		mov	r4, r1
 1608 03b4 181C     		mov	r0, r3
 1609 03b6 211C     		mov	r1, r4
 1610 03b8 FFF7FEFF 		bl	__aeabi_d2f
 1611 03bc 031C     		add	r3, r0, #0
 1612 03be 181C     		add	r0, r3, #0
 1613 03c0 0349     		ldr	r1, .L50
 1614 03c2 FFF7FEFF 		bl	__aeabi_fmul
 1615 03c6 031C     		add	r3, r0, #0
 1616 03c8 1A1C     		add	r2, r3, #0
 1617 03ca 0C4B     		ldr	r3, .L50+44
 1618 03cc 1A60     		str	r2, [r3]
 1619 03ce 3AE0     		b	.L41
 1620              	.L51:
 1621              		.align	2
 1622              	.L50:
 1623 03d0 E12E6542 		.word	1113927393
 1624 03d4 00000000 		.word	fdelta6DOF
 1625 03d8 00000000 		.word	fPhi6DOF
 1626 03dc 35FA8E3C 		.word	1016003125
 1627 03e0 00000000 		.word	fBfy
 1628 03e4 00000000 		.word	fThe6DOF
 1629 03e8 0000B4C2 		.word	-1028390912
 1630 03ec 0000B442 		.word	1119092736
 1631 03f0 00000000 		.word	fBfx
 1632 03f4 00000000 		.word	fBfz
 1633 03f8 00000000 		.word	TILTCORRACTIVE
 1634 03fc 00000000 		.word	fPsi6DOF
 1635              	.L40:
 345:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	else
 346:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		fPsi6DOF = (float)atan2(-fBy, fBx) * RadToDeg; 
 1636              		.loc 1 346 0
 1637 0400 BB68     		ldr	r3, [r7, #8]
 1638 0402 8022     		mov	r2, #128
 1639 0404 1206     		lsl	r2, r2, #24
 1640 0406 5340     		eor	r3, r2
 1641 0408 181C     		add	r0, r3, #0
 1642 040a FFF7FEFF 		bl	__aeabi_f2d
 1643 040e 051C     		mov	r5, r0
 1644 0410 0E1C     		mov	r6, r1
 1645 0412 F868     		ldr	r0, [r7, #12]
 1646 0414 FFF7FEFF 		bl	__aeabi_f2d
 1647 0418 031C     		mov	r3, r0
 1648 041a 0C1C     		mov	r4, r1
 1649 041c 281C     		mov	r0, r5
 1650 041e 311C     		mov	r1, r6
 1651 0420 1A1C     		mov	r2, r3
 1652 0422 231C     		mov	r3, r4
 1653 0424 FFF7FEFF 		bl	atan2
 1654 0428 031C     		mov	r3, r0
 1655 042a 0C1C     		mov	r4, r1
 1656 042c 181C     		mov	r0, r3
 1657 042e 211C     		mov	r1, r4
 1658 0430 FFF7FEFF 		bl	__aeabi_d2f
 1659 0434 031C     		add	r3, r0, #0
 1660 0436 181C     		add	r0, r3, #0
 1661 0438 7449     		ldr	r1, .L52
 1662 043a FFF7FEFF 		bl	__aeabi_fmul
 1663 043e 031C     		add	r3, r0, #0
 1664 0440 1A1C     		add	r2, r3, #0
 1665 0442 734B     		ldr	r3, .L52+4
 1666 0444 1A60     		str	r2, [r3]
 1667              	.L41:
 347:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	sinPsi = (float) sin(fPsi6DOF * DegToRad);	
 1668              		.loc 1 347 0
 1669 0446 724B     		ldr	r3, .L52+4
 1670 0448 1B68     		ldr	r3, [r3]
 1671 044a 181C     		add	r0, r3, #0
 1672 044c 7149     		ldr	r1, .L52+8
 1673 044e FFF7FEFF 		bl	__aeabi_fmul
 1674 0452 031C     		add	r3, r0, #0
 1675 0454 181C     		add	r0, r3, #0
 1676 0456 FFF7FEFF 		bl	__aeabi_f2d
 1677 045a 031C     		mov	r3, r0
 1678 045c 0C1C     		mov	r4, r1
 1679 045e 181C     		mov	r0, r3
 1680 0460 211C     		mov	r1, r4
 1681 0462 FFF7FEFF 		bl	sin
 1682 0466 031C     		mov	r3, r0
 1683 0468 0C1C     		mov	r4, r1
 1684 046a 181C     		mov	r0, r3
 1685 046c 211C     		mov	r1, r4
 1686 046e FFF7FEFF 		bl	__aeabi_d2f
 1687 0472 031C     		add	r3, r0, #0
 1688 0474 7B61     		str	r3, [r7, #20]
 348:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	cosPsi = (float) cos(fPsi6DOF * DegToRad);
 1689              		.loc 1 348 0
 1690 0476 664B     		ldr	r3, .L52+4
 1691 0478 1B68     		ldr	r3, [r3]
 1692 047a 181C     		add	r0, r3, #0
 1693 047c 6549     		ldr	r1, .L52+8
 1694 047e FFF7FEFF 		bl	__aeabi_fmul
 1695 0482 031C     		add	r3, r0, #0
 1696 0484 181C     		add	r0, r3, #0
 1697 0486 FFF7FEFF 		bl	__aeabi_f2d
 1698 048a 031C     		mov	r3, r0
 1699 048c 0C1C     		mov	r4, r1
 1700 048e 181C     		mov	r0, r3
 1701 0490 211C     		mov	r1, r4
 1702 0492 FFF7FEFF 		bl	cos
 1703 0496 031C     		mov	r3, r0
 1704 0498 0C1C     		mov	r4, r1
 1705 049a 181C     		mov	r0, r3
 1706 049c 211C     		mov	r1, r4
 1707 049e FFF7FEFF 		bl	__aeabi_d2f
 1708 04a2 031C     		add	r3, r0, #0
 1709 04a4 3B61     		str	r3, [r7, #16]
 349:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	if (fPsi6DOF < 0.0F) fPsi6DOF += 360.0F;
 1710              		.loc 1 349 0
 1711 04a6 5A4B     		ldr	r3, .L52+4
 1712 04a8 1B68     		ldr	r3, [r3]
 1713 04aa 181C     		add	r0, r3, #0
 1714 04ac 0021     		mov	r1, #0
 1715 04ae FFF7FEFF 		bl	__aeabi_fcmplt
 1716 04b2 031C     		mov	r3, r0
 1717 04b4 002B     		cmp	r3, #0
 1718 04b6 09D0     		beq	.L42
 1719              	.L47:
 1720              		.loc 1 349 0 is_stmt 0
 1721 04b8 554B     		ldr	r3, .L52+4
 1722 04ba 1B68     		ldr	r3, [r3]
 1723 04bc 181C     		add	r0, r3, #0
 1724 04be 5649     		ldr	r1, .L52+12
 1725 04c0 FFF7FEFF 		bl	__aeabi_fadd
 1726 04c4 031C     		add	r3, r0, #0
 1727 04c6 1A1C     		add	r2, r3, #0
 1728 04c8 514B     		ldr	r3, .L52+4
 1729 04ca 1A60     		str	r2, [r3]
 1730              	.L42:
 350:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 351:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// for NED, the compass heading Rho equals the yaw angle Psi 
 352:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	fRho6DOF = fPsi6DOF;
 1731              		.loc 1 352 0 is_stmt 1
 1732 04cc 504B     		ldr	r3, .L52+4
 1733 04ce 1A68     		ldr	r2, [r3]
 1734 04d0 524B     		ldr	r3, .L52+16
 1735 04d2 1A60     		str	r2, [r3]
 353:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 354:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// calculate the current orientation matrix fR6DOFn 
 355:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****         //cosPsi = cosThe * cosPsi;
 356:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	fR6DOFn[0][0] = cosThe * cosPsi;
 1736              		.loc 1 356 0
 1737 04d4 524B     		ldr	r3, .L52+20
 1738 04d6 1C68     		ldr	r4, [r3]
 1739 04d8 B869     		ldr	r0, [r7, #24]
 1740 04da 3969     		ldr	r1, [r7, #16]
 1741 04dc FFF7FEFF 		bl	__aeabi_fmul
 1742 04e0 031C     		add	r3, r0, #0
 1743 04e2 2360     		str	r3, [r4]
 357:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	fR6DOFn[0][1] = cosThe * sinPsi;
 1744              		.loc 1 357 0
 1745 04e4 4E4B     		ldr	r3, .L52+20
 1746 04e6 1B68     		ldr	r3, [r3]
 1747 04e8 1C1D     		add	r4, r3, #4
 1748 04ea B869     		ldr	r0, [r7, #24]
 1749 04ec 7969     		ldr	r1, [r7, #20]
 1750 04ee FFF7FEFF 		bl	__aeabi_fmul
 1751 04f2 031C     		add	r3, r0, #0
 1752 04f4 2360     		str	r3, [r4]
 358:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	fR6DOFn[0][2] = -sinThe;
 1753              		.loc 1 358 0
 1754 04f6 4A4B     		ldr	r3, .L52+20
 1755 04f8 1B68     		ldr	r3, [r3]
 1756 04fa 0833     		add	r3, r3, #8
 1757 04fc FA69     		ldr	r2, [r7, #28]
 1758 04fe 8021     		mov	r1, #128
 1759 0500 0906     		lsl	r1, r1, #24
 1760 0502 4A40     		eor	r2, r1
 1761 0504 1A60     		str	r2, [r3]
 359:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	fR6DOFn[1][0] = cosPsi * sinThe * sinPhi - cosPhi * sinPsi;
 1762              		.loc 1 359 0
 1763 0506 464B     		ldr	r3, .L52+20
 1764 0508 5C68     		ldr	r4, [r3, #4]
 1765 050a 3869     		ldr	r0, [r7, #16]
 1766 050c F969     		ldr	r1, [r7, #28]
 1767 050e FFF7FEFF 		bl	__aeabi_fmul
 1768 0512 031C     		add	r3, r0, #0
 1769 0514 181C     		add	r0, r3, #0
 1770 0516 796A     		ldr	r1, [r7, #36]
 1771 0518 FFF7FEFF 		bl	__aeabi_fmul
 1772 051c 031C     		add	r3, r0, #0
 1773 051e 1D1C     		add	r5, r3, #0
 1774 0520 386A     		ldr	r0, [r7, #32]
 1775 0522 7969     		ldr	r1, [r7, #20]
 1776 0524 FFF7FEFF 		bl	__aeabi_fmul
 1777 0528 031C     		add	r3, r0, #0
 1778 052a 281C     		add	r0, r5, #0
 1779 052c 191C     		add	r1, r3, #0
 1780 052e FFF7FEFF 		bl	__aeabi_fsub
 1781 0532 031C     		add	r3, r0, #0
 1782 0534 2360     		str	r3, [r4]
 360:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	fR6DOFn[1][1] = cosPhi * cosPsi + sinPhi * sinThe * sinPsi;
 1783              		.loc 1 360 0
 1784 0536 3A4B     		ldr	r3, .L52+20
 1785 0538 5B68     		ldr	r3, [r3, #4]
 1786 053a 1C1D     		add	r4, r3, #4
 1787 053c 386A     		ldr	r0, [r7, #32]
 1788 053e 3969     		ldr	r1, [r7, #16]
 1789 0540 FFF7FEFF 		bl	__aeabi_fmul
 1790 0544 031C     		add	r3, r0, #0
 1791 0546 1D1C     		add	r5, r3, #0
 1792 0548 786A     		ldr	r0, [r7, #36]
 1793 054a F969     		ldr	r1, [r7, #28]
 1794 054c FFF7FEFF 		bl	__aeabi_fmul
 1795 0550 031C     		add	r3, r0, #0
 1796 0552 181C     		add	r0, r3, #0
 1797 0554 7969     		ldr	r1, [r7, #20]
 1798 0556 FFF7FEFF 		bl	__aeabi_fmul
 1799 055a 031C     		add	r3, r0, #0
 1800 055c 281C     		add	r0, r5, #0
 1801 055e 191C     		add	r1, r3, #0
 1802 0560 FFF7FEFF 		bl	__aeabi_fadd
 1803 0564 031C     		add	r3, r0, #0
 1804 0566 2360     		str	r3, [r4]
 361:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	fR6DOFn[1][2] = cosThe * sinPhi; 
 1805              		.loc 1 361 0
 1806 0568 2D4B     		ldr	r3, .L52+20
 1807 056a 5B68     		ldr	r3, [r3, #4]
 1808 056c 1C1C     		mov	r4, r3
 1809 056e 0834     		add	r4, r4, #8
 1810 0570 B869     		ldr	r0, [r7, #24]
 1811 0572 796A     		ldr	r1, [r7, #36]
 1812 0574 FFF7FEFF 		bl	__aeabi_fmul
 1813 0578 031C     		add	r3, r0, #0
 1814 057a 2360     		str	r3, [r4]
 362:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	fR6DOFn[2][0] = cosPhi * cosPsi * sinThe + sinPhi * sinPsi;
 1815              		.loc 1 362 0
 1816 057c 284B     		ldr	r3, .L52+20
 1817 057e 9C68     		ldr	r4, [r3, #8]
 1818 0580 386A     		ldr	r0, [r7, #32]
 1819 0582 3969     		ldr	r1, [r7, #16]
 1820 0584 FFF7FEFF 		bl	__aeabi_fmul
 1821 0588 031C     		add	r3, r0, #0
 1822 058a 181C     		add	r0, r3, #0
 1823 058c F969     		ldr	r1, [r7, #28]
 1824 058e FFF7FEFF 		bl	__aeabi_fmul
 1825 0592 031C     		add	r3, r0, #0
 1826 0594 1D1C     		add	r5, r3, #0
 1827 0596 786A     		ldr	r0, [r7, #36]
 1828 0598 7969     		ldr	r1, [r7, #20]
 1829 059a FFF7FEFF 		bl	__aeabi_fmul
 1830 059e 031C     		add	r3, r0, #0
 1831 05a0 281C     		add	r0, r5, #0
 1832 05a2 191C     		add	r1, r3, #0
 1833 05a4 FFF7FEFF 		bl	__aeabi_fadd
 1834 05a8 031C     		add	r3, r0, #0
 1835 05aa 2360     		str	r3, [r4]
 363:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	fR6DOFn[2][1] = cosPhi * sinThe * sinPsi - cosPsi * sinPhi;
 1836              		.loc 1 363 0
 1837 05ac 1C4B     		ldr	r3, .L52+20
 1838 05ae 9B68     		ldr	r3, [r3, #8]
 1839 05b0 1C1D     		add	r4, r3, #4
 1840 05b2 386A     		ldr	r0, [r7, #32]
 1841 05b4 F969     		ldr	r1, [r7, #28]
 1842 05b6 FFF7FEFF 		bl	__aeabi_fmul
 1843 05ba 031C     		add	r3, r0, #0
 1844 05bc 181C     		add	r0, r3, #0
 1845 05be 7969     		ldr	r1, [r7, #20]
 1846 05c0 FFF7FEFF 		bl	__aeabi_fmul
 1847 05c4 031C     		add	r3, r0, #0
 1848 05c6 1D1C     		add	r5, r3, #0
 1849 05c8 3869     		ldr	r0, [r7, #16]
 1850 05ca 796A     		ldr	r1, [r7, #36]
 1851 05cc FFF7FEFF 		bl	__aeabi_fmul
 1852 05d0 031C     		add	r3, r0, #0
 1853 05d2 281C     		add	r0, r5, #0
 1854 05d4 191C     		add	r1, r3, #0
 1855 05d6 FFF7FEFF 		bl	__aeabi_fsub
 1856 05da 031C     		add	r3, r0, #0
 1857 05dc 2360     		str	r3, [r4]
 364:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	fR6DOFn[2][2] = cosThe * cosPhi; 
 1858              		.loc 1 364 0
 1859 05de 104B     		ldr	r3, .L52+20
 1860 05e0 9B68     		ldr	r3, [r3, #8]
 1861 05e2 1C1C     		mov	r4, r3
 1862 05e4 0834     		add	r4, r4, #8
 1863 05e6 B869     		ldr	r0, [r7, #24]
 1864 05e8 396A     		ldr	r1, [r7, #32]
 1865 05ea FFF7FEFF 		bl	__aeabi_fmul
 1866 05ee 031C     		add	r3, r0, #0
 1867 05f0 2360     		str	r3, [r4]
 365:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 366:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****         //**************************************************************************//
 367:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// get the current orientation quaternion 
 368:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****         
 369:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****         fQuaternionFromRotationMatrix(fR6DOFn, &fqR6DOFn);
 1868              		.loc 1 369 0
 1869 05f2 0B4A     		ldr	r2, .L52+20
 1870 05f4 0B4B     		ldr	r3, .L52+24
 1871 05f6 101C     		mov	r0, r2
 1872 05f8 191C     		mov	r1, r3
 1873 05fa FFF7FEFF 		bl	fQuaternionFromRotationMatrix
 370:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 371:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// apply the low pass filter on the orientation 
 372:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	fLPFOrientationMatrix();
 1874              		.loc 1 372 0
 1875 05fe FFF7FEFF 		bl	fLPFOrientationMatrix
 373:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****         //**************************************************************************//
 374:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	return;
 1876              		.loc 1 374 0
 1877 0602 C046     		mov	r8, r8
 375:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** }
 1878              		.loc 1 375 0
 1879 0604 BD46     		mov	sp, r7
 1880 0606 0DB0     		add	sp, sp, #52
 1881              		@ sp needed for prologue
 1882 0608 F0BD     		pop	{r4, r5, r6, r7, pc}
 1883              	.L53:
 1884 060a C046     		.align	2
 1885              	.L52:
 1886 060c E12E6542 		.word	1113927393
 1887 0610 00000000 		.word	fPsi6DOF
 1888 0614 35FA8E3C 		.word	1016003125
 1889 0618 0000B443 		.word	1135869952
 1890 061c 00000000 		.word	fRho6DOF
 1891 0620 00000000 		.word	fR6DOFn
 1892 0624 00000000 		.word	fqR6DOFn
 1893              		.cfi_endproc
 1894              	.LFE4:
 1896              		.global	__aeabi_idivmod
 1897              		.global	__aeabi_fcmple
 1898              		.section	.rodata
 1899              		.align	2
 1900              	.LC57:
 1901 0000 0A0A4163 		.ascii	"\012\012Accepting new calibration solution\012\000"
 1901      63657074 
 1901      696E6720 
 1901      6E657720 
 1901      63616C69 
 1902 0026 0000     		.align	2
 1903              	.LC68:
 1904 0028 0A0A5265 		.ascii	"\012\012Rejecting new calibration solution\000"
 1904      6A656374 
 1904      696E6720 
 1904      6E657720 
 1904      63616C69 
 1905 004d 000000   		.align	2
 1906              	.LC70:
 1907 0050 0D202564 		.ascii	"\015 %d move board to calibrate \000"
 1907      206D6F76 
 1907      6520626F 
 1907      61726420 
 1907      746F2063 
 1908              		.section	.text.fCalibrationUpdate,"ax",%progbits
 1909              		.align	2
 1910              		.global	fCalibrationUpdate
 1911              		.code	16
 1912              		.thumb_func
 1914              	fCalibrationUpdate:
 1915              	.LFB5:
 376:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 377:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 378:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** void fCalibrationUpdate()
 379:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** {
 1916              		.loc 1 379 0
 1917              		.cfi_startproc
 1918 0000 80B5     		push	{r7, lr}
 1919              	.LCFI13:
 1920              		.cfi_def_cfa_offset 8
 1921              		.cfi_offset 7, -8
 1922              		.cfi_offset 14, -4
 1923 0002 00AF     		add	r7, sp, #0
 1924              	.LCFI14:
 1925              		.cfi_def_cfa_register 7
 380:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** // try to find an improved calibration if update is enabled     ///CALIBRATION
 381:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****   if (CALUPDACTIVE)
 1926              		.loc 1 381 0
 1927 0004 434B     		ldr	r3, .L67
 1928 0006 1B68     		ldr	r3, [r3]
 1929 0008 002B     		cmp	r3, #0
 1930 000a 00D1     		bne	.LCB1641
 1931 000c 80E0     		b	.L54	@long jump
 1932              	.LCB1641:
 382:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****   {
 383:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****     // check for enough data in magnetic buffer for a calibration
 384:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****     if (MagBufferCount >= MINEQUATIONS)
 1933              		.loc 1 384 0
 1934 000e 424B     		ldr	r3, .L67+4
 1935 0010 1B68     		ldr	r3, [r3]
 1936 0012 172B     		cmp	r3, #23
 1937 0014 00DC     		bgt	.LCB1645
 1938 0016 72E0     		b	.L56	@long jump
 1939              	.LCB1645:
 385:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****     {
 386:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****       // calibrate if this will be the first calibration or every CALINTERVAL iterations
 387:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****       if ((!validmagcal) || (validmagcal && !(loopcounter % CALINTERVAL)))
 1940              		.loc 1 387 0
 1941 0018 404B     		ldr	r3, .L67+8
 1942 001a 1B68     		ldr	r3, [r3]
 1943 001c 002B     		cmp	r3, #0
 1944 001e 0DD0     		beq	.L57
 1945              		.loc 1 387 0 is_stmt 0
 1946 0020 3E4B     		ldr	r3, .L67+8
 1947 0022 1B68     		ldr	r3, [r3]
 1948 0024 002B     		cmp	r3, #0
 1949 0026 71D0     		beq	.L58
 1950 0028 3D4B     		ldr	r3, .L67+12
 1951 002a 1B68     		ldr	r3, [r3]
 1952 002c 181C     		mov	r0, r3
 1953 002e FA23     		mov	r3, #250
 1954 0030 5900     		lsl	r1, r3, #1
 1955 0032 FFF7FEFF 		bl	__aeabi_idivmod
 1956 0036 0B1C     		mov	r3, r1
 1957 0038 002B     		cmp	r3, #0
 1958 003a 67D1     		bne	.L58
 1959              	.L57:
 388:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****       {
 389:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****           // 7 point eigenpair calibration
 390:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****           if (SOLUTIONSIZE == 7)
 391:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****           fUpdateCalibration7EIG();
 1960              		.loc 1 391 0 is_stmt 1
 1961 003c FFF7FEFF 		bl	fUpdateCalibration7EIG
 392:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****           // 4 point INV calibration
 393:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****             else if (SOLUTIONSIZE == 4)
 394:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****             fUpdateCalibration4INV();
 395:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****               else
 396:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****                 fUpdateCalibration7EIG();
 397:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****                   // decide if this new calibration should be accepted
 398:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****                   if ((ftrFitErrorpc <= fFitErrorpc) && (ftrB >= MINBFIT) && (ftrB <= MAXBFIT))
 1962              		.loc 1 398 0
 1963 0040 384B     		ldr	r3, .L67+16
 1964 0042 1A68     		ldr	r2, [r3]
 1965 0044 384B     		ldr	r3, .L67+20
 1966 0046 1B68     		ldr	r3, [r3]
 1967 0048 101C     		add	r0, r2, #0
 1968 004a 191C     		add	r1, r3, #0
 1969 004c FFF7FEFF 		bl	__aeabi_fcmple
 1970 0050 031C     		mov	r3, r0
 1971 0052 002B     		cmp	r3, #0
 1972 0054 32D0     		beq	.L59
 1973              	.L64:
 1974              		.loc 1 398 0 is_stmt 0
 1975 0056 354B     		ldr	r3, .L67+24
 1976 0058 1B68     		ldr	r3, [r3]
 1977 005a 181C     		add	r0, r3, #0
 1978 005c 3449     		ldr	r1, .L67+28
 1979 005e FFF7FEFF 		bl	__aeabi_fcmpge
 1980 0062 031C     		mov	r3, r0
 1981 0064 002B     		cmp	r3, #0
 1982 0066 29D0     		beq	.L59
 1983              	.L65:
 1984 0068 304B     		ldr	r3, .L67+24
 1985 006a 1B68     		ldr	r3, [r3]
 1986 006c 181C     		add	r0, r3, #0
 1987 006e 3149     		ldr	r1, .L67+32
 1988 0070 FFF7FEFF 		bl	__aeabi_fcmple
 1989 0074 031C     		mov	r3, r0
 1990 0076 002B     		cmp	r3, #0
 1991 0078 20D0     		beq	.L59
 1992              	.L66:
 399:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****                   {
 400:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****                     printf("\n\nAccepting new calibration solution\n\n");
 1993              		.loc 1 400 0 is_stmt 1
 1994 007a 2F4B     		ldr	r3, .L67+36
 1995 007c 181C     		mov	r0, r3
 1996 007e FFF7FEFF 		bl	puts
 401:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****                     fFitErrorpc = ftrFitErrorpc;
 1997              		.loc 1 401 0
 1998 0082 284B     		ldr	r3, .L67+16
 1999 0084 1A68     		ldr	r2, [r3]
 2000 0086 284B     		ldr	r3, .L67+20
 2001 0088 1A60     		str	r2, [r3]
 402:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****                     fB = ftrB;
 2002              		.loc 1 402 0
 2003 008a 284B     		ldr	r3, .L67+24
 2004 008c 1A68     		ldr	r2, [r3]
 2005 008e 2B4B     		ldr	r3, .L67+40
 2006 0090 1A60     		str	r2, [r3]
 403:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****                     fVx = ftrVx;
 2007              		.loc 1 403 0
 2008 0092 2B4B     		ldr	r3, .L67+44
 2009 0094 1A68     		ldr	r2, [r3]
 2010 0096 2B4B     		ldr	r3, .L67+48
 2011 0098 1A60     		str	r2, [r3]
 404:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****                     fVy = ftrVy;
 2012              		.loc 1 404 0
 2013 009a 2B4B     		ldr	r3, .L67+52
 2014 009c 1A68     		ldr	r2, [r3]
 2015 009e 2B4B     		ldr	r3, .L67+56
 2016 00a0 1A60     		str	r2, [r3]
 405:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****                     fVz = ftrVz;
 2017              		.loc 1 405 0
 2018 00a2 2B4B     		ldr	r3, .L67+60
 2019 00a4 1A68     		ldr	r2, [r3]
 2020 00a6 2B4B     		ldr	r3, .L67+64
 2021 00a8 1A60     		str	r2, [r3]
 406:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****                     fmatrixAeqB(finvW, ftrinvW, 3, 3);
 2022              		.loc 1 406 0
 2023 00aa 2B4A     		ldr	r2, .L67+68
 2024 00ac 2B4B     		ldr	r3, .L67+72
 2025 00ae 101C     		mov	r0, r2
 2026 00b0 191C     		mov	r1, r3
 2027 00b2 0322     		mov	r2, #3
 2028 00b4 0323     		mov	r3, #3
 2029 00b6 FFF7FEFF 		bl	fmatrixAeqB
 2030 00ba 03E0     		b	.L63
 2031              	.L59:
 407:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****                   }
 408:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****         else
 409:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****           {
 410:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****            printf("\n\nRejecting new calibration solution");
 2032              		.loc 1 410 0
 2033 00bc 284B     		ldr	r3, .L67+76
 2034 00be 181C     		mov	r0, r3
 2035 00c0 FFF7FEFF 		bl	printf
 2036              	.L63:
 411:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****           }
 412:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****       // age (increase) the calibration fit to avoid a good calibration preventing future updates
 413:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****       // FITERRORAGING is the reciprocal of the time (s) for the fit error to increase by  e=2.718
 414:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****       // CALINTERVAL * DELTAT is the interval in seconds between each aging update of fFitErrorpc
 415:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****       // (1 + FITERRORAGING * CALINTERVAL * DELTAT)^n=e defines n, the number of updates for e fold
 416:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****       // approx n * CALINTERVAL * DELTAT = 1. / FITERRORAGING
 417:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****       // so as required FITERRORAGING is the reciprocal of the time in secs for e fold increase
 418:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****       fFitErrorpc += fFitErrorpc * FITERRORAGING * (float) CALINTERVAL * DELTAT;
 2037              		.loc 1 418 0
 2038 00c4 184B     		ldr	r3, .L67+20
 2039 00c6 1B68     		ldr	r3, [r3]
 2040 00c8 181C     		add	r0, r3, #0
 2041 00ca 2649     		ldr	r1, .L67+80
 2042 00cc FFF7FEFF 		bl	__aeabi_fmul
 2043 00d0 031C     		add	r3, r0, #0
 2044 00d2 181C     		add	r0, r3, #0
 2045 00d4 2449     		ldr	r1, .L67+84
 2046 00d6 FFF7FEFF 		bl	__aeabi_fmul
 2047 00da 031C     		add	r3, r0, #0
 2048 00dc 181C     		add	r0, r3, #0
 2049 00de 2349     		ldr	r1, .L67+88
 2050 00e0 FFF7FEFF 		bl	__aeabi_fmul
 2051 00e4 031C     		add	r3, r0, #0
 2052 00e6 1A1C     		add	r2, r3, #0
 2053 00e8 0F4B     		ldr	r3, .L67+20
 2054 00ea 1B68     		ldr	r3, [r3]
 2055 00ec 101C     		add	r0, r2, #0
 2056 00ee 191C     		add	r1, r3, #0
 2057 00f0 FFF7FEFF 		bl	__aeabi_fadd
 2058 00f4 031C     		add	r3, r0, #0
 2059 00f6 1A1C     		add	r2, r3, #0
 2060 00f8 0B4B     		ldr	r3, .L67+20
 2061 00fa 1A60     		str	r2, [r3]
 2062 00fc 06E0     		b	.L58
 2063              	.L56:
 419:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****      } // end of test whether to call calibration functions
 420:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****     }
 421:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****     else // still too few entries in magnetic buffer for calibration
 422:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****       //printf("\r %d entries in magnetometer buffer is too few for calibration", MagBufferCount); 
 423:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****       printf("\r %d move board to calibrate ", MagBufferCount);  ///*******************************
 2064              		.loc 1 423 0
 2065 00fe 064B     		ldr	r3, .L67+4
 2066 0100 1B68     		ldr	r3, [r3]
 2067 0102 1B4A     		ldr	r2, .L67+92
 2068 0104 101C     		mov	r0, r2
 2069 0106 191C     		mov	r1, r3
 2070 0108 FFF7FEFF 		bl	printf
 2071              	.L58:
 424:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****       CalPercentage ();
 2072              		.loc 1 424 0
 2073 010c FFF7FEFF 		bl	CalPercentage
 2074              	.L54:
 425:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****    } // end of test for active calibration flag
 426:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****   /////////////////////////////////////////////////////////////
 427:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** }
 2075              		.loc 1 427 0
 2076 0110 BD46     		mov	sp, r7
 2077              		@ sp needed for prologue
 2078 0112 80BD     		pop	{r7, pc}
 2079              	.L68:
 2080              		.align	2
 2081              	.L67:
 2082 0114 00000000 		.word	CALUPDACTIVE
 2083 0118 00000000 		.word	MagBufferCount
 2084 011c 00000000 		.word	validmagcal
 2085 0120 00000000 		.word	loopcounter
 2086 0124 00000000 		.word	ftrFitErrorpc
 2087 0128 00000000 		.word	fFitErrorpc
 2088 012c 00000000 		.word	ftrB
 2089 0130 0000A040 		.word	1084227584
 2090 0134 0000C842 		.word	1120403456
 2091 0138 00000000 		.word	.LC57
 2092 013c 00000000 		.word	fB
 2093 0140 00000000 		.word	ftrVx
 2094 0144 00000000 		.word	fVx
 2095 0148 00000000 		.word	ftrVy
 2096 014c 00000000 		.word	fVy
 2097 0150 00000000 		.word	ftrVz
 2098 0154 00000000 		.word	fVz
 2099 0158 00000000 		.word	finvW
 2100 015c 00000000 		.word	ftrinvW
 2101 0160 28000000 		.word	.LC68
 2102 0164 7E735A3B 		.word	995783550
 2103 0168 0000FA43 		.word	1140457472
 2104 016c 0AD7A33C 		.word	1017370378
 2105 0170 50000000 		.word	.LC70
 2106              		.cfi_endproc
 2107              	.LFE5:
 2109              		.section	.rodata
 2110 006e 0000     		.align	2
 2111              	.LC72:
 2112 0070 0A0A5468 		.ascii	"\012\012The calibration has ended\000"
 2112      65206361 
 2112      6C696272 
 2112      6174696F 
 2112      6E206861 
 2113              		.align	2
 2114              	.LC76:
 2115 008c 0A0A3720 		.ascii	"\012\0127 element EIG calibration at iteration %d w"
 2115      656C656D 
 2115      656E7420 
 2115      45494720 
 2115      63616C69 
 2116 00b9 69746820 		.ascii	"ith %d in Magnetic Buffer\000"
 2116      25642069 
 2116      6E204D61 
 2116      676E6574 
 2116      69632042 
 2117              		.global	__aeabi_i2d
 2118              		.global	__aeabi_ddiv
 2119              		.section	.text.fUpdateCalibration7EIG,"ax",%progbits
 2120              		.align	2
 2121              		.global	fUpdateCalibration7EIG
 2122              		.code	16
 2123              		.thumb_func
 2125              	fUpdateCalibration7EIG:
 2126              	.LFB6:
 428:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 429:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** // 7 element calibration using direct eigen-decomposition 
 430:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** void fUpdateCalibration7EIG(void)
 431:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** {
 2127              		.loc 1 431 0
 2128              		.cfi_startproc
 2129 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2130              	.LCFI15:
 2131              		.cfi_def_cfa_offset 20
 2132              		.cfi_offset 4, -20
 2133              		.cfi_offset 5, -16
 2134              		.cfi_offset 6, -12
 2135              		.cfi_offset 7, -8
 2136              		.cfi_offset 14, -4
 2137 0002 8FB0     		sub	sp, sp, #60
 2138              	.LCFI16:
 2139              		.cfi_def_cfa_offset 80
 2140 0004 02AF     		add	r7, sp, #8
 2141              	.LCFI17:
 2142              		.cfi_def_cfa 7, 72
 432:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// global working arrays used
 433:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// fX7, ftmpA7x1, ftmpA7x7, ftmpB7x7
 434:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 435:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// local variables
 436:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	int32 i, j, k, l;						// loop counters 
 437:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	float fOffsetx, fOffsety, fOffsetz;		// offset to remove large DC hard iron bias in matrix 
 438:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	float ftmpBpx, ftmpBpy, ftmpBpz;		// scratch variables 
 439:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	float smallest;							// smallest eigenvalue 
 440:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 441:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****         printf("\n\nThe calibration has ended");
 2143              		.loc 1 441 0
 2144 0006 954B     		ldr	r3, .L87
 2145 0008 181C     		mov	r0, r3
 2146 000a FFF7FEFF 		bl	printf
 442:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	printf("\n\n7 element EIG calibration at iteration %d with %d in Magnetic Buffer", loopcounter, Ma
 2147              		.loc 1 442 0
 2148 000e 944B     		ldr	r3, .L87+4
 2149 0010 1A68     		ldr	r2, [r3]
 2150 0012 944B     		ldr	r3, .L87+8
 2151 0014 1B68     		ldr	r3, [r3]
 2152 0016 9449     		ldr	r1, .L87+12
 2153 0018 081C     		mov	r0, r1
 2154 001a 111C     		mov	r1, r2
 2155 001c 1A1C     		mov	r2, r3
 2156 001e FFF7FEFF 		bl	printf
 443:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****         
 444:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 445:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// the offsets are guaranteed to be set from the first element but to avoid compiler error 
 446:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	fOffsetx = fOffsety = fOffsetz = 0.0F;
 2157              		.loc 1 446 0
 2158 0022 0023     		mov	r3, #0
 2159 0024 7B61     		str	r3, [r7, #20]
 2160 0026 7B69     		ldr	r3, [r7, #20]
 2161 0028 BB61     		str	r3, [r7, #24]
 2162 002a BB69     		ldr	r3, [r7, #24]
 2163 002c FB61     		str	r3, [r7, #28]
 447:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 448:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// place from MINEQUATIONS to MAXEQUATIONS entries into the measurement matrix 
 449:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	i = 0;
 2164              		.loc 1 449 0
 2165 002e 0023     		mov	r3, #0
 2166 0030 FB62     		str	r3, [r7, #44]
 450:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (j = 0; j < MAGBUFFSIZE; j++)
 2167              		.loc 1 450 0
 2168 0032 0023     		mov	r3, #0
 2169 0034 BB62     		str	r3, [r7, #40]
 2170 0036 F2E0     		b	.L70
 2171              	.L77:
 451:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	{
 452:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		for (k = 0; k < MAGBUFFSIZE; k++)
 2172              		.loc 1 452 0
 2173 0038 0023     		mov	r3, #0
 2174 003a 7B62     		str	r3, [r7, #36]
 2175 003c E8E0     		b	.L71
 2176              	.L76:
 453:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		{
 454:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			for (l = 0; l < MAGBUFFSIZE; l++)
 2177              		.loc 1 454 0
 2178 003e 0023     		mov	r3, #0
 2179 0040 3B62     		str	r3, [r7, #32]
 2180 0042 DEE0     		b	.L72
 2181              	.L75:
 455:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			{ 
 456:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 				if (iMagBuff[j][k][l].index != -1)
 2182              		.loc 1 456 0
 2183 0044 8948     		ldr	r0, .L87+16
 2184 0046 3B6A     		ldr	r3, [r7, #32]
 2185 0048 796A     		ldr	r1, [r7, #36]
 2186 004a BC6A     		ldr	r4, [r7, #40]
 2187 004c 1A1C     		mov	r2, r3
 2188 004e 5200     		lsl	r2, r2, #1
 2189 0050 D218     		add	r2, r2, r3
 2190 0052 9300     		lsl	r3, r2, #2
 2191 0054 1A1C     		mov	r2, r3
 2192 0056 0B1C     		mov	r3, r1
 2193 0058 1B01     		lsl	r3, r3, #4
 2194 005a 5B1A     		sub	r3, r3, r1
 2195 005c 9B00     		lsl	r3, r3, #2
 2196 005e D218     		add	r2, r2, r3
 2197 0060 9623     		mov	r3, #150
 2198 0062 5B00     		lsl	r3, r3, #1
 2199 0064 6343     		mul	r3, r4
 2200 0066 D318     		add	r3, r2, r3
 2201 0068 C318     		add	r3, r0, r3
 2202 006a 0833     		add	r3, r3, #8
 2203 006c 1B68     		ldr	r3, [r3]
 2204 006e 0133     		add	r3, r3, #1
 2205 0070 00D1     		bne	.LCB1886
 2206 0072 C3E0     		b	.L73	@long jump
 2207              	.LCB1886:
 457:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 				{
 458:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					// set tmp to valid data from the magnetic buffer 
 459:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					ftmpBpx = (float)iMagBuff[j][k][l].iBx * fuTpercount;
 2208              		.loc 1 459 0
 2209 0074 7D48     		ldr	r0, .L87+16
 2210 0076 396A     		ldr	r1, [r7, #32]
 2211 0078 7A6A     		ldr	r2, [r7, #36]
 2212 007a BC6A     		ldr	r4, [r7, #40]
 2213 007c 0B1C     		mov	r3, r1
 2214 007e 5B00     		lsl	r3, r3, #1
 2215 0080 5B18     		add	r3, r3, r1
 2216 0082 9B00     		lsl	r3, r3, #2
 2217 0084 9621     		mov	r1, #150
 2218 0086 4900     		lsl	r1, r1, #1
 2219 0088 6143     		mul	r1, r4
 2220 008a 5918     		add	r1, r3, r1
 2221 008c 131C     		mov	r3, r2
 2222 008e 1B01     		lsl	r3, r3, #4
 2223 0090 9B1A     		sub	r3, r3, r2
 2224 0092 9B00     		lsl	r3, r3, #2
 2225 0094 CB18     		add	r3, r1, r3
 2226 0096 1B5A     		ldrh	r3, [r3, r0]
 2227 0098 1BB2     		sxth	r3, r3
 2228 009a 181C     		mov	r0, r3
 2229 009c FFF7FEFF 		bl	__aeabi_i2f
 2230 00a0 031C     		add	r3, r0, #0
 2231 00a2 181C     		add	r0, r3, #0
 2232 00a4 7249     		ldr	r1, .L87+20
 2233 00a6 FFF7FEFF 		bl	__aeabi_fmul
 2234 00aa 031C     		add	r3, r0, #0
 2235 00ac FB60     		str	r3, [r7, #12]
 460:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					ftmpBpy = (float)iMagBuff[j][k][l].iBy * fuTpercount;
 2236              		.loc 1 460 0
 2237 00ae 6F48     		ldr	r0, .L87+16
 2238 00b0 396A     		ldr	r1, [r7, #32]
 2239 00b2 7A6A     		ldr	r2, [r7, #36]
 2240 00b4 BC6A     		ldr	r4, [r7, #40]
 2241 00b6 0B1C     		mov	r3, r1
 2242 00b8 5B00     		lsl	r3, r3, #1
 2243 00ba 5B18     		add	r3, r3, r1
 2244 00bc 9B00     		lsl	r3, r3, #2
 2245 00be 9621     		mov	r1, #150
 2246 00c0 4900     		lsl	r1, r1, #1
 2247 00c2 6143     		mul	r1, r4
 2248 00c4 5918     		add	r1, r3, r1
 2249 00c6 131C     		mov	r3, r2
 2250 00c8 1B01     		lsl	r3, r3, #4
 2251 00ca 9B1A     		sub	r3, r3, r2
 2252 00cc 9B00     		lsl	r3, r3, #2
 2253 00ce CB18     		add	r3, r1, r3
 2254 00d0 C318     		add	r3, r0, r3
 2255 00d2 5B88     		ldrh	r3, [r3, #2]
 2256 00d4 1BB2     		sxth	r3, r3
 2257 00d6 181C     		mov	r0, r3
 2258 00d8 FFF7FEFF 		bl	__aeabi_i2f
 2259 00dc 031C     		add	r3, r0, #0
 2260 00de 181C     		add	r0, r3, #0
 2261 00e0 6349     		ldr	r1, .L87+20
 2262 00e2 FFF7FEFF 		bl	__aeabi_fmul
 2263 00e6 031C     		add	r3, r0, #0
 2264 00e8 BB60     		str	r3, [r7, #8]
 461:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					ftmpBpz = (float)iMagBuff[j][k][l].iBz * fuTpercount;
 2265              		.loc 1 461 0
 2266 00ea 6048     		ldr	r0, .L87+16
 2267 00ec 396A     		ldr	r1, [r7, #32]
 2268 00ee 7A6A     		ldr	r2, [r7, #36]
 2269 00f0 BC6A     		ldr	r4, [r7, #40]
 2270 00f2 0B1C     		mov	r3, r1
 2271 00f4 5B00     		lsl	r3, r3, #1
 2272 00f6 5B18     		add	r3, r3, r1
 2273 00f8 9B00     		lsl	r3, r3, #2
 2274 00fa 9621     		mov	r1, #150
 2275 00fc 4900     		lsl	r1, r1, #1
 2276 00fe 6143     		mul	r1, r4
 2277 0100 5918     		add	r1, r3, r1
 2278 0102 131C     		mov	r3, r2
 2279 0104 1B01     		lsl	r3, r3, #4
 2280 0106 9B1A     		sub	r3, r3, r2
 2281 0108 9B00     		lsl	r3, r3, #2
 2282 010a CB18     		add	r3, r1, r3
 2283 010c C318     		add	r3, r0, r3
 2284 010e 9B88     		ldrh	r3, [r3, #4]
 2285 0110 1BB2     		sxth	r3, r3
 2286 0112 181C     		mov	r0, r3
 2287 0114 FFF7FEFF 		bl	__aeabi_i2f
 2288 0118 031C     		add	r3, r0, #0
 2289 011a 181C     		add	r0, r3, #0
 2290 011c 5449     		ldr	r1, .L87+20
 2291 011e FFF7FEFF 		bl	__aeabi_fmul
 2292 0122 031C     		add	r3, r0, #0
 2293 0124 7B60     		str	r3, [r7, #4]
 462:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 463:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					// use first valid magnetic buffer entry as estimate (in uT) for offset to help solution 
 464:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					if (i == 0)
 2294              		.loc 1 464 0
 2295 0126 FB6A     		ldr	r3, [r7, #44]
 2296 0128 002B     		cmp	r3, #0
 2297 012a 05D1     		bne	.L74
 465:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					{
 466:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						fOffsetx = ftmpBpx;
 2298              		.loc 1 466 0
 2299 012c FB68     		ldr	r3, [r7, #12]
 2300 012e FB61     		str	r3, [r7, #28]
 467:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						fOffsety = ftmpBpy;
 2301              		.loc 1 467 0
 2302 0130 BB68     		ldr	r3, [r7, #8]
 2303 0132 BB61     		str	r3, [r7, #24]
 468:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						fOffsetz = ftmpBpz;
 2304              		.loc 1 468 0
 2305 0134 7B68     		ldr	r3, [r7, #4]
 2306 0136 7B61     		str	r3, [r7, #20]
 2307              	.L74:
 469:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					}
 470:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 471:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					// apply the fixed offset and scaling to all measurement vectors for this iteration 
 472:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					ftmpBpx = (ftmpBpx - fOffsetx) * fmatrixscaling;
 2308              		.loc 1 472 0
 2309 0138 F868     		ldr	r0, [r7, #12]
 2310 013a F969     		ldr	r1, [r7, #28]
 2311 013c FFF7FEFF 		bl	__aeabi_fsub
 2312 0140 031C     		add	r3, r0, #0
 2313 0142 181C     		add	r0, r3, #0
 2314 0144 4B49     		ldr	r1, .L87+24
 2315 0146 FFF7FEFF 		bl	__aeabi_fmul
 2316 014a 031C     		add	r3, r0, #0
 2317 014c FB60     		str	r3, [r7, #12]
 473:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					ftmpBpy = (ftmpBpy - fOffsety) * fmatrixscaling;
 2318              		.loc 1 473 0
 2319 014e B868     		ldr	r0, [r7, #8]
 2320 0150 B969     		ldr	r1, [r7, #24]
 2321 0152 FFF7FEFF 		bl	__aeabi_fsub
 2322 0156 031C     		add	r3, r0, #0
 2323 0158 181C     		add	r0, r3, #0
 2324 015a 4649     		ldr	r1, .L87+24
 2325 015c FFF7FEFF 		bl	__aeabi_fmul
 2326 0160 031C     		add	r3, r0, #0
 2327 0162 BB60     		str	r3, [r7, #8]
 474:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					ftmpBpz = (ftmpBpz - fOffsetz) * fmatrixscaling;
 2328              		.loc 1 474 0
 2329 0164 7868     		ldr	r0, [r7, #4]
 2330 0166 7969     		ldr	r1, [r7, #20]
 2331 0168 FFF7FEFF 		bl	__aeabi_fsub
 2332 016c 031C     		add	r3, r0, #0
 2333 016e 181C     		add	r0, r3, #0
 2334 0170 4049     		ldr	r1, .L87+24
 2335 0172 FFF7FEFF 		bl	__aeabi_fmul
 2336 0176 031C     		add	r3, r0, #0
 2337 0178 7B60     		str	r3, [r7, #4]
 475:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 476:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					// enter into the measurement matrix X scaling to make entries near unity 
 477:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					fX7[i][0] = ftmpBpx * ftmpBpx;
 2338              		.loc 1 477 0
 2339 017a 3F4B     		ldr	r3, .L87+28
 2340 017c FA6A     		ldr	r2, [r7, #44]
 2341 017e 9200     		lsl	r2, r2, #2
 2342 0180 D458     		ldr	r4, [r2, r3]
 2343 0182 F868     		ldr	r0, [r7, #12]
 2344 0184 F968     		ldr	r1, [r7, #12]
 2345 0186 FFF7FEFF 		bl	__aeabi_fmul
 2346 018a 031C     		add	r3, r0, #0
 2347 018c 2360     		str	r3, [r4]
 478:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					fX7[i][1] = ftmpBpy * ftmpBpy;
 2348              		.loc 1 478 0
 2349 018e 3A4B     		ldr	r3, .L87+28
 2350 0190 FA6A     		ldr	r2, [r7, #44]
 2351 0192 9200     		lsl	r2, r2, #2
 2352 0194 D358     		ldr	r3, [r2, r3]
 2353 0196 1C1D     		add	r4, r3, #4
 2354 0198 B868     		ldr	r0, [r7, #8]
 2355 019a B968     		ldr	r1, [r7, #8]
 2356 019c FFF7FEFF 		bl	__aeabi_fmul
 2357 01a0 031C     		add	r3, r0, #0
 2358 01a2 2360     		str	r3, [r4]
 479:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					fX7[i][2] = ftmpBpz * ftmpBpz;
 2359              		.loc 1 479 0
 2360 01a4 344B     		ldr	r3, .L87+28
 2361 01a6 FA6A     		ldr	r2, [r7, #44]
 2362 01a8 9200     		lsl	r2, r2, #2
 2363 01aa D358     		ldr	r3, [r2, r3]
 2364 01ac 1C1C     		mov	r4, r3
 2365 01ae 0834     		add	r4, r4, #8
 2366 01b0 7868     		ldr	r0, [r7, #4]
 2367 01b2 7968     		ldr	r1, [r7, #4]
 2368 01b4 FFF7FEFF 		bl	__aeabi_fmul
 2369 01b8 031C     		add	r3, r0, #0
 2370 01ba 2360     		str	r3, [r4]
 480:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					fX7[i][3] = ftmpBpx;
 2371              		.loc 1 480 0
 2372 01bc 2E4B     		ldr	r3, .L87+28
 2373 01be FA6A     		ldr	r2, [r7, #44]
 2374 01c0 9200     		lsl	r2, r2, #2
 2375 01c2 D358     		ldr	r3, [r2, r3]
 2376 01c4 0C33     		add	r3, r3, #12
 2377 01c6 FA68     		ldr	r2, [r7, #12]
 2378 01c8 1A60     		str	r2, [r3]
 481:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					fX7[i][4] = ftmpBpy;
 2379              		.loc 1 481 0
 2380 01ca 2B4B     		ldr	r3, .L87+28
 2381 01cc FA6A     		ldr	r2, [r7, #44]
 2382 01ce 9200     		lsl	r2, r2, #2
 2383 01d0 D358     		ldr	r3, [r2, r3]
 2384 01d2 1033     		add	r3, r3, #16
 2385 01d4 BA68     		ldr	r2, [r7, #8]
 2386 01d6 1A60     		str	r2, [r3]
 482:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					fX7[i][5] = ftmpBpz;
 2387              		.loc 1 482 0
 2388 01d8 274B     		ldr	r3, .L87+28
 2389 01da FA6A     		ldr	r2, [r7, #44]
 2390 01dc 9200     		lsl	r2, r2, #2
 2391 01de D358     		ldr	r3, [r2, r3]
 2392 01e0 1433     		add	r3, r3, #20
 2393 01e2 7A68     		ldr	r2, [r7, #4]
 2394 01e4 1A60     		str	r2, [r3]
 483:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					fX7[i][6] = 1.0F;
 2395              		.loc 1 483 0
 2396 01e6 244B     		ldr	r3, .L87+28
 2397 01e8 FA6A     		ldr	r2, [r7, #44]
 2398 01ea 9200     		lsl	r2, r2, #2
 2399 01ec D358     		ldr	r3, [r2, r3]
 2400 01ee 1833     		add	r3, r3, #24
 2401 01f0 FE22     		mov	r2, #254
 2402 01f2 9205     		lsl	r2, r2, #22
 2403 01f4 1A60     		str	r2, [r3]
 484:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					i++;
 2404              		.loc 1 484 0
 2405 01f6 FB6A     		ldr	r3, [r7, #44]
 2406 01f8 0133     		add	r3, r3, #1
 2407 01fa FB62     		str	r3, [r7, #44]
 2408              	.L73:
 454:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			for (l = 0; l < MAGBUFFSIZE; l++)
 2409              		.loc 1 454 0
 2410 01fc 3B6A     		ldr	r3, [r7, #32]
 2411 01fe 0133     		add	r3, r3, #1
 2412 0200 3B62     		str	r3, [r7, #32]
 2413              	.L72:
 454:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			for (l = 0; l < MAGBUFFSIZE; l++)
 2414              		.loc 1 454 0 is_stmt 0
 2415 0202 3B6A     		ldr	r3, [r7, #32]
 2416 0204 042B     		cmp	r3, #4
 2417 0206 00DC     		bgt	.LCB2079
 2418 0208 1CE7     		b	.L75	@long jump
 2419              	.LCB2079:
 452:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		for (k = 0; k < MAGBUFFSIZE; k++)
 2420              		.loc 1 452 0 is_stmt 1
 2421 020a 7B6A     		ldr	r3, [r7, #36]
 2422 020c 0133     		add	r3, r3, #1
 2423 020e 7B62     		str	r3, [r7, #36]
 2424              	.L71:
 452:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		for (k = 0; k < MAGBUFFSIZE; k++)
 2425              		.loc 1 452 0 is_stmt 0
 2426 0210 7B6A     		ldr	r3, [r7, #36]
 2427 0212 042B     		cmp	r3, #4
 2428 0214 00DC     		bgt	.LCB2087
 2429 0216 12E7     		b	.L76	@long jump
 2430              	.LCB2087:
 450:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (j = 0; j < MAGBUFFSIZE; j++)
 2431              		.loc 1 450 0 is_stmt 1
 2432 0218 BB6A     		ldr	r3, [r7, #40]
 2433 021a 0133     		add	r3, r3, #1
 2434 021c BB62     		str	r3, [r7, #40]
 2435              	.L70:
 450:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (j = 0; j < MAGBUFFSIZE; j++)
 2436              		.loc 1 450 0 is_stmt 0
 2437 021e BB6A     		ldr	r3, [r7, #40]
 2438 0220 042B     		cmp	r3, #4
 2439 0222 00DC     		bgt	.LCB2095
 2440 0224 08E7     		b	.L77	@long jump
 2441              	.LCB2095:
 485:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 				}
 486:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			}
 487:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		}
 488:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	}
 489:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 490:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// compute the 7x7 matrix ftmpB7x7=fX7^T.fX7 
 491:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	fmatrixAeqTrBxC(ftmpB7x7, fX7, fX7, MagBufferCount, 7, 7);
 2442              		.loc 1 491 0 is_stmt 1
 2443 0226 0F4B     		ldr	r3, .L87+8
 2444 0228 1B68     		ldr	r3, [r3]
 2445 022a 1448     		ldr	r0, .L87+32
 2446 022c 1249     		ldr	r1, .L87+28
 2447 022e 124A     		ldr	r2, .L87+28
 2448 0230 0724     		mov	r4, #7
 2449 0232 0094     		str	r4, [sp]
 2450 0234 0724     		mov	r4, #7
 2451 0236 0194     		str	r4, [sp, #4]
 2452 0238 FFF7FEFF 		bl	fmatrixAeqTrBxC
 492:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 493:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// set tmpA7x1 to the unsorted eigenvalues and tmpA7x7 to the unsorted eigenvectors of ftmpB7x7=fX
 494:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	eigencompute(ftmpB7x7, 7, ftmpA7x1, ftmpA7x7);
 2453              		.loc 1 494 0
 2454 023c 0F49     		ldr	r1, .L87+32
 2455 023e 104A     		ldr	r2, .L87+36
 2456 0240 104B     		ldr	r3, .L87+40
 2457 0242 081C     		mov	r0, r1
 2458 0244 0721     		mov	r1, #7
 2459 0246 FFF7FEFF 		bl	eigencompute
 495:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 496:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// set j to the index of the smallest eigenvalue
 497:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	j = 0;
 2460              		.loc 1 497 0
 2461 024a 0023     		mov	r3, #0
 2462 024c BB62     		str	r3, [r7, #40]
 498:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	smallest = ftmpA7x1[0][0];
 2463              		.loc 1 498 0
 2464 024e 0C4B     		ldr	r3, .L87+36
 2465 0250 1B68     		ldr	r3, [r3]
 2466 0252 1B68     		ldr	r3, [r3]
 2467 0254 3B61     		str	r3, [r7, #16]
 499:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (i = 1; i < 7; i++)
 2468              		.loc 1 499 0
 2469 0256 0123     		mov	r3, #1
 2470 0258 FB62     		str	r3, [r7, #44]
 2471 025a 2CE0     		b	.L78
 2472              	.L88:
 2473              		.align	2
 2474              	.L87:
 2475 025c 70000000 		.word	.LC72
 2476 0260 00000000 		.word	loopcounter
 2477 0264 00000000 		.word	MagBufferCount
 2478 0268 8C000000 		.word	.LC76
 2479 026c 00000000 		.word	iMagBuff
 2480 0270 CDCCCC3D 		.word	1036831949
 2481 0274 0AD7A33C 		.word	1017370378
 2482 0278 00000000 		.word	fX7
 2483 027c 00000000 		.word	ftmpB7x7
 2484 0280 00000000 		.word	ftmpA7x1
 2485 0284 00000000 		.word	ftmpA7x7
 2486              	.L81:
 500:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	{
 501:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		if (ftmpA7x1[i][0] < smallest)
 2487              		.loc 1 501 0
 2488 0288 F94B     		ldr	r3, .L89+16
 2489 028a FA6A     		ldr	r2, [r7, #44]
 2490 028c 9200     		lsl	r2, r2, #2
 2491 028e D358     		ldr	r3, [r2, r3]
 2492 0290 1B68     		ldr	r3, [r3]
 2493 0292 181C     		add	r0, r3, #0
 2494 0294 3969     		ldr	r1, [r7, #16]
 2495 0296 FFF7FEFF 		bl	__aeabi_fcmplt
 2496 029a 031C     		mov	r3, r0
 2497 029c 002B     		cmp	r3, #0
 2498 029e 07D0     		beq	.L79
 2499              	.L85:
 502:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		{
 503:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			j = i;
 2500              		.loc 1 503 0
 2501 02a0 FB6A     		ldr	r3, [r7, #44]
 2502 02a2 BB62     		str	r3, [r7, #40]
 504:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			smallest = ftmpA7x1[j][0];
 2503              		.loc 1 504 0
 2504 02a4 F24B     		ldr	r3, .L89+16
 2505 02a6 BA6A     		ldr	r2, [r7, #40]
 2506 02a8 9200     		lsl	r2, r2, #2
 2507 02aa D358     		ldr	r3, [r2, r3]
 2508 02ac 1B68     		ldr	r3, [r3]
 2509 02ae 3B61     		str	r3, [r7, #16]
 2510              	.L79:
 499:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (i = 1; i < 7; i++)
 2511              		.loc 1 499 0
 2512 02b0 FB6A     		ldr	r3, [r7, #44]
 2513 02b2 0133     		add	r3, r3, #1
 2514 02b4 FB62     		str	r3, [r7, #44]
 2515              	.L78:
 499:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (i = 1; i < 7; i++)
 2516              		.loc 1 499 0 is_stmt 0
 2517 02b6 FB6A     		ldr	r3, [r7, #44]
 2518 02b8 062B     		cmp	r3, #6
 2519 02ba E5DD     		ble	.L81
 505:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		}
 506:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	}
 507:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 508:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// set ellipsoid matrix A to the solution vector column j with smallest eigenvalue 
 509:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	A[0][0] = ftmpA7x7[0][j];
 2520              		.loc 1 509 0 is_stmt 1
 2521 02bc ED4B     		ldr	r3, .L89+20
 2522 02be 1A68     		ldr	r2, [r3]
 2523 02c0 ED4B     		ldr	r3, .L89+24
 2524 02c2 1968     		ldr	r1, [r3]
 2525 02c4 BB6A     		ldr	r3, [r7, #40]
 2526 02c6 9B00     		lsl	r3, r3, #2
 2527 02c8 CB18     		add	r3, r1, r3
 2528 02ca 1B68     		ldr	r3, [r3]
 2529 02cc 1360     		str	r3, [r2]
 510:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	A[1][1] = ftmpA7x7[1][j];
 2530              		.loc 1 510 0
 2531 02ce E94B     		ldr	r3, .L89+20
 2532 02d0 5B68     		ldr	r3, [r3, #4]
 2533 02d2 1A1D     		add	r2, r3, #4
 2534 02d4 E84B     		ldr	r3, .L89+24
 2535 02d6 5968     		ldr	r1, [r3, #4]
 2536 02d8 BB6A     		ldr	r3, [r7, #40]
 2537 02da 9B00     		lsl	r3, r3, #2
 2538 02dc CB18     		add	r3, r1, r3
 2539 02de 1B68     		ldr	r3, [r3]
 2540 02e0 1360     		str	r3, [r2]
 511:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	A[2][2] = ftmpA7x7[2][j];
 2541              		.loc 1 511 0
 2542 02e2 E44B     		ldr	r3, .L89+20
 2543 02e4 9B68     		ldr	r3, [r3, #8]
 2544 02e6 1A1C     		mov	r2, r3
 2545 02e8 0832     		add	r2, r2, #8
 2546 02ea E34B     		ldr	r3, .L89+24
 2547 02ec 9968     		ldr	r1, [r3, #8]
 2548 02ee BB6A     		ldr	r3, [r7, #40]
 2549 02f0 9B00     		lsl	r3, r3, #2
 2550 02f2 CB18     		add	r3, r1, r3
 2551 02f4 1B68     		ldr	r3, [r3]
 2552 02f6 1360     		str	r3, [r2]
 512:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	A[0][1] = A[0][2] = A[1][0] = A[1][2] = A[2][0] = A[2][1] = 0.0F;
 2553              		.loc 1 512 0
 2554 02f8 DE4B     		ldr	r3, .L89+20
 2555 02fa 1B68     		ldr	r3, [r3]
 2556 02fc 1D1D     		add	r5, r3, #4
 2557 02fe DD4B     		ldr	r3, .L89+20
 2558 0300 1B68     		ldr	r3, [r3]
 2559 0302 0833     		add	r3, r3, #8
 2560 0304 DB4A     		ldr	r2, .L89+20
 2561 0306 5268     		ldr	r2, [r2, #4]
 2562 0308 DA49     		ldr	r1, .L89+20
 2563 030a 4968     		ldr	r1, [r1, #4]
 2564 030c 0831     		add	r1, r1, #8
 2565 030e D948     		ldr	r0, .L89+20
 2566 0310 8068     		ldr	r0, [r0, #8]
 2567 0312 D84C     		ldr	r4, .L89+20
 2568 0314 A468     		ldr	r4, [r4, #8]
 2569 0316 0434     		add	r4, r4, #4
 2570 0318 0026     		mov	r6, #0
 2571 031a 2660     		str	r6, [r4]
 2572 031c 2468     		ldr	r4, [r4]
 2573 031e 0460     		str	r4, [r0]
 2574 0320 0068     		ldr	r0, [r0]
 2575 0322 0860     		str	r0, [r1]
 2576 0324 0968     		ldr	r1, [r1]
 2577 0326 1160     		str	r1, [r2]
 2578 0328 1268     		ldr	r2, [r2]
 2579 032a 1A60     		str	r2, [r3]
 2580 032c 1B68     		ldr	r3, [r3]
 2581 032e 2B60     		str	r3, [r5]
 513:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 514:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// compute the trial hard iron vector in offset bit counts times fmatrixscaling 
 515:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	ftrVx = -0.5F * ftmpA7x7[3][j] / A[0][0];
 2582              		.loc 1 515 0
 2583 0330 D14B     		ldr	r3, .L89+24
 2584 0332 DA68     		ldr	r2, [r3, #12]
 2585 0334 BB6A     		ldr	r3, [r7, #40]
 2586 0336 9B00     		lsl	r3, r3, #2
 2587 0338 D318     		add	r3, r2, r3
 2588 033a 1B68     		ldr	r3, [r3]
 2589 033c 181C     		add	r0, r3, #0
 2590 033e BF21     		mov	r1, #191
 2591 0340 0906     		lsl	r1, r1, #24
 2592 0342 FFF7FEFF 		bl	__aeabi_fmul
 2593 0346 031C     		add	r3, r0, #0
 2594 0348 1A1C     		add	r2, r3, #0
 2595 034a CA4B     		ldr	r3, .L89+20
 2596 034c 1B68     		ldr	r3, [r3]
 2597 034e 1B68     		ldr	r3, [r3]
 2598 0350 101C     		add	r0, r2, #0
 2599 0352 191C     		add	r1, r3, #0
 2600 0354 FFF7FEFF 		bl	__aeabi_fdiv
 2601 0358 031C     		add	r3, r0, #0
 2602 035a 1A1C     		add	r2, r3, #0
 2603 035c C74B     		ldr	r3, .L89+28
 2604 035e 1A60     		str	r2, [r3]
 516:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	ftrVy = -0.5F * ftmpA7x7[4][j] / A[1][1];
 2605              		.loc 1 516 0
 2606 0360 C54B     		ldr	r3, .L89+24
 2607 0362 1A69     		ldr	r2, [r3, #16]
 2608 0364 BB6A     		ldr	r3, [r7, #40]
 2609 0366 9B00     		lsl	r3, r3, #2
 2610 0368 D318     		add	r3, r2, r3
 2611 036a 1B68     		ldr	r3, [r3]
 2612 036c 181C     		add	r0, r3, #0
 2613 036e BF21     		mov	r1, #191
 2614 0370 0906     		lsl	r1, r1, #24
 2615 0372 FFF7FEFF 		bl	__aeabi_fmul
 2616 0376 031C     		add	r3, r0, #0
 2617 0378 1A1C     		add	r2, r3, #0
 2618 037a BE4B     		ldr	r3, .L89+20
 2619 037c 5B68     		ldr	r3, [r3, #4]
 2620 037e 0433     		add	r3, r3, #4
 2621 0380 1B68     		ldr	r3, [r3]
 2622 0382 101C     		add	r0, r2, #0
 2623 0384 191C     		add	r1, r3, #0
 2624 0386 FFF7FEFF 		bl	__aeabi_fdiv
 2625 038a 031C     		add	r3, r0, #0
 2626 038c 1A1C     		add	r2, r3, #0
 2627 038e BC4B     		ldr	r3, .L89+32
 2628 0390 1A60     		str	r2, [r3]
 517:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	ftrVz = -0.5F * ftmpA7x7[5][j] / A[2][2];
 2629              		.loc 1 517 0
 2630 0392 B94B     		ldr	r3, .L89+24
 2631 0394 5A69     		ldr	r2, [r3, #20]
 2632 0396 BB6A     		ldr	r3, [r7, #40]
 2633 0398 9B00     		lsl	r3, r3, #2
 2634 039a D318     		add	r3, r2, r3
 2635 039c 1B68     		ldr	r3, [r3]
 2636 039e 181C     		add	r0, r3, #0
 2637 03a0 BF21     		mov	r1, #191
 2638 03a2 0906     		lsl	r1, r1, #24
 2639 03a4 FFF7FEFF 		bl	__aeabi_fmul
 2640 03a8 031C     		add	r3, r0, #0
 2641 03aa 1A1C     		add	r2, r3, #0
 2642 03ac B14B     		ldr	r3, .L89+20
 2643 03ae 9B68     		ldr	r3, [r3, #8]
 2644 03b0 0833     		add	r3, r3, #8
 2645 03b2 1B68     		ldr	r3, [r3]
 2646 03b4 101C     		add	r0, r2, #0
 2647 03b6 191C     		add	r1, r3, #0
 2648 03b8 FFF7FEFF 		bl	__aeabi_fdiv
 2649 03bc 031C     		add	r3, r0, #0
 2650 03be 1A1C     		add	r2, r3, #0
 2651 03c0 B04B     		ldr	r3, .L89+36
 2652 03c2 1A60     		str	r2, [r3]
 518:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 519:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// negate A and gain if A has negative determinant. Sign change cancels for hard iron vector 
 520:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	det = A[0][0] * A[1][1] * A[2][2];
 2653              		.loc 1 520 0
 2654 03c4 AB4B     		ldr	r3, .L89+20
 2655 03c6 1B68     		ldr	r3, [r3]
 2656 03c8 1A68     		ldr	r2, [r3]
 2657 03ca AA4B     		ldr	r3, .L89+20
 2658 03cc 5B68     		ldr	r3, [r3, #4]
 2659 03ce 0433     		add	r3, r3, #4
 2660 03d0 1B68     		ldr	r3, [r3]
 2661 03d2 101C     		add	r0, r2, #0
 2662 03d4 191C     		add	r1, r3, #0
 2663 03d6 FFF7FEFF 		bl	__aeabi_fmul
 2664 03da 031C     		add	r3, r0, #0
 2665 03dc 1A1C     		add	r2, r3, #0
 2666 03de A54B     		ldr	r3, .L89+20
 2667 03e0 9B68     		ldr	r3, [r3, #8]
 2668 03e2 0833     		add	r3, r3, #8
 2669 03e4 1B68     		ldr	r3, [r3]
 2670 03e6 101C     		add	r0, r2, #0
 2671 03e8 191C     		add	r1, r3, #0
 2672 03ea FFF7FEFF 		bl	__aeabi_fmul
 2673 03ee 031C     		add	r3, r0, #0
 2674 03f0 1A1C     		add	r2, r3, #0
 2675 03f2 A54B     		ldr	r3, .L89+40
 2676 03f4 1A60     		str	r2, [r3]
 521:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	if (det < 0.0F)
 2677              		.loc 1 521 0
 2678 03f6 A44B     		ldr	r3, .L89+40
 2679 03f8 1B68     		ldr	r3, [r3]
 2680 03fa 181C     		add	r0, r3, #0
 2681 03fc 0021     		mov	r1, #0
 2682 03fe FFF7FEFF 		bl	__aeabi_fcmplt
 2683 0402 031C     		mov	r3, r0
 2684 0404 002B     		cmp	r3, #0
 2685 0406 1DD0     		beq	.L82
 2686              	.L86:
 522:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	{
 523:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		//printf("\n\nEllipsoid matrix A has negative determinant %9.3f so inverting solution", det);
 524:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		fmatrixAeqAxScalar(A, -1.0F, 3, 3);
 2687              		.loc 1 524 0
 2688 0408 9A4A     		ldr	r2, .L89+20
 2689 040a A04B     		ldr	r3, .L89+44
 2690 040c 101C     		mov	r0, r2
 2691 040e 191C     		add	r1, r3, #0
 2692 0410 0322     		mov	r2, #3
 2693 0412 0323     		mov	r3, #3
 2694 0414 FFF7FEFF 		bl	fmatrixAeqAxScalar
 525:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		ftmpA7x7[6][j] = -ftmpA7x7[6][j];
 2695              		.loc 1 525 0
 2696 0418 974B     		ldr	r3, .L89+24
 2697 041a 9A69     		ldr	r2, [r3, #24]
 2698 041c BB6A     		ldr	r3, [r7, #40]
 2699 041e 9B00     		lsl	r3, r3, #2
 2700 0420 D218     		add	r2, r2, r3
 2701 0422 954B     		ldr	r3, .L89+24
 2702 0424 9969     		ldr	r1, [r3, #24]
 2703 0426 BB6A     		ldr	r3, [r7, #40]
 2704 0428 9B00     		lsl	r3, r3, #2
 2705 042a CB18     		add	r3, r1, r3
 2706 042c 1B68     		ldr	r3, [r3]
 2707 042e 8021     		mov	r1, #128
 2708 0430 0906     		lsl	r1, r1, #24
 2709 0432 4B40     		eor	r3, r1
 2710 0434 1360     		str	r3, [r2]
 526:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		det = -det;
 2711              		.loc 1 526 0
 2712 0436 944B     		ldr	r3, .L89+40
 2713 0438 1B68     		ldr	r3, [r3]
 2714 043a 8022     		mov	r2, #128
 2715 043c 1206     		lsl	r2, r2, #24
 2716 043e 5A40     		eor	r2, r3
 2717 0440 914B     		ldr	r3, .L89+40
 2718 0442 1A60     		str	r2, [r3]
 2719              	.L82:
 527:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	}
 528:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 529:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// compute the trial geomagnetic field strength B in bit counts times fmatrixscaling 
 530:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	ftrB = (float)sqrt(fabs(A[0][0] * ftrVx * ftrVx + A[1][1] * ftrVy * ftrVy + A[2][2] * ftrVz * ftrV
 2720              		.loc 1 530 0
 2721 0444 8B4B     		ldr	r3, .L89+20
 2722 0446 1B68     		ldr	r3, [r3]
 2723 0448 1A68     		ldr	r2, [r3]
 2724 044a 8C4B     		ldr	r3, .L89+28
 2725 044c 1B68     		ldr	r3, [r3]
 2726 044e 101C     		add	r0, r2, #0
 2727 0450 191C     		add	r1, r3, #0
 2728 0452 FFF7FEFF 		bl	__aeabi_fmul
 2729 0456 031C     		add	r3, r0, #0
 2730 0458 1A1C     		add	r2, r3, #0
 2731 045a 884B     		ldr	r3, .L89+28
 2732 045c 1B68     		ldr	r3, [r3]
 2733 045e 101C     		add	r0, r2, #0
 2734 0460 191C     		add	r1, r3, #0
 2735 0462 FFF7FEFF 		bl	__aeabi_fmul
 2736 0466 031C     		add	r3, r0, #0
 2737 0468 1C1C     		add	r4, r3, #0
 2738 046a 824B     		ldr	r3, .L89+20
 2739 046c 5B68     		ldr	r3, [r3, #4]
 2740 046e 0433     		add	r3, r3, #4
 2741 0470 1A68     		ldr	r2, [r3]
 2742 0472 834B     		ldr	r3, .L89+32
 2743 0474 1B68     		ldr	r3, [r3]
 2744 0476 101C     		add	r0, r2, #0
 2745 0478 191C     		add	r1, r3, #0
 2746 047a FFF7FEFF 		bl	__aeabi_fmul
 2747 047e 031C     		add	r3, r0, #0
 2748 0480 1A1C     		add	r2, r3, #0
 2749 0482 7F4B     		ldr	r3, .L89+32
 2750 0484 1B68     		ldr	r3, [r3]
 2751 0486 101C     		add	r0, r2, #0
 2752 0488 191C     		add	r1, r3, #0
 2753 048a FFF7FEFF 		bl	__aeabi_fmul
 2754 048e 031C     		add	r3, r0, #0
 2755 0490 201C     		add	r0, r4, #0
 2756 0492 191C     		add	r1, r3, #0
 2757 0494 FFF7FEFF 		bl	__aeabi_fadd
 2758 0498 031C     		add	r3, r0, #0
 2759 049a 1C1C     		add	r4, r3, #0
 2760 049c 754B     		ldr	r3, .L89+20
 2761 049e 9B68     		ldr	r3, [r3, #8]
 2762 04a0 0833     		add	r3, r3, #8
 2763 04a2 1A68     		ldr	r2, [r3]
 2764 04a4 774B     		ldr	r3, .L89+36
 2765 04a6 1B68     		ldr	r3, [r3]
 2766 04a8 101C     		add	r0, r2, #0
 2767 04aa 191C     		add	r1, r3, #0
 2768 04ac FFF7FEFF 		bl	__aeabi_fmul
 2769 04b0 031C     		add	r3, r0, #0
 2770 04b2 1A1C     		add	r2, r3, #0
 2771 04b4 734B     		ldr	r3, .L89+36
 2772 04b6 1B68     		ldr	r3, [r3]
 2773 04b8 101C     		add	r0, r2, #0
 2774 04ba 191C     		add	r1, r3, #0
 2775 04bc FFF7FEFF 		bl	__aeabi_fmul
 2776 04c0 031C     		add	r3, r0, #0
 2777 04c2 201C     		add	r0, r4, #0
 2778 04c4 191C     		add	r1, r3, #0
 2779 04c6 FFF7FEFF 		bl	__aeabi_fadd
 2780 04ca 031C     		add	r3, r0, #0
 2781 04cc 1A1C     		add	r2, r3, #0
 2782 04ce 6A4B     		ldr	r3, .L89+24
 2783 04d0 9969     		ldr	r1, [r3, #24]
 2784 04d2 BB6A     		ldr	r3, [r7, #40]
 2785 04d4 9B00     		lsl	r3, r3, #2
 2786 04d6 CB18     		add	r3, r1, r3
 2787 04d8 1B68     		ldr	r3, [r3]
 2788 04da 101C     		add	r0, r2, #0
 2789 04dc 191C     		add	r1, r3, #0
 2790 04de FFF7FEFF 		bl	__aeabi_fsub
 2791 04e2 031C     		add	r3, r0, #0
 2792 04e4 5B00     		lsl	r3, r3, #1
 2793 04e6 5B08     		lsr	r3, r3, #1
 2794 04e8 181C     		add	r0, r3, #0
 2795 04ea FFF7FEFF 		bl	__aeabi_f2d
 2796 04ee 031C     		mov	r3, r0
 2797 04f0 0C1C     		mov	r4, r1
 2798 04f2 181C     		mov	r0, r3
 2799 04f4 211C     		mov	r1, r4
 2800 04f6 FFF7FEFF 		bl	sqrt
 2801 04fa 031C     		mov	r3, r0
 2802 04fc 0C1C     		mov	r4, r1
 2803 04fe 181C     		mov	r0, r3
 2804 0500 211C     		mov	r1, r4
 2805 0502 FFF7FEFF 		bl	__aeabi_d2f
 2806 0506 021C     		add	r2, r0, #0
 2807 0508 614B     		ldr	r3, .L89+48
 2808 050a 1A60     		str	r2, [r3]
 531:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 532:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// calculate the trial normalised fit error as a percentage 
 533:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	ftrFitErrorpc = 100.0F * (float) sqrt(fabs(ftmpA7x1[j][0]) / (double) MagBufferCount) / (2.0F * ft
 2809              		.loc 1 533 0
 2810 050c 584B     		ldr	r3, .L89+16
 2811 050e BA6A     		ldr	r2, [r7, #40]
 2812 0510 9200     		lsl	r2, r2, #2
 2813 0512 D358     		ldr	r3, [r2, r3]
 2814 0514 1B68     		ldr	r3, [r3]
 2815 0516 5B00     		lsl	r3, r3, #1
 2816 0518 5B08     		lsr	r3, r3, #1
 2817 051a 181C     		add	r0, r3, #0
 2818 051c FFF7FEFF 		bl	__aeabi_f2d
 2819 0520 051C     		mov	r5, r0
 2820 0522 0E1C     		mov	r6, r1
 2821 0524 5B4B     		ldr	r3, .L89+52
 2822 0526 1B68     		ldr	r3, [r3]
 2823 0528 181C     		mov	r0, r3
 2824 052a FFF7FEFF 		bl	__aeabi_i2d
 2825 052e 031C     		mov	r3, r0
 2826 0530 0C1C     		mov	r4, r1
 2827 0532 281C     		mov	r0, r5
 2828 0534 311C     		mov	r1, r6
 2829 0536 1A1C     		mov	r2, r3
 2830 0538 231C     		mov	r3, r4
 2831 053a FFF7FEFF 		bl	__aeabi_ddiv
 2832 053e 031C     		mov	r3, r0
 2833 0540 0C1C     		mov	r4, r1
 2834 0542 181C     		mov	r0, r3
 2835 0544 211C     		mov	r1, r4
 2836 0546 FFF7FEFF 		bl	sqrt
 2837 054a 031C     		mov	r3, r0
 2838 054c 0C1C     		mov	r4, r1
 2839 054e 181C     		mov	r0, r3
 2840 0550 211C     		mov	r1, r4
 2841 0552 FFF7FEFF 		bl	__aeabi_d2f
 2842 0556 031C     		add	r3, r0, #0
 2843 0558 181C     		add	r0, r3, #0
 2844 055a 4F49     		ldr	r1, .L89+56
 2845 055c FFF7FEFF 		bl	__aeabi_fmul
 2846 0560 031C     		add	r3, r0, #0
 2847 0562 1C1C     		add	r4, r3, #0
 2848 0564 4A4B     		ldr	r3, .L89+48
 2849 0566 1B68     		ldr	r3, [r3]
 2850 0568 181C     		add	r0, r3, #0
 2851 056a 191C     		add	r1, r3, #0
 2852 056c FFF7FEFF 		bl	__aeabi_fadd
 2853 0570 031C     		add	r3, r0, #0
 2854 0572 1A1C     		add	r2, r3, #0
 2855 0574 464B     		ldr	r3, .L89+48
 2856 0576 1B68     		ldr	r3, [r3]
 2857 0578 101C     		add	r0, r2, #0
 2858 057a 191C     		add	r1, r3, #0
 2859 057c FFF7FEFF 		bl	__aeabi_fmul
 2860 0580 031C     		add	r3, r0, #0
 2861 0582 201C     		add	r0, r4, #0
 2862 0584 191C     		add	r1, r3, #0
 2863 0586 FFF7FEFF 		bl	__aeabi_fdiv
 2864 058a 031C     		add	r3, r0, #0
 2865 058c 1A1C     		add	r2, r3, #0
 2866 058e 434B     		ldr	r3, .L89+60
 2867 0590 1A60     		str	r2, [r3]
 534:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	//printf("\n\nTrial new calibration fit error=%9.4f%% versus previous %9.4f%%", ftrFitErrorpc, fFi
 535:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 536:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// correct for the measurement matrix offset and scaling and get the computed trial hard iron offs
 537:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	ftrVx = ftrVx * finvmatrixscaling + fOffsetx;
 2868              		.loc 1 537 0
 2869 0592 3A4B     		ldr	r3, .L89+28
 2870 0594 1B68     		ldr	r3, [r3]
 2871 0596 181C     		add	r0, r3, #0
 2872 0598 4149     		ldr	r1, .L89+64
 2873 059a FFF7FEFF 		bl	__aeabi_fmul
 2874 059e 031C     		add	r3, r0, #0
 2875 05a0 181C     		add	r0, r3, #0
 2876 05a2 F969     		ldr	r1, [r7, #28]
 2877 05a4 FFF7FEFF 		bl	__aeabi_fadd
 2878 05a8 031C     		add	r3, r0, #0
 2879 05aa 1A1C     		add	r2, r3, #0
 2880 05ac 334B     		ldr	r3, .L89+28
 2881 05ae 1A60     		str	r2, [r3]
 538:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	ftrVy = ftrVy * finvmatrixscaling + fOffsety;
 2882              		.loc 1 538 0
 2883 05b0 334B     		ldr	r3, .L89+32
 2884 05b2 1B68     		ldr	r3, [r3]
 2885 05b4 181C     		add	r0, r3, #0
 2886 05b6 3A49     		ldr	r1, .L89+64
 2887 05b8 FFF7FEFF 		bl	__aeabi_fmul
 2888 05bc 031C     		add	r3, r0, #0
 2889 05be 181C     		add	r0, r3, #0
 2890 05c0 B969     		ldr	r1, [r7, #24]
 2891 05c2 FFF7FEFF 		bl	__aeabi_fadd
 2892 05c6 031C     		add	r3, r0, #0
 2893 05c8 1A1C     		add	r2, r3, #0
 2894 05ca 2D4B     		ldr	r3, .L89+32
 2895 05cc 1A60     		str	r2, [r3]
 539:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	ftrVz = ftrVz * finvmatrixscaling + fOffsetz;
 2896              		.loc 1 539 0
 2897 05ce 2D4B     		ldr	r3, .L89+36
 2898 05d0 1B68     		ldr	r3, [r3]
 2899 05d2 181C     		add	r0, r3, #0
 2900 05d4 3249     		ldr	r1, .L89+64
 2901 05d6 FFF7FEFF 		bl	__aeabi_fmul
 2902 05da 031C     		add	r3, r0, #0
 2903 05dc 181C     		add	r0, r3, #0
 2904 05de 7969     		ldr	r1, [r7, #20]
 2905 05e0 FFF7FEFF 		bl	__aeabi_fadd
 2906 05e4 031C     		add	r3, r0, #0
 2907 05e6 1A1C     		add	r2, r3, #0
 2908 05e8 264B     		ldr	r3, .L89+36
 2909 05ea 1A60     		str	r2, [r3]
 540:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	//printf("\n\nTrial new calibration hard iron (uT) Vx=%9.3f Vy=%9.3f Vz=%9.3f", ftrVx, ftrVy, ftrV
 541:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 542:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// convert the geomagnetic field strength B into uT for current soft iron matrix A 
 543:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	ftrB *= finvmatrixscaling;
 2910              		.loc 1 543 0
 2911 05ec 284B     		ldr	r3, .L89+48
 2912 05ee 1B68     		ldr	r3, [r3]
 2913 05f0 181C     		add	r0, r3, #0
 2914 05f2 2B49     		ldr	r1, .L89+64
 2915 05f4 FFF7FEFF 		bl	__aeabi_fmul
 2916 05f8 031C     		add	r3, r0, #0
 2917 05fa 1A1C     		add	r2, r3, #0
 2918 05fc 244B     		ldr	r3, .L89+48
 2919 05fe 1A60     		str	r2, [r3]
 544:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 545:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// normalise the ellipsoid matrix A to unit determinant and correct B by root of this multiplicati
 546:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	fmatrixAeqAxScalar(A, (float)pow((double)det, (double) (-1.0F / 3.0F)), 3, 3);
 2920              		.loc 1 546 0
 2921 0600 214B     		ldr	r3, .L89+40
 2922 0602 1B68     		ldr	r3, [r3]
 2923 0604 181C     		add	r0, r3, #0
 2924 0606 FFF7FEFF 		bl	__aeabi_f2d
 2925 060a 0A1C     		mov	r2, r1
 2926 060c 011C     		mov	r1, r0
 2927 060e 154C     		ldr	r4, .L89+4
 2928 0610 134B     		ldr	r3, .L89
 2929 0612 081C     		mov	r0, r1
 2930 0614 111C     		mov	r1, r2
 2931 0616 1A1C     		mov	r2, r3
 2932 0618 231C     		mov	r3, r4
 2933 061a FFF7FEFF 		bl	pow
 2934 061e 031C     		mov	r3, r0
 2935 0620 0C1C     		mov	r4, r1
 2936 0622 181C     		mov	r0, r3
 2937 0624 211C     		mov	r1, r4
 2938 0626 FFF7FEFF 		bl	__aeabi_d2f
 2939 062a 031C     		add	r3, r0, #0
 2940 062c 114A     		ldr	r2, .L89+20
 2941 062e 101C     		mov	r0, r2
 2942 0630 191C     		add	r1, r3, #0
 2943 0632 0322     		mov	r2, #3
 2944 0634 0323     		mov	r3, #3
 2945 0636 FFF7FEFF 		bl	fmatrixAeqAxScalar
 547:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	ftrB *= (float)pow((double)det, (double) (-1.0F / 6.0F));
 2946              		.loc 1 547 0
 2947 063a 134B     		ldr	r3, .L89+40
 2948 063c 1B68     		ldr	r3, [r3]
 2949 063e 181C     		add	r0, r3, #0
 2950 0640 FFF7FEFF 		bl	__aeabi_f2d
 2951 0644 0A1C     		mov	r2, r1
 2952 0646 011C     		mov	r1, r0
 2953 0648 074B     		ldr	r3, .L89+8
 2954 064a 084C     		ldr	r4, .L89+12
 2955 064c 081C     		mov	r0, r1
 2956 064e 111C     		mov	r1, r2
 2957 0650 1A1C     		mov	r2, r3
 2958 0652 231C     		mov	r3, r4
 2959 0654 FFF7FEFF 		bl	pow
 2960 0658 031C     		mov	r3, r0
 2961 065a 0C1C     		mov	r4, r1
 2962 065c 181C     		mov	r0, r3
 2963 065e 21E0     		b	.L90
 2964              	.L91:
 2965              		.align	3
 2966              	.L89:
 2967 0660 00000060 		.word	1610612736
 2968 0664 5555D5BF 		.word	-1076538027
 2969 0668 00000060 		.word	1610612736
 2970 066c 5555C5BF 		.word	-1077586603
 2971 0670 00000000 		.word	ftmpA7x1
 2972 0674 00000000 		.word	A
 2973 0678 00000000 		.word	ftmpA7x7
 2974 067c 00000000 		.word	ftrVx
 2975 0680 00000000 		.word	ftrVy
 2976 0684 00000000 		.word	ftrVz
 2977 0688 00000000 		.word	det
 2978 068c 000080BF 		.word	-1082130432
 2979 0690 00000000 		.word	ftrB
 2980 0694 00000000 		.word	MagBufferCount
 2981 0698 0000C842 		.word	1120403456
 2982 069c 00000000 		.word	ftrFitErrorpc
 2983 06a0 00004842 		.word	1112014848
 2984              	.L90:
 2985 06a4 211C     		mov	r1, r4
 2986 06a6 FFF7FEFF 		bl	__aeabi_d2f
 2987 06aa 021C     		add	r2, r0, #0
 2988 06ac 3C4B     		ldr	r3, .L92
 2989 06ae 1B68     		ldr	r3, [r3]
 2990 06b0 101C     		add	r0, r2, #0
 2991 06b2 191C     		add	r1, r3, #0
 2992 06b4 FFF7FEFF 		bl	__aeabi_fmul
 2993 06b8 031C     		add	r3, r0, #0
 2994 06ba 1A1C     		add	r2, r3, #0
 2995 06bc 384B     		ldr	r3, .L92
 2996 06be 1A60     		str	r2, [r3]
 548:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	//printf("\n\nTrial new calibration geomagnetic field (uT) B=%9.3f", ftrB);
 549:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****         
 550:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	//printf("\n\nTrial new calibration ellipsoid matrix A (normalized)");
 551:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	//fmatrixPrintA(A, 0, 2, 0, 2);
 552:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 553:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// compute trial invW from the square root of A also with normalised determinant 
 554:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	ftrinvW[0][0] = (float)sqrt(fabs(A[0][0]));
 2997              		.loc 1 554 0
 2998 06c0 384B     		ldr	r3, .L92+4
 2999 06c2 1D68     		ldr	r5, [r3]
 3000 06c4 384B     		ldr	r3, .L92+8
 3001 06c6 1B68     		ldr	r3, [r3]
 3002 06c8 1B68     		ldr	r3, [r3]
 3003 06ca 5B00     		lsl	r3, r3, #1
 3004 06cc 5B08     		lsr	r3, r3, #1
 3005 06ce 181C     		add	r0, r3, #0
 3006 06d0 FFF7FEFF 		bl	__aeabi_f2d
 3007 06d4 031C     		mov	r3, r0
 3008 06d6 0C1C     		mov	r4, r1
 3009 06d8 181C     		mov	r0, r3
 3010 06da 211C     		mov	r1, r4
 3011 06dc FFF7FEFF 		bl	sqrt
 3012 06e0 031C     		mov	r3, r0
 3013 06e2 0C1C     		mov	r4, r1
 3014 06e4 181C     		mov	r0, r3
 3015 06e6 211C     		mov	r1, r4
 3016 06e8 FFF7FEFF 		bl	__aeabi_d2f
 3017 06ec 031C     		add	r3, r0, #0
 3018 06ee 2B60     		str	r3, [r5]
 555:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	ftrinvW[1][1] = (float)sqrt(fabs(A[1][1]));
 3019              		.loc 1 555 0
 3020 06f0 2C4B     		ldr	r3, .L92+4
 3021 06f2 5B68     		ldr	r3, [r3, #4]
 3022 06f4 1D1D     		add	r5, r3, #4
 3023 06f6 2C4B     		ldr	r3, .L92+8
 3024 06f8 5B68     		ldr	r3, [r3, #4]
 3025 06fa 0433     		add	r3, r3, #4
 3026 06fc 1B68     		ldr	r3, [r3]
 3027 06fe 5B00     		lsl	r3, r3, #1
 3028 0700 5B08     		lsr	r3, r3, #1
 3029 0702 181C     		add	r0, r3, #0
 3030 0704 FFF7FEFF 		bl	__aeabi_f2d
 3031 0708 031C     		mov	r3, r0
 3032 070a 0C1C     		mov	r4, r1
 3033 070c 181C     		mov	r0, r3
 3034 070e 211C     		mov	r1, r4
 3035 0710 FFF7FEFF 		bl	sqrt
 3036 0714 031C     		mov	r3, r0
 3037 0716 0C1C     		mov	r4, r1
 3038 0718 181C     		mov	r0, r3
 3039 071a 211C     		mov	r1, r4
 3040 071c FFF7FEFF 		bl	__aeabi_d2f
 3041 0720 031C     		add	r3, r0, #0
 3042 0722 2B60     		str	r3, [r5]
 556:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	ftrinvW[2][2] = (float)sqrt(fabs(A[2][2]));
 3043              		.loc 1 556 0
 3044 0724 1F4B     		ldr	r3, .L92+4
 3045 0726 9B68     		ldr	r3, [r3, #8]
 3046 0728 1D1C     		mov	r5, r3
 3047 072a 0835     		add	r5, r5, #8
 3048 072c 1E4B     		ldr	r3, .L92+8
 3049 072e 9B68     		ldr	r3, [r3, #8]
 3050 0730 0833     		add	r3, r3, #8
 3051 0732 1B68     		ldr	r3, [r3]
 3052 0734 5B00     		lsl	r3, r3, #1
 3053 0736 5B08     		lsr	r3, r3, #1
 3054 0738 181C     		add	r0, r3, #0
 3055 073a FFF7FEFF 		bl	__aeabi_f2d
 3056 073e 031C     		mov	r3, r0
 3057 0740 0C1C     		mov	r4, r1
 3058 0742 181C     		mov	r0, r3
 3059 0744 211C     		mov	r1, r4
 3060 0746 FFF7FEFF 		bl	sqrt
 3061 074a 031C     		mov	r3, r0
 3062 074c 0C1C     		mov	r4, r1
 3063 074e 181C     		mov	r0, r3
 3064 0750 211C     		mov	r1, r4
 3065 0752 FFF7FEFF 		bl	__aeabi_d2f
 3066 0756 031C     		add	r3, r0, #0
 3067 0758 2B60     		str	r3, [r5]
 557:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	ftrinvW[0][1] = ftrinvW[0][2] = ftrinvW[1][0] = ftrinvW[1][2] = ftrinvW[2][0] = ftrinvW[2][1] = 0.
 3068              		.loc 1 557 0
 3069 075a 124B     		ldr	r3, .L92+4
 3070 075c 1B68     		ldr	r3, [r3]
 3071 075e 1D1D     		add	r5, r3, #4
 3072 0760 104B     		ldr	r3, .L92+4
 3073 0762 1B68     		ldr	r3, [r3]
 3074 0764 0833     		add	r3, r3, #8
 3075 0766 0F4A     		ldr	r2, .L92+4
 3076 0768 5268     		ldr	r2, [r2, #4]
 3077 076a 0E49     		ldr	r1, .L92+4
 3078 076c 4968     		ldr	r1, [r1, #4]
 3079 076e 0831     		add	r1, r1, #8
 3080 0770 0C48     		ldr	r0, .L92+4
 3081 0772 8068     		ldr	r0, [r0, #8]
 3082 0774 0B4C     		ldr	r4, .L92+4
 3083 0776 A468     		ldr	r4, [r4, #8]
 3084 0778 0434     		add	r4, r4, #4
 3085 077a 0026     		mov	r6, #0
 3086 077c 2660     		str	r6, [r4]
 3087 077e 2468     		ldr	r4, [r4]
 3088 0780 0460     		str	r4, [r0]
 3089 0782 0068     		ldr	r0, [r0]
 3090 0784 0860     		str	r0, [r1]
 3091 0786 0968     		ldr	r1, [r1]
 3092 0788 1160     		str	r1, [r2]
 3093 078a 1268     		ldr	r2, [r2]
 3094 078c 1A60     		str	r2, [r3]
 3095 078e 1B68     		ldr	r3, [r3]
 3096 0790 2B60     		str	r3, [r5]
 558:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	//printf("\n\nTrial new calibration inverse soft iron matrix invW (normalized)");
 559:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	//fmatrixPrintA(ftrinvW, 0, 2, 0, 2);
 560:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 561:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// for convenience show the original optimal invW 
 562:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	//printf("\n\nFor comparison: Simulation inverse soft iron matrix invW (normalized)");  //********
 563:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	//fmatrixPrintA(invSimW, 0, 2, 0, 2);
 564:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 565:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// finally set the valid calibration flag to true 
 566:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	validmagcal = 1;
 3097              		.loc 1 566 0
 3098 0792 064B     		ldr	r3, .L92+12
 3099 0794 0122     		mov	r2, #1
 3100 0796 1A60     		str	r2, [r3]
 567:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 568:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	return;
 3101              		.loc 1 568 0
 3102 0798 C046     		mov	r8, r8
 569:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** }
 3103              		.loc 1 569 0
 3104 079a BD46     		mov	sp, r7
 3105 079c 0DB0     		add	sp, sp, #52
 3106              		@ sp needed for prologue
 3107 079e F0BD     		pop	{r4, r5, r6, r7, pc}
 3108              	.L93:
 3109              		.align	2
 3110              	.L92:
 3111 07a0 00000000 		.word	ftrB
 3112 07a4 00000000 		.word	ftrinvW
 3113 07a8 00000000 		.word	A
 3114 07ac 00000000 		.word	validmagcal
 3115              		.cfi_endproc
 3116              	.LFE6:
 3118              		.section	.rodata
 3119 00d3 00       		.align	2
 3120              	.LC94:
 3121 00d4 0A0A3420 		.ascii	"\012\0124 element INV calibration at iteration %d w"
 3121      656C656D 
 3121      656E7420 
 3121      494E5620 
 3121      63616C69 
 3122 0101 69746820 		.ascii	"ith %d in Magnetic Buffer\000"
 3122      25642069 
 3122      6E204D61 
 3122      676E6574 
 3122      69632042 
 3123 011b 00       		.align	2
 3124              	.LC109:
 3125 011c 0A0A5472 		.ascii	"\012\012Trial new calibration fit error=%9.4f%% ver"
 3125      69616C20 
 3125      6E657720 
 3125      63616C69 
 3125      62726174 
 3126 0149 73757320 		.ascii	"sus previous %9.4f%%\000"
 3126      70726576 
 3126      696F7573 
 3126      2025392E 
 3126      34662525 
 3127 015e 0000     		.align	2
 3128              	.LC111:
 3129 0160 0A0A5472 		.ascii	"\012\012Trial new calibration hard iron (uT) Vx=%9."
 3129      69616C20 
 3129      6E657720 
 3129      63616C69 
 3129      62726174 
 3130 018d 33662056 		.ascii	"3f Vy=%9.3f Vz=%9.3f\000"
 3130      793D2539 
 3130      2E336620 
 3130      567A3D25 
 3130      392E3366 
 3131 01a2 0000     		.align	2
 3132              	.LC113:
 3133 01a4 0A0A5472 		.ascii	"\012\012Trial new calibration geomagnetic field (uT"
 3133      69616C20 
 3133      6E657720 
 3133      63616C69 
 3133      62726174 
 3134 01d1 2920423D 		.ascii	") B=%9.3f\000"
 3134      25392E33 
 3134      6600
 3135              		.section	.text.fUpdateCalibration4INV,"ax",%progbits
 3136              		.align	2
 3137              		.global	fUpdateCalibration4INV
 3138              		.code	16
 3139              		.thumb_func
 3141              	fUpdateCalibration4INV:
 3142              	.LFB7:
 570:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 571:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** // 4 element calibration using 4x4 matrix inverse 
 572:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** void fUpdateCalibration4INV(void)
 573:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** {
 3143              		.loc 1 573 0
 3144              		.cfi_startproc
 3145 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3146              	.LCFI18:
 3147              		.cfi_def_cfa_offset 20
 3148              		.cfi_offset 4, -20
 3149              		.cfi_offset 5, -16
 3150              		.cfi_offset 6, -12
 3151              		.cfi_offset 7, -8
 3152              		.cfi_offset 14, -4
 3153 0002 95B0     		sub	sp, sp, #84
 3154              	.LCFI19:
 3155              		.cfi_def_cfa_offset 104
 3156 0004 04AF     		add	r7, sp, #16
 3157              	.LCFI20:
 3158              		.cfi_def_cfa 7, 88
 574:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// global working arrays used
 575:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// fX4, fY, ftmpB4x4, ftmpA4x1, ftmpB4x1 here and ftmpA4x4, ftmpA4x1 used in f4x4matrixAeqInvSymA
 576:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 577:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	int32 i, j, k, l;							// loop counters 
 578:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	float fOffsetx, fOffsety, fOffsetz;			// offset to remove large DC hard iron bias in matrix 
 579:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	float ftmpBpx, ftmpBpy, ftmpBpz;			// scratch variables 
 580:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	float fXBeta;								// model fit for a particular measurement 
 581:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 582:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	printf("\n\n4 element INV calibration at iteration %d with %d in Magnetic Buffer", loopcounter, Ma
 3159              		.loc 1 582 0
 3160 0006 B14B     		ldr	r3, .L106
 3161 0008 1A68     		ldr	r2, [r3]
 3162 000a B14B     		ldr	r3, .L106+4
 3163 000c 1B68     		ldr	r3, [r3]
 3164 000e B149     		ldr	r1, .L106+8
 3165 0010 081C     		mov	r0, r1
 3166 0012 111C     		mov	r1, r2
 3167 0014 1A1C     		mov	r2, r3
 3168 0016 FFF7FEFF 		bl	printf
 583:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 584:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// the offsets are guaranteed to be set from the first element but to avoid compiler error 
 585:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	fOffsetx = fOffsety = fOffsetz = 0.0F;
 3169              		.loc 1 585 0
 3170 001a 0023     		mov	r3, #0
 3171 001c 7B62     		str	r3, [r7, #36]
 3172 001e 7B6A     		ldr	r3, [r7, #36]
 3173 0020 BB62     		str	r3, [r7, #40]
 3174 0022 BB6A     		ldr	r3, [r7, #40]
 3175 0024 FB62     		str	r3, [r7, #44]
 586:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 587:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// place from MINEQUATIONS up to MAXEQUATIONS entries into the measurement matrix 
 588:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	i = 0;
 3176              		.loc 1 588 0
 3177 0026 0023     		mov	r3, #0
 3178 0028 FB63     		str	r3, [r7, #60]
 589:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (j = 0; j < MAGBUFFSIZE; j++)
 3179              		.loc 1 589 0
 3180 002a 0023     		mov	r3, #0
 3181 002c BB63     		str	r3, [r7, #56]
 3182 002e F0E0     		b	.L95
 3183              	.L102:
 590:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	{
 591:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		for (k = 0; k < MAGBUFFSIZE; k++)
 3184              		.loc 1 591 0
 3185 0030 0023     		mov	r3, #0
 3186 0032 7B63     		str	r3, [r7, #52]
 3187 0034 E6E0     		b	.L96
 3188              	.L101:
 592:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		{
 593:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			for (l = 0; l < MAGBUFFSIZE; l++)
 3189              		.loc 1 593 0
 3190 0036 0023     		mov	r3, #0
 3191 0038 3B63     		str	r3, [r7, #48]
 3192 003a DCE0     		b	.L97
 3193              	.L100:
 594:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			{
 595:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 				if (iMagBuff[j][k][l].index != -1)
 3194              		.loc 1 595 0
 3195 003c A648     		ldr	r0, .L106+12
 3196 003e 3B6B     		ldr	r3, [r7, #48]
 3197 0040 796B     		ldr	r1, [r7, #52]
 3198 0042 BC6B     		ldr	r4, [r7, #56]
 3199 0044 1A1C     		mov	r2, r3
 3200 0046 5200     		lsl	r2, r2, #1
 3201 0048 D218     		add	r2, r2, r3
 3202 004a 9300     		lsl	r3, r2, #2
 3203 004c 1A1C     		mov	r2, r3
 3204 004e 0B1C     		mov	r3, r1
 3205 0050 1B01     		lsl	r3, r3, #4
 3206 0052 5B1A     		sub	r3, r3, r1
 3207 0054 9B00     		lsl	r3, r3, #2
 3208 0056 D218     		add	r2, r2, r3
 3209 0058 9623     		mov	r3, #150
 3210 005a 5B00     		lsl	r3, r3, #1
 3211 005c 6343     		mul	r3, r4
 3212 005e D318     		add	r3, r2, r3
 3213 0060 C318     		add	r3, r0, r3
 3214 0062 0833     		add	r3, r3, #8
 3215 0064 1B68     		ldr	r3, [r3]
 3216 0066 0133     		add	r3, r3, #1
 3217 0068 00D1     		bne	.LCB2823
 3218 006a C1E0     		b	.L98	@long jump
 3219              	.LCB2823:
 596:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 				{
 597:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					// set tmp to valid data from the magnetic buffer 
 598:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					ftmpBpx = (float)iMagBuff[j][k][l].iBx * fuTpercount;
 3220              		.loc 1 598 0
 3221 006c 9A48     		ldr	r0, .L106+12
 3222 006e 396B     		ldr	r1, [r7, #48]
 3223 0070 7A6B     		ldr	r2, [r7, #52]
 3224 0072 BC6B     		ldr	r4, [r7, #56]
 3225 0074 0B1C     		mov	r3, r1
 3226 0076 5B00     		lsl	r3, r3, #1
 3227 0078 5B18     		add	r3, r3, r1
 3228 007a 9B00     		lsl	r3, r3, #2
 3229 007c 9621     		mov	r1, #150
 3230 007e 4900     		lsl	r1, r1, #1
 3231 0080 6143     		mul	r1, r4
 3232 0082 5918     		add	r1, r3, r1
 3233 0084 131C     		mov	r3, r2
 3234 0086 1B01     		lsl	r3, r3, #4
 3235 0088 9B1A     		sub	r3, r3, r2
 3236 008a 9B00     		lsl	r3, r3, #2
 3237 008c CB18     		add	r3, r1, r3
 3238 008e 1B5A     		ldrh	r3, [r3, r0]
 3239 0090 1BB2     		sxth	r3, r3
 3240 0092 181C     		mov	r0, r3
 3241 0094 FFF7FEFF 		bl	__aeabi_i2f
 3242 0098 031C     		add	r3, r0, #0
 3243 009a 181C     		add	r0, r3, #0
 3244 009c 8F49     		ldr	r1, .L106+16
 3245 009e FFF7FEFF 		bl	__aeabi_fmul
 3246 00a2 031C     		add	r3, r0, #0
 3247 00a4 3B62     		str	r3, [r7, #32]
 599:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					ftmpBpy = (float)iMagBuff[j][k][l].iBy * fuTpercount;
 3248              		.loc 1 599 0
 3249 00a6 8C48     		ldr	r0, .L106+12
 3250 00a8 396B     		ldr	r1, [r7, #48]
 3251 00aa 7A6B     		ldr	r2, [r7, #52]
 3252 00ac BC6B     		ldr	r4, [r7, #56]
 3253 00ae 0B1C     		mov	r3, r1
 3254 00b0 5B00     		lsl	r3, r3, #1
 3255 00b2 5B18     		add	r3, r3, r1
 3256 00b4 9B00     		lsl	r3, r3, #2
 3257 00b6 9621     		mov	r1, #150
 3258 00b8 4900     		lsl	r1, r1, #1
 3259 00ba 6143     		mul	r1, r4
 3260 00bc 5918     		add	r1, r3, r1
 3261 00be 131C     		mov	r3, r2
 3262 00c0 1B01     		lsl	r3, r3, #4
 3263 00c2 9B1A     		sub	r3, r3, r2
 3264 00c4 9B00     		lsl	r3, r3, #2
 3265 00c6 CB18     		add	r3, r1, r3
 3266 00c8 C318     		add	r3, r0, r3
 3267 00ca 5B88     		ldrh	r3, [r3, #2]
 3268 00cc 1BB2     		sxth	r3, r3
 3269 00ce 181C     		mov	r0, r3
 3270 00d0 FFF7FEFF 		bl	__aeabi_i2f
 3271 00d4 031C     		add	r3, r0, #0
 3272 00d6 181C     		add	r0, r3, #0
 3273 00d8 8049     		ldr	r1, .L106+16
 3274 00da FFF7FEFF 		bl	__aeabi_fmul
 3275 00de 031C     		add	r3, r0, #0
 3276 00e0 FB61     		str	r3, [r7, #28]
 600:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					ftmpBpz = (float)iMagBuff[j][k][l].iBz * fuTpercount;
 3277              		.loc 1 600 0
 3278 00e2 7D48     		ldr	r0, .L106+12
 3279 00e4 396B     		ldr	r1, [r7, #48]
 3280 00e6 7A6B     		ldr	r2, [r7, #52]
 3281 00e8 BC6B     		ldr	r4, [r7, #56]
 3282 00ea 0B1C     		mov	r3, r1
 3283 00ec 5B00     		lsl	r3, r3, #1
 3284 00ee 5B18     		add	r3, r3, r1
 3285 00f0 9B00     		lsl	r3, r3, #2
 3286 00f2 9621     		mov	r1, #150
 3287 00f4 4900     		lsl	r1, r1, #1
 3288 00f6 6143     		mul	r1, r4
 3289 00f8 5918     		add	r1, r3, r1
 3290 00fa 131C     		mov	r3, r2
 3291 00fc 1B01     		lsl	r3, r3, #4
 3292 00fe 9B1A     		sub	r3, r3, r2
 3293 0100 9B00     		lsl	r3, r3, #2
 3294 0102 CB18     		add	r3, r1, r3
 3295 0104 C318     		add	r3, r0, r3
 3296 0106 9B88     		ldrh	r3, [r3, #4]
 3297 0108 1BB2     		sxth	r3, r3
 3298 010a 181C     		mov	r0, r3
 3299 010c FFF7FEFF 		bl	__aeabi_i2f
 3300 0110 031C     		add	r3, r0, #0
 3301 0112 181C     		add	r0, r3, #0
 3302 0114 7149     		ldr	r1, .L106+16
 3303 0116 FFF7FEFF 		bl	__aeabi_fmul
 3304 011a 031C     		add	r3, r0, #0
 3305 011c BB61     		str	r3, [r7, #24]
 601:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 602:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					// use first valid magnetic buffer entry as estimate (in uT) for offset to help solution 
 603:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					if (i == 0)
 3306              		.loc 1 603 0
 3307 011e FB6B     		ldr	r3, [r7, #60]
 3308 0120 002B     		cmp	r3, #0
 3309 0122 05D1     		bne	.L99
 604:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					{
 605:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						fOffsetx = ftmpBpx;
 3310              		.loc 1 605 0
 3311 0124 3B6A     		ldr	r3, [r7, #32]
 3312 0126 FB62     		str	r3, [r7, #44]
 606:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						fOffsety = ftmpBpy;
 3313              		.loc 1 606 0
 3314 0128 FB69     		ldr	r3, [r7, #28]
 3315 012a BB62     		str	r3, [r7, #40]
 607:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						fOffsetz = ftmpBpz;
 3316              		.loc 1 607 0
 3317 012c BB69     		ldr	r3, [r7, #24]
 3318 012e 7B62     		str	r3, [r7, #36]
 3319              	.L99:
 608:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					}
 609:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 610:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					// apply the fixed offset and scaling to all measurement vectors for this iteration 
 611:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					ftmpBpx = (ftmpBpx - fOffsetx) * fmatrixscaling;
 3320              		.loc 1 611 0
 3321 0130 386A     		ldr	r0, [r7, #32]
 3322 0132 F96A     		ldr	r1, [r7, #44]
 3323 0134 FFF7FEFF 		bl	__aeabi_fsub
 3324 0138 031C     		add	r3, r0, #0
 3325 013a 181C     		add	r0, r3, #0
 3326 013c 6849     		ldr	r1, .L106+20
 3327 013e FFF7FEFF 		bl	__aeabi_fmul
 3328 0142 031C     		add	r3, r0, #0
 3329 0144 3B62     		str	r3, [r7, #32]
 612:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					ftmpBpy = (ftmpBpy - fOffsety) * fmatrixscaling;
 3330              		.loc 1 612 0
 3331 0146 F869     		ldr	r0, [r7, #28]
 3332 0148 B96A     		ldr	r1, [r7, #40]
 3333 014a FFF7FEFF 		bl	__aeabi_fsub
 3334 014e 031C     		add	r3, r0, #0
 3335 0150 181C     		add	r0, r3, #0
 3336 0152 6349     		ldr	r1, .L106+20
 3337 0154 FFF7FEFF 		bl	__aeabi_fmul
 3338 0158 031C     		add	r3, r0, #0
 3339 015a FB61     		str	r3, [r7, #28]
 613:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					ftmpBpz = (ftmpBpz - fOffsetz) * fmatrixscaling;
 3340              		.loc 1 613 0
 3341 015c B869     		ldr	r0, [r7, #24]
 3342 015e 796A     		ldr	r1, [r7, #36]
 3343 0160 FFF7FEFF 		bl	__aeabi_fsub
 3344 0164 031C     		add	r3, r0, #0
 3345 0166 181C     		add	r0, r3, #0
 3346 0168 5D49     		ldr	r1, .L106+20
 3347 016a FFF7FEFF 		bl	__aeabi_fmul
 3348 016e 031C     		add	r3, r0, #0
 3349 0170 BB61     		str	r3, [r7, #24]
 614:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 615:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					// enter into the measurement matrix X scaling to make entries near unity 
 616:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					fX4[i][0] = ftmpBpx;
 3350              		.loc 1 616 0
 3351 0172 5C4B     		ldr	r3, .L106+24
 3352 0174 FA6B     		ldr	r2, [r7, #60]
 3353 0176 9200     		lsl	r2, r2, #2
 3354 0178 D358     		ldr	r3, [r2, r3]
 3355 017a 3A6A     		ldr	r2, [r7, #32]
 3356 017c 1A60     		str	r2, [r3]
 617:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					fX4[i][1] = ftmpBpy;
 3357              		.loc 1 617 0
 3358 017e 594B     		ldr	r3, .L106+24
 3359 0180 FA6B     		ldr	r2, [r7, #60]
 3360 0182 9200     		lsl	r2, r2, #2
 3361 0184 D358     		ldr	r3, [r2, r3]
 3362 0186 0433     		add	r3, r3, #4
 3363 0188 FA69     		ldr	r2, [r7, #28]
 3364 018a 1A60     		str	r2, [r3]
 618:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					fX4[i][2] = ftmpBpz;
 3365              		.loc 1 618 0
 3366 018c 554B     		ldr	r3, .L106+24
 3367 018e FA6B     		ldr	r2, [r7, #60]
 3368 0190 9200     		lsl	r2, r2, #2
 3369 0192 D358     		ldr	r3, [r2, r3]
 3370 0194 0833     		add	r3, r3, #8
 3371 0196 BA69     		ldr	r2, [r7, #24]
 3372 0198 1A60     		str	r2, [r3]
 619:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					fX4[i][3] = 1.0F;
 3373              		.loc 1 619 0
 3374 019a 524B     		ldr	r3, .L106+24
 3375 019c FA6B     		ldr	r2, [r7, #60]
 3376 019e 9200     		lsl	r2, r2, #2
 3377 01a0 D358     		ldr	r3, [r2, r3]
 3378 01a2 0C33     		add	r3, r3, #12
 3379 01a4 FE22     		mov	r2, #254
 3380 01a6 9205     		lsl	r2, r2, #22
 3381 01a8 1A60     		str	r2, [r3]
 620:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 621:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					// enter into dependent measurement vector Y 
 622:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					fY[i][0] = ftmpBpx * ftmpBpx + ftmpBpy * ftmpBpy + ftmpBpz * ftmpBpz;
 3382              		.loc 1 622 0
 3383 01aa 4F4B     		ldr	r3, .L106+28
 3384 01ac FA6B     		ldr	r2, [r7, #60]
 3385 01ae 9200     		lsl	r2, r2, #2
 3386 01b0 D458     		ldr	r4, [r2, r3]
 3387 01b2 386A     		ldr	r0, [r7, #32]
 3388 01b4 396A     		ldr	r1, [r7, #32]
 3389 01b6 FFF7FEFF 		bl	__aeabi_fmul
 3390 01ba 031C     		add	r3, r0, #0
 3391 01bc 1D1C     		add	r5, r3, #0
 3392 01be F869     		ldr	r0, [r7, #28]
 3393 01c0 F969     		ldr	r1, [r7, #28]
 3394 01c2 FFF7FEFF 		bl	__aeabi_fmul
 3395 01c6 031C     		add	r3, r0, #0
 3396 01c8 281C     		add	r0, r5, #0
 3397 01ca 191C     		add	r1, r3, #0
 3398 01cc FFF7FEFF 		bl	__aeabi_fadd
 3399 01d0 031C     		add	r3, r0, #0
 3400 01d2 1D1C     		add	r5, r3, #0
 3401 01d4 B869     		ldr	r0, [r7, #24]
 3402 01d6 B969     		ldr	r1, [r7, #24]
 3403 01d8 FFF7FEFF 		bl	__aeabi_fmul
 3404 01dc 031C     		add	r3, r0, #0
 3405 01de 281C     		add	r0, r5, #0
 3406 01e0 191C     		add	r1, r3, #0
 3407 01e2 FFF7FEFF 		bl	__aeabi_fadd
 3408 01e6 031C     		add	r3, r0, #0
 3409 01e8 2360     		str	r3, [r4]
 623:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					i++;
 3410              		.loc 1 623 0
 3411 01ea FB6B     		ldr	r3, [r7, #60]
 3412 01ec 0133     		add	r3, r3, #1
 3413 01ee FB63     		str	r3, [r7, #60]
 3414              	.L98:
 593:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			for (l = 0; l < MAGBUFFSIZE; l++)
 3415              		.loc 1 593 0
 3416 01f0 3B6B     		ldr	r3, [r7, #48]
 3417 01f2 0133     		add	r3, r3, #1
 3418 01f4 3B63     		str	r3, [r7, #48]
 3419              	.L97:
 593:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			for (l = 0; l < MAGBUFFSIZE; l++)
 3420              		.loc 1 593 0 is_stmt 0
 3421 01f6 3B6B     		ldr	r3, [r7, #48]
 3422 01f8 042B     		cmp	r3, #4
 3423 01fa 00DC     		bgt	.LCB3012
 3424 01fc 1EE7     		b	.L100	@long jump
 3425              	.LCB3012:
 591:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		for (k = 0; k < MAGBUFFSIZE; k++)
 3426              		.loc 1 591 0 is_stmt 1
 3427 01fe 7B6B     		ldr	r3, [r7, #52]
 3428 0200 0133     		add	r3, r3, #1
 3429 0202 7B63     		str	r3, [r7, #52]
 3430              	.L96:
 591:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		for (k = 0; k < MAGBUFFSIZE; k++)
 3431              		.loc 1 591 0 is_stmt 0
 3432 0204 7B6B     		ldr	r3, [r7, #52]
 3433 0206 042B     		cmp	r3, #4
 3434 0208 00DC     		bgt	.LCB3020
 3435 020a 14E7     		b	.L101	@long jump
 3436              	.LCB3020:
 589:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (j = 0; j < MAGBUFFSIZE; j++)
 3437              		.loc 1 589 0 is_stmt 1
 3438 020c BB6B     		ldr	r3, [r7, #56]
 3439 020e 0133     		add	r3, r3, #1
 3440 0210 BB63     		str	r3, [r7, #56]
 3441              	.L95:
 589:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (j = 0; j < MAGBUFFSIZE; j++)
 3442              		.loc 1 589 0 is_stmt 0
 3443 0212 BB6B     		ldr	r3, [r7, #56]
 3444 0214 042B     		cmp	r3, #4
 3445 0216 00DC     		bgt	.LCB3028
 3446 0218 0AE7     		b	.L102	@long jump
 3447              	.LCB3028:
 624:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 				}
 625:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			}
 626:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		}
 627:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	}
 628:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 629:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// set trial inverse soft iron matrix invW to the identity matrix 
 630:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	ftrinvW[0][0] = ftrinvW[1][1] = ftrinvW[2][2] = 1.0F;
 3448              		.loc 1 630 0 is_stmt 1
 3449 021a 344B     		ldr	r3, .L106+32
 3450 021c 1968     		ldr	r1, [r3]
 3451 021e 334B     		ldr	r3, .L106+32
 3452 0220 5B68     		ldr	r3, [r3, #4]
 3453 0222 0433     		add	r3, r3, #4
 3454 0224 314A     		ldr	r2, .L106+32
 3455 0226 9268     		ldr	r2, [r2, #8]
 3456 0228 0832     		add	r2, r2, #8
 3457 022a FE20     		mov	r0, #254
 3458 022c 8005     		lsl	r0, r0, #22
 3459 022e 1060     		str	r0, [r2]
 3460 0230 1268     		ldr	r2, [r2]
 3461 0232 1A60     		str	r2, [r3]
 3462 0234 1B68     		ldr	r3, [r3]
 3463 0236 0B60     		str	r3, [r1]
 631:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	ftrinvW[0][1] = ftrinvW[0][2] = ftrinvW[1][0] = ftrinvW[1][2] = ftrinvW[2][0] = ftrinvW[2][1] = 0.
 3464              		.loc 1 631 0
 3465 0238 2C4B     		ldr	r3, .L106+32
 3466 023a 1B68     		ldr	r3, [r3]
 3467 023c 1D1D     		add	r5, r3, #4
 3468 023e 2B4B     		ldr	r3, .L106+32
 3469 0240 1B68     		ldr	r3, [r3]
 3470 0242 0833     		add	r3, r3, #8
 3471 0244 294A     		ldr	r2, .L106+32
 3472 0246 5268     		ldr	r2, [r2, #4]
 3473 0248 2849     		ldr	r1, .L106+32
 3474 024a 4968     		ldr	r1, [r1, #4]
 3475 024c 0831     		add	r1, r1, #8
 3476 024e 2748     		ldr	r0, .L106+32
 3477 0250 8068     		ldr	r0, [r0, #8]
 3478 0252 264C     		ldr	r4, .L106+32
 3479 0254 A468     		ldr	r4, [r4, #8]
 3480 0256 0434     		add	r4, r4, #4
 3481 0258 0026     		mov	r6, #0
 3482 025a 2660     		str	r6, [r4]
 3483 025c 2468     		ldr	r4, [r4]
 3484 025e 0460     		str	r4, [r0]
 3485 0260 0068     		ldr	r0, [r0]
 3486 0262 0860     		str	r0, [r1]
 3487 0264 0968     		ldr	r1, [r1]
 3488 0266 1160     		str	r1, [r2]
 3489 0268 1268     		ldr	r2, [r2]
 3490 026a 1A60     		str	r2, [r3]
 3491 026c 1B68     		ldr	r3, [r3]
 3492 026e 2B60     		str	r3, [r5]
 632:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 633:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** //********************************************
 634:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	 //calculate solution vector ftmpB4x1 = Inv(fX4^T.fX4).fX4^T.Y 
 635:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	 fmatrixAeqTrBxC(ftmpB4x4, fX4, fX4, MagBufferCount, 4, 4);	// tmpB4x4 = X^T.X (4x4) 
 3493              		.loc 1 635 0
 3494 0270 174B     		ldr	r3, .L106+4
 3495 0272 1B68     		ldr	r3, [r3]
 3496 0274 1E48     		ldr	r0, .L106+36
 3497 0276 1B49     		ldr	r1, .L106+24
 3498 0278 1A4A     		ldr	r2, .L106+24
 3499 027a 0424     		mov	r4, #4
 3500 027c 0094     		str	r4, [sp]
 3501 027e 0424     		mov	r4, #4
 3502 0280 0194     		str	r4, [sp, #4]
 3503 0282 FFF7FEFF 		bl	fmatrixAeqTrBxC
 636:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	 f4x4matrixAeqInvSymA(ftmpB4x4);								// tmpB4x4 = Inv(X^T.X) (4x4) 
 3504              		.loc 1 636 0
 3505 0286 1A4B     		ldr	r3, .L106+36
 3506 0288 181C     		mov	r0, r3
 3507 028a FFF7FEFF 		bl	f4x4matrixAeqInvSymA
 637:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	 fmatrixAeqTrBxC(ftmpA4x1, fX4, fY, MagBufferCount, 4, 1);	// tmpA4x1 = X^T.Y (4x1) 
 3508              		.loc 1 637 0
 3509 028e 104B     		ldr	r3, .L106+4
 3510 0290 1B68     		ldr	r3, [r3]
 3511 0292 1848     		ldr	r0, .L106+40
 3512 0294 1349     		ldr	r1, .L106+24
 3513 0296 144A     		ldr	r2, .L106+28
 3514 0298 0424     		mov	r4, #4
 3515 029a 0094     		str	r4, [sp]
 3516 029c 0124     		mov	r4, #1
 3517 029e 0194     		str	r4, [sp, #4]
 3518 02a0 FFF7FEFF 		bl	fmatrixAeqTrBxC
 638:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	 fmatrixAeqBxC(ftmpB4x1, ftmpB4x4, ftmpA4x1, 4, 4, 1);		// ftmpB4x1 = Beta = Inv(X^T.X).X^T.Y (4x1
 3519              		.loc 1 638 0
 3520 02a4 1449     		ldr	r1, .L106+44
 3521 02a6 124A     		ldr	r2, .L106+36
 3522 02a8 124B     		ldr	r3, .L106+40
 3523 02aa 0420     		mov	r0, #4
 3524 02ac 0090     		str	r0, [sp]
 3525 02ae 0120     		mov	r0, #1
 3526 02b0 0190     		str	r0, [sp, #4]
 3527 02b2 081C     		mov	r0, r1
 3528 02b4 111C     		mov	r1, r2
 3529 02b6 1A1C     		mov	r2, r3
 3530 02b8 0423     		mov	r3, #4
 3531 02ba FFF7FEFF 		bl	fmatrixAeqBxC
 639:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** //**********************************************
 640:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// calculate the performance function P = (Y-X.Beta)^T.(Y-X.Beta) 
 641:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	ftrFitErrorpc = 0.0F;
 3532              		.loc 1 641 0
 3533 02be 0F4B     		ldr	r3, .L106+48
 3534 02c0 0022     		mov	r2, #0
 3535 02c2 1A60     		str	r2, [r3]
 642:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 643:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// loop over all measurements
 644:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (i = 0; i < MagBufferCount; i++)
 3536              		.loc 1 644 0
 3537 02c4 0023     		mov	r3, #0
 3538 02c6 FB63     		str	r3, [r7, #60]
 3539 02c8 81E0     		b	.L103
 3540              	.L107:
 3541 02ca C046     		.align	2
 3542              	.L106:
 3543 02cc 00000000 		.word	loopcounter
 3544 02d0 00000000 		.word	MagBufferCount
 3545 02d4 D4000000 		.word	.LC94
 3546 02d8 00000000 		.word	iMagBuff
 3547 02dc CDCCCC3D 		.word	1036831949
 3548 02e0 0AD7A33C 		.word	1017370378
 3549 02e4 00000000 		.word	fX4
 3550 02e8 00000000 		.word	fY
 3551 02ec 00000000 		.word	ftrinvW
 3552 02f0 00000000 		.word	ftmpB4x4
 3553 02f4 00000000 		.word	ftmpA4x1
 3554 02f8 00000000 		.word	ftmpB4x1
 3555 02fc 00000000 		.word	ftrFitErrorpc
 3556              	.L104:
 645:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	{
 646:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		// calculate the 4 element model fit fXBeta = X.Beta
 647:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		fXBeta = fX4[i][0] * ftmpB4x1[0][0] + fX4[i][1] * ftmpB4x1[1][0] + fX4[i][2] * ftmpB4x1[2][0] + f
 3557              		.loc 1 647 0
 3558 0300 C94B     		ldr	r3, .L108
 3559 0302 FA6B     		ldr	r2, [r7, #60]
 3560 0304 9200     		lsl	r2, r2, #2
 3561 0306 D358     		ldr	r3, [r2, r3]
 3562 0308 1A68     		ldr	r2, [r3]
 3563 030a C84B     		ldr	r3, .L108+4
 3564 030c 1B68     		ldr	r3, [r3]
 3565 030e 1B68     		ldr	r3, [r3]
 3566 0310 101C     		add	r0, r2, #0
 3567 0312 191C     		add	r1, r3, #0
 3568 0314 FFF7FEFF 		bl	__aeabi_fmul
 3569 0318 031C     		add	r3, r0, #0
 3570 031a 1C1C     		add	r4, r3, #0
 3571 031c C24B     		ldr	r3, .L108
 3572 031e FA6B     		ldr	r2, [r7, #60]
 3573 0320 9200     		lsl	r2, r2, #2
 3574 0322 D358     		ldr	r3, [r2, r3]
 3575 0324 0433     		add	r3, r3, #4
 3576 0326 1A68     		ldr	r2, [r3]
 3577 0328 C04B     		ldr	r3, .L108+4
 3578 032a 5B68     		ldr	r3, [r3, #4]
 3579 032c 1B68     		ldr	r3, [r3]
 3580 032e 101C     		add	r0, r2, #0
 3581 0330 191C     		add	r1, r3, #0
 3582 0332 FFF7FEFF 		bl	__aeabi_fmul
 3583 0336 031C     		add	r3, r0, #0
 3584 0338 201C     		add	r0, r4, #0
 3585 033a 191C     		add	r1, r3, #0
 3586 033c FFF7FEFF 		bl	__aeabi_fadd
 3587 0340 031C     		add	r3, r0, #0
 3588 0342 1C1C     		add	r4, r3, #0
 3589 0344 B84B     		ldr	r3, .L108
 3590 0346 FA6B     		ldr	r2, [r7, #60]
 3591 0348 9200     		lsl	r2, r2, #2
 3592 034a D358     		ldr	r3, [r2, r3]
 3593 034c 0833     		add	r3, r3, #8
 3594 034e 1A68     		ldr	r2, [r3]
 3595 0350 B64B     		ldr	r3, .L108+4
 3596 0352 9B68     		ldr	r3, [r3, #8]
 3597 0354 1B68     		ldr	r3, [r3]
 3598 0356 101C     		add	r0, r2, #0
 3599 0358 191C     		add	r1, r3, #0
 3600 035a FFF7FEFF 		bl	__aeabi_fmul
 3601 035e 031C     		add	r3, r0, #0
 3602 0360 201C     		add	r0, r4, #0
 3603 0362 191C     		add	r1, r3, #0
 3604 0364 FFF7FEFF 		bl	__aeabi_fadd
 3605 0368 031C     		add	r3, r0, #0
 3606 036a 1A1C     		add	r2, r3, #0
 3607 036c AF4B     		ldr	r3, .L108+4
 3608 036e DB68     		ldr	r3, [r3, #12]
 3609 0370 1B68     		ldr	r3, [r3]
 3610 0372 101C     		add	r0, r2, #0
 3611 0374 191C     		add	r1, r3, #0
 3612 0376 FFF7FEFF 		bl	__aeabi_fadd
 3613 037a 031C     		add	r3, r0, #0
 3614 037c 7B61     		str	r3, [r7, #20]
 648:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		ftrFitErrorpc += (fY[i][0] - fXBeta) * (fY[i][0] - fXBeta);
 3615              		.loc 1 648 0
 3616 037e AC4B     		ldr	r3, .L108+8
 3617 0380 FA6B     		ldr	r2, [r7, #60]
 3618 0382 9200     		lsl	r2, r2, #2
 3619 0384 D358     		ldr	r3, [r2, r3]
 3620 0386 1B68     		ldr	r3, [r3]
 3621 0388 181C     		add	r0, r3, #0
 3622 038a 7969     		ldr	r1, [r7, #20]
 3623 038c FFF7FEFF 		bl	__aeabi_fsub
 3624 0390 031C     		add	r3, r0, #0
 3625 0392 1C1C     		add	r4, r3, #0
 3626 0394 A64B     		ldr	r3, .L108+8
 3627 0396 FA6B     		ldr	r2, [r7, #60]
 3628 0398 9200     		lsl	r2, r2, #2
 3629 039a D358     		ldr	r3, [r2, r3]
 3630 039c 1B68     		ldr	r3, [r3]
 3631 039e 181C     		add	r0, r3, #0
 3632 03a0 7969     		ldr	r1, [r7, #20]
 3633 03a2 FFF7FEFF 		bl	__aeabi_fsub
 3634 03a6 031C     		add	r3, r0, #0
 3635 03a8 201C     		add	r0, r4, #0
 3636 03aa 191C     		add	r1, r3, #0
 3637 03ac FFF7FEFF 		bl	__aeabi_fmul
 3638 03b0 031C     		add	r3, r0, #0
 3639 03b2 1A1C     		add	r2, r3, #0
 3640 03b4 9F4B     		ldr	r3, .L108+12
 3641 03b6 1B68     		ldr	r3, [r3]
 3642 03b8 101C     		add	r0, r2, #0
 3643 03ba 191C     		add	r1, r3, #0
 3644 03bc FFF7FEFF 		bl	__aeabi_fadd
 3645 03c0 031C     		add	r3, r0, #0
 3646 03c2 1A1C     		add	r2, r3, #0
 3647 03c4 9B4B     		ldr	r3, .L108+12
 3648 03c6 1A60     		str	r2, [r3]
 644:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (i = 0; i < MagBufferCount; i++)
 3649              		.loc 1 644 0
 3650 03c8 FB6B     		ldr	r3, [r7, #60]
 3651 03ca 0133     		add	r3, r3, #1
 3652 03cc FB63     		str	r3, [r7, #60]
 3653              	.L103:
 644:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (i = 0; i < MagBufferCount; i++)
 3654              		.loc 1 644 0 is_stmt 0
 3655 03ce 9A4B     		ldr	r3, .L108+16
 3656 03d0 1B68     		ldr	r3, [r3]
 3657 03d2 FA6B     		ldr	r2, [r7, #60]
 3658 03d4 9A42     		cmp	r2, r3
 3659 03d6 93DB     		blt	.L104
 649:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	}
 650:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 651:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// calculate the trial normalised fit error (percent) in scaled bit counts but not normalised by B
 652:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	
 653:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****         ftrFitErrorpc = (float)sqrt(ftrFitErrorpc / MagBufferCount) * 100.0F;
 3660              		.loc 1 653 0 is_stmt 1
 3661 03d8 964B     		ldr	r3, .L108+12
 3662 03da 1C68     		ldr	r4, [r3]
 3663 03dc 964B     		ldr	r3, .L108+16
 3664 03de 1B68     		ldr	r3, [r3]
 3665 03e0 181C     		mov	r0, r3
 3666 03e2 FFF7FEFF 		bl	__aeabi_i2f
 3667 03e6 031C     		add	r3, r0, #0
 3668 03e8 201C     		add	r0, r4, #0
 3669 03ea 191C     		add	r1, r3, #0
 3670 03ec FFF7FEFF 		bl	__aeabi_fdiv
 3671 03f0 031C     		add	r3, r0, #0
 3672 03f2 181C     		add	r0, r3, #0
 3673 03f4 FFF7FEFF 		bl	__aeabi_f2d
 3674 03f8 031C     		mov	r3, r0
 3675 03fa 0C1C     		mov	r4, r1
 3676 03fc 181C     		mov	r0, r3
 3677 03fe 211C     		mov	r1, r4
 3678 0400 FFF7FEFF 		bl	sqrt
 3679 0404 031C     		mov	r3, r0
 3680 0406 0C1C     		mov	r4, r1
 3681 0408 181C     		mov	r0, r3
 3682 040a 211C     		mov	r1, r4
 3683 040c FFF7FEFF 		bl	__aeabi_d2f
 3684 0410 031C     		add	r3, r0, #0
 3685 0412 181C     		add	r0, r3, #0
 3686 0414 8949     		ldr	r1, .L108+20
 3687 0416 FFF7FEFF 		bl	__aeabi_fmul
 3688 041a 031C     		add	r3, r0, #0
 3689 041c 1A1C     		add	r2, r3, #0
 3690 041e 854B     		ldr	r3, .L108+12
 3691 0420 1A60     		str	r2, [r3]
 654:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 655:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****         
 656:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 657:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// compute the hard iron vector in offset bit counts times fmatrixscaling 
 658:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	ftrVx = 0.5F * ftmpB4x1[0][0];
 3692              		.loc 1 658 0
 3693 0422 824B     		ldr	r3, .L108+4
 3694 0424 1B68     		ldr	r3, [r3]
 3695 0426 1B68     		ldr	r3, [r3]
 3696 0428 181C     		add	r0, r3, #0
 3697 042a FC21     		mov	r1, #252
 3698 042c 8905     		lsl	r1, r1, #22
 3699 042e FFF7FEFF 		bl	__aeabi_fmul
 3700 0432 031C     		add	r3, r0, #0
 3701 0434 1A1C     		add	r2, r3, #0
 3702 0436 824B     		ldr	r3, .L108+24
 3703 0438 1A60     		str	r2, [r3]
 659:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	ftrVy = 0.5F * ftmpB4x1[1][0];
 3704              		.loc 1 659 0
 3705 043a 7C4B     		ldr	r3, .L108+4
 3706 043c 5B68     		ldr	r3, [r3, #4]
 3707 043e 1B68     		ldr	r3, [r3]
 3708 0440 181C     		add	r0, r3, #0
 3709 0442 FC21     		mov	r1, #252
 3710 0444 8905     		lsl	r1, r1, #22
 3711 0446 FFF7FEFF 		bl	__aeabi_fmul
 3712 044a 031C     		add	r3, r0, #0
 3713 044c 1A1C     		add	r2, r3, #0
 3714 044e 7D4B     		ldr	r3, .L108+28
 3715 0450 1A60     		str	r2, [r3]
 660:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	ftrVz = 0.5F * ftmpB4x1[2][0];
 3716              		.loc 1 660 0
 3717 0452 764B     		ldr	r3, .L108+4
 3718 0454 9B68     		ldr	r3, [r3, #8]
 3719 0456 1B68     		ldr	r3, [r3]
 3720 0458 181C     		add	r0, r3, #0
 3721 045a FC21     		mov	r1, #252
 3722 045c 8905     		lsl	r1, r1, #22
 3723 045e FFF7FEFF 		bl	__aeabi_fmul
 3724 0462 031C     		add	r3, r0, #0
 3725 0464 1A1C     		add	r2, r3, #0
 3726 0466 784B     		ldr	r3, .L108+32
 3727 0468 1A60     		str	r2, [r3]
 661:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 662:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// compute the geomagnetic field strength B in bit counts times fmatrixscaling 
 663:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	ftrB = (float)sqrt(ftmpB4x1[3][0] + ftrVx * ftrVx + ftrVy * ftrVy + ftrVz * ftrVz);
 3728              		.loc 1 663 0
 3729 046a 704B     		ldr	r3, .L108+4
 3730 046c DB68     		ldr	r3, [r3, #12]
 3731 046e 1C68     		ldr	r4, [r3]
 3732 0470 734B     		ldr	r3, .L108+24
 3733 0472 1A68     		ldr	r2, [r3]
 3734 0474 724B     		ldr	r3, .L108+24
 3735 0476 1B68     		ldr	r3, [r3]
 3736 0478 101C     		add	r0, r2, #0
 3737 047a 191C     		add	r1, r3, #0
 3738 047c FFF7FEFF 		bl	__aeabi_fmul
 3739 0480 031C     		add	r3, r0, #0
 3740 0482 201C     		add	r0, r4, #0
 3741 0484 191C     		add	r1, r3, #0
 3742 0486 FFF7FEFF 		bl	__aeabi_fadd
 3743 048a 031C     		add	r3, r0, #0
 3744 048c 1C1C     		add	r4, r3, #0
 3745 048e 6D4B     		ldr	r3, .L108+28
 3746 0490 1A68     		ldr	r2, [r3]
 3747 0492 6C4B     		ldr	r3, .L108+28
 3748 0494 1B68     		ldr	r3, [r3]
 3749 0496 101C     		add	r0, r2, #0
 3750 0498 191C     		add	r1, r3, #0
 3751 049a FFF7FEFF 		bl	__aeabi_fmul
 3752 049e 031C     		add	r3, r0, #0
 3753 04a0 201C     		add	r0, r4, #0
 3754 04a2 191C     		add	r1, r3, #0
 3755 04a4 FFF7FEFF 		bl	__aeabi_fadd
 3756 04a8 031C     		add	r3, r0, #0
 3757 04aa 1C1C     		add	r4, r3, #0
 3758 04ac 664B     		ldr	r3, .L108+32
 3759 04ae 1A68     		ldr	r2, [r3]
 3760 04b0 654B     		ldr	r3, .L108+32
 3761 04b2 1B68     		ldr	r3, [r3]
 3762 04b4 101C     		add	r0, r2, #0
 3763 04b6 191C     		add	r1, r3, #0
 3764 04b8 FFF7FEFF 		bl	__aeabi_fmul
 3765 04bc 031C     		add	r3, r0, #0
 3766 04be 201C     		add	r0, r4, #0
 3767 04c0 191C     		add	r1, r3, #0
 3768 04c2 FFF7FEFF 		bl	__aeabi_fadd
 3769 04c6 031C     		add	r3, r0, #0
 3770 04c8 181C     		add	r0, r3, #0
 3771 04ca FFF7FEFF 		bl	__aeabi_f2d
 3772 04ce 031C     		mov	r3, r0
 3773 04d0 0C1C     		mov	r4, r1
 3774 04d2 181C     		mov	r0, r3
 3775 04d4 211C     		mov	r1, r4
 3776 04d6 FFF7FEFF 		bl	sqrt
 3777 04da 031C     		mov	r3, r0
 3778 04dc 0C1C     		mov	r4, r1
 3779 04de 181C     		mov	r0, r3
 3780 04e0 211C     		mov	r1, r4
 3781 04e2 FFF7FEFF 		bl	__aeabi_d2f
 3782 04e6 021C     		add	r2, r0, #0
 3783 04e8 584B     		ldr	r3, .L108+36
 3784 04ea 1A60     		str	r2, [r3]
 664:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 665:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// normalise the Fit Error (percent) to the scaled bit count geomagnetic field B 
 666:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	ftrFitErrorpc /= (2.0F * ftrB * ftrB); 
 3785              		.loc 1 666 0
 3786 04ec 514B     		ldr	r3, .L108+12
 3787 04ee 1C68     		ldr	r4, [r3]
 3788 04f0 564B     		ldr	r3, .L108+36
 3789 04f2 1B68     		ldr	r3, [r3]
 3790 04f4 181C     		add	r0, r3, #0
 3791 04f6 191C     		add	r1, r3, #0
 3792 04f8 FFF7FEFF 		bl	__aeabi_fadd
 3793 04fc 031C     		add	r3, r0, #0
 3794 04fe 1A1C     		add	r2, r3, #0
 3795 0500 524B     		ldr	r3, .L108+36
 3796 0502 1B68     		ldr	r3, [r3]
 3797 0504 101C     		add	r0, r2, #0
 3798 0506 191C     		add	r1, r3, #0
 3799 0508 FFF7FEFF 		bl	__aeabi_fmul
 3800 050c 031C     		add	r3, r0, #0
 3801 050e 201C     		add	r0, r4, #0
 3802 0510 191C     		add	r1, r3, #0
 3803 0512 FFF7FEFF 		bl	__aeabi_fdiv
 3804 0516 031C     		add	r3, r0, #0
 3805 0518 1A1C     		add	r2, r3, #0
 3806 051a 464B     		ldr	r3, .L108+12
 3807 051c 1A60     		str	r2, [r3]
 667:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	printf("\n\nTrial new calibration fit error=%9.4f%% versus previous %9.4f%%", ftrFitErrorpc, fFitE
 3808              		.loc 1 667 0
 3809 051e 454B     		ldr	r3, .L108+12
 3810 0520 1B68     		ldr	r3, [r3]
 3811 0522 181C     		add	r0, r3, #0
 3812 0524 FFF7FEFF 		bl	__aeabi_f2d
 3813 0528 041C     		mov	r4, r0
 3814 052a 0D1C     		mov	r5, r1
 3815 052c 484B     		ldr	r3, .L108+40
 3816 052e 1B68     		ldr	r3, [r3]
 3817 0530 181C     		add	r0, r3, #0
 3818 0532 FFF7FEFF 		bl	__aeabi_f2d
 3819 0536 021C     		mov	r2, r0
 3820 0538 0B1C     		mov	r3, r1
 3821 053a 4649     		ldr	r1, .L108+44
 3822 053c 0092     		str	r2, [sp]
 3823 053e 0193     		str	r3, [sp, #4]
 3824 0540 081C     		mov	r0, r1
 3825 0542 221C     		mov	r2, r4
 3826 0544 2B1C     		mov	r3, r5
 3827 0546 FFF7FEFF 		bl	printf
 668:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 669:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// correct for the measurement matrix offset and scaling and get the computed hard iron offset in 
 670:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	ftrVx = ftrVx * finvmatrixscaling + fOffsetx;
 3828              		.loc 1 670 0
 3829 054a 3D4B     		ldr	r3, .L108+24
 3830 054c 1B68     		ldr	r3, [r3]
 3831 054e 181C     		add	r0, r3, #0
 3832 0550 4149     		ldr	r1, .L108+48
 3833 0552 FFF7FEFF 		bl	__aeabi_fmul
 3834 0556 031C     		add	r3, r0, #0
 3835 0558 181C     		add	r0, r3, #0
 3836 055a F96A     		ldr	r1, [r7, #44]
 3837 055c FFF7FEFF 		bl	__aeabi_fadd
 3838 0560 031C     		add	r3, r0, #0
 3839 0562 1A1C     		add	r2, r3, #0
 3840 0564 364B     		ldr	r3, .L108+24
 3841 0566 1A60     		str	r2, [r3]
 671:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	ftrVy = ftrVy * finvmatrixscaling + fOffsety;
 3842              		.loc 1 671 0
 3843 0568 364B     		ldr	r3, .L108+28
 3844 056a 1B68     		ldr	r3, [r3]
 3845 056c 181C     		add	r0, r3, #0
 3846 056e 3A49     		ldr	r1, .L108+48
 3847 0570 FFF7FEFF 		bl	__aeabi_fmul
 3848 0574 031C     		add	r3, r0, #0
 3849 0576 181C     		add	r0, r3, #0
 3850 0578 B96A     		ldr	r1, [r7, #40]
 3851 057a FFF7FEFF 		bl	__aeabi_fadd
 3852 057e 031C     		add	r3, r0, #0
 3853 0580 1A1C     		add	r2, r3, #0
 3854 0582 304B     		ldr	r3, .L108+28
 3855 0584 1A60     		str	r2, [r3]
 672:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	ftrVz = ftrVz * finvmatrixscaling + fOffsetz;
 3856              		.loc 1 672 0
 3857 0586 304B     		ldr	r3, .L108+32
 3858 0588 1B68     		ldr	r3, [r3]
 3859 058a 181C     		add	r0, r3, #0
 3860 058c 3249     		ldr	r1, .L108+48
 3861 058e FFF7FEFF 		bl	__aeabi_fmul
 3862 0592 031C     		add	r3, r0, #0
 3863 0594 181C     		add	r0, r3, #0
 3864 0596 796A     		ldr	r1, [r7, #36]
 3865 0598 FFF7FEFF 		bl	__aeabi_fadd
 3866 059c 031C     		add	r3, r0, #0
 3867 059e 1A1C     		add	r2, r3, #0
 3868 05a0 294B     		ldr	r3, .L108+32
 3869 05a2 1A60     		str	r2, [r3]
 673:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	printf("\n\nTrial new calibration hard iron (uT) Vx=%9.3f Vy=%9.3f Vz=%9.3f", ftrVx, ftrVy, ftrVz)
 3870              		.loc 1 673 0
 3871 05a4 264B     		ldr	r3, .L108+24
 3872 05a6 1B68     		ldr	r3, [r3]
 3873 05a8 181C     		add	r0, r3, #0
 3874 05aa FFF7FEFF 		bl	__aeabi_f2d
 3875 05ae 041C     		mov	r4, r0
 3876 05b0 0D1C     		mov	r5, r1
 3877 05b2 244B     		ldr	r3, .L108+28
 3878 05b4 1B68     		ldr	r3, [r3]
 3879 05b6 181C     		add	r0, r3, #0
 3880 05b8 FFF7FEFF 		bl	__aeabi_f2d
 3881 05bc B860     		str	r0, [r7, #8]
 3882 05be F960     		str	r1, [r7, #12]
 3883 05c0 214B     		ldr	r3, .L108+32
 3884 05c2 1B68     		ldr	r3, [r3]
 3885 05c4 181C     		add	r0, r3, #0
 3886 05c6 FFF7FEFF 		bl	__aeabi_f2d
 3887 05ca 3860     		str	r0, [r7]
 3888 05cc 7960     		str	r1, [r7, #4]
 3889 05ce 2349     		ldr	r1, .L108+52
 3890 05d0 BA68     		ldr	r2, [r7, #8]
 3891 05d2 FB68     		ldr	r3, [r7, #12]
 3892 05d4 0092     		str	r2, [sp]
 3893 05d6 0193     		str	r3, [sp, #4]
 3894 05d8 3A68     		ldr	r2, [r7]
 3895 05da 7B68     		ldr	r3, [r7, #4]
 3896 05dc 0292     		str	r2, [sp, #8]
 3897 05de 0393     		str	r3, [sp, #12]
 3898 05e0 081C     		mov	r0, r1
 3899 05e2 221C     		mov	r2, r4
 3900 05e4 2B1C     		mov	r3, r5
 3901 05e6 FFF7FEFF 		bl	printf
 674:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 675:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// convert the geomagnetic field strength B into uT 
 676:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	ftrB *= finvmatrixscaling;
 3902              		.loc 1 676 0
 3903 05ea 184B     		ldr	r3, .L108+36
 3904 05ec 1B68     		ldr	r3, [r3]
 3905 05ee 181C     		add	r0, r3, #0
 3906 05f0 1949     		ldr	r1, .L108+48
 3907 05f2 FFF7FEFF 		bl	__aeabi_fmul
 3908 05f6 031C     		add	r3, r0, #0
 3909 05f8 1A1C     		add	r2, r3, #0
 3910 05fa 144B     		ldr	r3, .L108+36
 3911 05fc 1A60     		str	r2, [r3]
 677:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	printf("\n\nTrial new calibration geomagnetic field (uT) B=%9.3f", ftrB);
 3912              		.loc 1 677 0
 3913 05fe 134B     		ldr	r3, .L108+36
 3914 0600 1B68     		ldr	r3, [r3]
 3915 0602 181C     		add	r0, r3, #0
 3916 0604 FFF7FEFF 		bl	__aeabi_f2d
 3917 0608 031C     		mov	r3, r0
 3918 060a 0C1C     		mov	r4, r1
 3919 060c 144A     		ldr	r2, .L108+56
 3920 060e 101C     		mov	r0, r2
 3921 0610 1A1C     		mov	r2, r3
 3922 0612 231C     		mov	r3, r4
 3923 0614 FFF7FEFF 		bl	printf
 678:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 679:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// finally set the valid calibration flag to true 
 680:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	validmagcal = 1;
 3924              		.loc 1 680 0
 3925 0618 124B     		ldr	r3, .L108+60
 3926 061a 0122     		mov	r2, #1
 3927 061c 1A60     		str	r2, [r3]
 681:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 682:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	return;
 3928              		.loc 1 682 0
 3929 061e C046     		mov	r8, r8
 683:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** }
 3930              		.loc 1 683 0
 3931 0620 BD46     		mov	sp, r7
 3932 0622 11B0     		add	sp, sp, #68
 3933              		@ sp needed for prologue
 3934 0624 F0BD     		pop	{r4, r5, r6, r7, pc}
 3935              	.L109:
 3936 0626 C046     		.align	2
 3937              	.L108:
 3938 0628 00000000 		.word	fX4
 3939 062c 00000000 		.word	ftmpB4x1
 3940 0630 00000000 		.word	fY
 3941 0634 00000000 		.word	ftrFitErrorpc
 3942 0638 00000000 		.word	MagBufferCount
 3943 063c 0000C842 		.word	1120403456
 3944 0640 00000000 		.word	ftrVx
 3945 0644 00000000 		.word	ftrVy
 3946 0648 00000000 		.word	ftrVz
 3947 064c 00000000 		.word	ftrB
 3948 0650 00000000 		.word	fFitErrorpc
 3949 0654 1C010000 		.word	.LC109
 3950 0658 00004842 		.word	1112014848
 3951 065c 60010000 		.word	.LC111
 3952 0660 A4010000 		.word	.LC113
 3953 0664 00000000 		.word	validmagcal
 3954              		.cfi_endproc
 3955              	.LFE7:
 3957              		.section	.text.fmatrixAeqB,"ax",%progbits
 3958              		.align	2
 3959              		.global	fmatrixAeqB
 3960              		.code	16
 3961              		.thumb_func
 3963              	fmatrixAeqB:
 3964              	.LFB8:
 684:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 685:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** // function copies matrix B to A 
 686:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** void fmatrixAeqB(float **A, float **B, int32 r, int32 c)
 687:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** {
 3965              		.loc 1 687 0
 3966              		.cfi_startproc
 3967 0000 80B5     		push	{r7, lr}
 3968              	.LCFI21:
 3969              		.cfi_def_cfa_offset 8
 3970              		.cfi_offset 7, -8
 3971              		.cfi_offset 14, -4
 3972 0002 86B0     		sub	sp, sp, #24
 3973              	.LCFI22:
 3974              		.cfi_def_cfa_offset 32
 3975 0004 00AF     		add	r7, sp, #0
 3976              	.LCFI23:
 3977              		.cfi_def_cfa_register 7
 3978 0006 F860     		str	r0, [r7, #12]
 3979 0008 B960     		str	r1, [r7, #8]
 3980 000a 7A60     		str	r2, [r7, #4]
 3981 000c 3B60     		str	r3, [r7]
 688:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// r = rows in A and B 
 689:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// c = columns in A and B 
 690:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 691:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	int32 i, j;		// loop counters 
 692:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 693:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (i = 0; i < r; i++)
 3982              		.loc 1 693 0
 3983 000e 0023     		mov	r3, #0
 3984 0010 7B61     		str	r3, [r7, #20]
 3985 0012 1EE0     		b	.L111
 3986              	.L114:
 694:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	{
 695:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		for (j = 0; j < c; j++)
 3987              		.loc 1 695 0
 3988 0014 0023     		mov	r3, #0
 3989 0016 3B61     		str	r3, [r7, #16]
 3990 0018 14E0     		b	.L112
 3991              	.L113:
 696:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		{
 697:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			A[i][j] = B[i][j];
 3992              		.loc 1 697 0
 3993 001a 7B69     		ldr	r3, [r7, #20]
 3994 001c 9B00     		lsl	r3, r3, #2
 3995 001e FA68     		ldr	r2, [r7, #12]
 3996 0020 D318     		add	r3, r2, r3
 3997 0022 1A68     		ldr	r2, [r3]
 3998 0024 3B69     		ldr	r3, [r7, #16]
 3999 0026 9B00     		lsl	r3, r3, #2
 4000 0028 D218     		add	r2, r2, r3
 4001 002a 7B69     		ldr	r3, [r7, #20]
 4002 002c 9B00     		lsl	r3, r3, #2
 4003 002e B968     		ldr	r1, [r7, #8]
 4004 0030 CB18     		add	r3, r1, r3
 4005 0032 1968     		ldr	r1, [r3]
 4006 0034 3B69     		ldr	r3, [r7, #16]
 4007 0036 9B00     		lsl	r3, r3, #2
 4008 0038 CB18     		add	r3, r1, r3
 4009 003a 1B68     		ldr	r3, [r3]
 4010 003c 1360     		str	r3, [r2]
 695:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		for (j = 0; j < c; j++)
 4011              		.loc 1 695 0
 4012 003e 3B69     		ldr	r3, [r7, #16]
 4013 0040 0133     		add	r3, r3, #1
 4014 0042 3B61     		str	r3, [r7, #16]
 4015              	.L112:
 695:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		for (j = 0; j < c; j++)
 4016              		.loc 1 695 0 is_stmt 0
 4017 0044 3A69     		ldr	r2, [r7, #16]
 4018 0046 3B68     		ldr	r3, [r7]
 4019 0048 9A42     		cmp	r2, r3
 4020 004a E6DB     		blt	.L113
 693:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (i = 0; i < r; i++)
 4021              		.loc 1 693 0 is_stmt 1
 4022 004c 7B69     		ldr	r3, [r7, #20]
 4023 004e 0133     		add	r3, r3, #1
 4024 0050 7B61     		str	r3, [r7, #20]
 4025              	.L111:
 693:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (i = 0; i < r; i++)
 4026              		.loc 1 693 0 is_stmt 0
 4027 0052 7A69     		ldr	r2, [r7, #20]
 4028 0054 7B68     		ldr	r3, [r7, #4]
 4029 0056 9A42     		cmp	r2, r3
 4030 0058 DCDB     		blt	.L114
 698:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		}
 699:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	}
 700:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	return;
 4031              		.loc 1 700 0 is_stmt 1
 4032 005a C046     		mov	r8, r8
 701:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** } 
 4033              		.loc 1 701 0
 4034 005c BD46     		mov	sp, r7
 4035 005e 06B0     		add	sp, sp, #24
 4036              		@ sp needed for prologue
 4037 0060 80BD     		pop	{r7, pc}
 4038              		.cfi_endproc
 4039              	.LFE8:
 4041 0062 C046     		.section	.text.fmatrixAeqTrBxC,"ax",%progbits
 4042              		.align	2
 4043              		.global	fmatrixAeqTrBxC
 4044              		.code	16
 4045              		.thumb_func
 4047              	fmatrixAeqTrBxC:
 4048              	.LFB9:
 702:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 703:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** // function calculates the matrix product A = B^T x C 
 704:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** void fmatrixAeqTrBxC(float **A, float **B,  float **C, int32 rBrC, int32 cB, int32 cC)
 705:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** {
 4049              		.loc 1 705 0
 4050              		.cfi_startproc
 4051 0000 B0B5     		push	{r4, r5, r7, lr}
 4052              	.LCFI24:
 4053              		.cfi_def_cfa_offset 16
 4054              		.cfi_offset 4, -16
 4055              		.cfi_offset 5, -12
 4056              		.cfi_offset 7, -8
 4057              		.cfi_offset 14, -4
 4058 0002 88B0     		sub	sp, sp, #32
 4059              	.LCFI25:
 4060              		.cfi_def_cfa_offset 48
 4061 0004 00AF     		add	r7, sp, #0
 4062              	.LCFI26:
 4063              		.cfi_def_cfa_register 7
 4064 0006 F860     		str	r0, [r7, #12]
 4065 0008 B960     		str	r1, [r7, #8]
 4066 000a 7A60     		str	r2, [r7, #4]
 4067 000c 3B60     		str	r3, [r7]
 706:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// rBrC = rows in B before transposing = rows in C 
 707:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// cB = columns in B before transposing 
 708:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// cC = columns in C 
 709:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// A has dimension cB rows x cC columns
 710:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// the matrices B and C can be the same matrix in order to compute B^T x B
 711:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 712:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	int32 i, j, k;	// counters 
 713:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 714:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (i = 0; i < cB; i++)
 4068              		.loc 1 714 0
 4069 000e 0023     		mov	r3, #0
 4070 0010 FB61     		str	r3, [r7, #28]
 4071 0012 4EE0     		b	.L117
 4072              	.L122:
 715:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	{
 716:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		for (j = 0; j < cC; j++)
 4073              		.loc 1 716 0
 4074 0014 0023     		mov	r3, #0
 4075 0016 BB61     		str	r3, [r7, #24]
 4076 0018 44E0     		b	.L118
 4077              	.L121:
 717:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		{
 718:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			A[i][j] = 0.0F;
 4078              		.loc 1 718 0
 4079 001a FB69     		ldr	r3, [r7, #28]
 4080 001c 9B00     		lsl	r3, r3, #2
 4081 001e FA68     		ldr	r2, [r7, #12]
 4082 0020 D318     		add	r3, r2, r3
 4083 0022 1A68     		ldr	r2, [r3]
 4084 0024 BB69     		ldr	r3, [r7, #24]
 4085 0026 9B00     		lsl	r3, r3, #2
 4086 0028 D318     		add	r3, r2, r3
 4087 002a 0022     		mov	r2, #0
 4088 002c 1A60     		str	r2, [r3]
 719:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			for (k = 0; k < rBrC; k++)
 4089              		.loc 1 719 0
 4090 002e 0023     		mov	r3, #0
 4091 0030 7B61     		str	r3, [r7, #20]
 4092 0032 30E0     		b	.L119
 4093              	.L120:
 720:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 				A[i][j] += B[k][i] * C[k][j];
 4094              		.loc 1 720 0
 4095 0034 FB69     		ldr	r3, [r7, #28]
 4096 0036 9B00     		lsl	r3, r3, #2
 4097 0038 FA68     		ldr	r2, [r7, #12]
 4098 003a D318     		add	r3, r2, r3
 4099 003c 1A68     		ldr	r2, [r3]
 4100 003e BB69     		ldr	r3, [r7, #24]
 4101 0040 9B00     		lsl	r3, r3, #2
 4102 0042 D418     		add	r4, r2, r3
 4103 0044 FB69     		ldr	r3, [r7, #28]
 4104 0046 9B00     		lsl	r3, r3, #2
 4105 0048 FA68     		ldr	r2, [r7, #12]
 4106 004a D318     		add	r3, r2, r3
 4107 004c 1A68     		ldr	r2, [r3]
 4108 004e BB69     		ldr	r3, [r7, #24]
 4109 0050 9B00     		lsl	r3, r3, #2
 4110 0052 D318     		add	r3, r2, r3
 4111 0054 1D68     		ldr	r5, [r3]
 4112 0056 7B69     		ldr	r3, [r7, #20]
 4113 0058 9B00     		lsl	r3, r3, #2
 4114 005a BA68     		ldr	r2, [r7, #8]
 4115 005c D318     		add	r3, r2, r3
 4116 005e 1A68     		ldr	r2, [r3]
 4117 0060 FB69     		ldr	r3, [r7, #28]
 4118 0062 9B00     		lsl	r3, r3, #2
 4119 0064 D318     		add	r3, r2, r3
 4120 0066 1A68     		ldr	r2, [r3]
 4121 0068 7B69     		ldr	r3, [r7, #20]
 4122 006a 9B00     		lsl	r3, r3, #2
 4123 006c 7968     		ldr	r1, [r7, #4]
 4124 006e CB18     		add	r3, r1, r3
 4125 0070 1968     		ldr	r1, [r3]
 4126 0072 BB69     		ldr	r3, [r7, #24]
 4127 0074 9B00     		lsl	r3, r3, #2
 4128 0076 CB18     		add	r3, r1, r3
 4129 0078 1B68     		ldr	r3, [r3]
 4130 007a 101C     		add	r0, r2, #0
 4131 007c 191C     		add	r1, r3, #0
 4132 007e FFF7FEFF 		bl	__aeabi_fmul
 4133 0082 031C     		add	r3, r0, #0
 4134 0084 281C     		add	r0, r5, #0
 4135 0086 191C     		add	r1, r3, #0
 4136 0088 FFF7FEFF 		bl	__aeabi_fadd
 4137 008c 031C     		add	r3, r0, #0
 4138 008e 2360     		str	r3, [r4]
 719:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			for (k = 0; k < rBrC; k++)
 4139              		.loc 1 719 0
 4140 0090 7B69     		ldr	r3, [r7, #20]
 4141 0092 0133     		add	r3, r3, #1
 4142 0094 7B61     		str	r3, [r7, #20]
 4143              	.L119:
 719:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			for (k = 0; k < rBrC; k++)
 4144              		.loc 1 719 0 is_stmt 0
 4145 0096 7A69     		ldr	r2, [r7, #20]
 4146 0098 3B68     		ldr	r3, [r7]
 4147 009a 9A42     		cmp	r2, r3
 4148 009c CADB     		blt	.L120
 716:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		for (j = 0; j < cC; j++)
 4149              		.loc 1 716 0 is_stmt 1
 4150 009e BB69     		ldr	r3, [r7, #24]
 4151 00a0 0133     		add	r3, r3, #1
 4152 00a2 BB61     		str	r3, [r7, #24]
 4153              	.L118:
 716:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		for (j = 0; j < cC; j++)
 4154              		.loc 1 716 0 is_stmt 0
 4155 00a4 BA69     		ldr	r2, [r7, #24]
 4156 00a6 7B6B     		ldr	r3, [r7, #52]
 4157 00a8 9A42     		cmp	r2, r3
 4158 00aa B6DB     		blt	.L121
 714:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (i = 0; i < cB; i++)
 4159              		.loc 1 714 0 is_stmt 1
 4160 00ac FB69     		ldr	r3, [r7, #28]
 4161 00ae 0133     		add	r3, r3, #1
 4162 00b0 FB61     		str	r3, [r7, #28]
 4163              	.L117:
 714:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (i = 0; i < cB; i++)
 4164              		.loc 1 714 0 is_stmt 0
 4165 00b2 FA69     		ldr	r2, [r7, #28]
 4166 00b4 3B6B     		ldr	r3, [r7, #48]
 4167 00b6 9A42     		cmp	r2, r3
 4168 00b8 ACDB     		blt	.L122
 721:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		}
 722:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	}
 723:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	return;
 4169              		.loc 1 723 0 is_stmt 1
 4170 00ba C046     		mov	r8, r8
 724:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** }
 4171              		.loc 1 724 0
 4172 00bc BD46     		mov	sp, r7
 4173 00be 08B0     		add	sp, sp, #32
 4174              		@ sp needed for prologue
 4175 00c0 B0BD     		pop	{r4, r5, r7, pc}
 4176              		.cfi_endproc
 4177              	.LFE9:
 4179              		.global	__aeabi_fcmpgt
 4180 00c2 C046     		.section	.text.eigencompute,"ax",%progbits
 4181              		.align	2
 4182              		.global	eigencompute
 4183              		.code	16
 4184              		.thumb_func
 4186              	eigencompute:
 4187              	.LFB10:
 725:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 726:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** // function computes all eigenvalues and eigenvectors of a real symmetric matrix m[0..n-1][0..n-1] 
 727:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** // m[][] is unchanged on output 
 728:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** // eigval[0..n-1] returns the eigenvalues of mat 
 729:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** // eigvec[0..n-1][0..n-1] is a matrix whose columns contain on output the normalised eigenvectors o
 730:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** // the eigenvectors are not sorted by value 
 731:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** // the algorithm has complexity n^3 
 732:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** void eigencompute(float **m, int32 n, float **eigval, float **eigvec)
 733:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** {   
 4188              		.loc 1 733 0
 4189              		.cfi_startproc
 4190 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4191              	.LCFI27:
 4192              		.cfi_def_cfa_offset 20
 4193              		.cfi_offset 4, -20
 4194              		.cfi_offset 5, -16
 4195              		.cfi_offset 6, -12
 4196              		.cfi_offset 7, -8
 4197              		.cfi_offset 14, -4
 4198 0002 91B0     		sub	sp, sp, #68
 4199              	.LCFI28:
 4200              		.cfi_def_cfa_offset 88
 4201 0004 00AF     		add	r7, sp, #0
 4202              	.LCFI29:
 4203              		.cfi_def_cfa_register 7
 4204 0006 F860     		str	r0, [r7, #12]
 4205 0008 B960     		str	r1, [r7, #8]
 4206 000a 7A60     		str	r2, [r7, #4]
 4207 000c 3B60     		str	r3, [r7]
 734:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// maximum number of iterations to achieve convergence: in practice 6 is typical 
 735:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** #define NITERATIONS 15		
 736:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 737:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// matrix row and column indices
 738:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	int32 ir, ic;  
 739:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// general loop counter
 740:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	int32 j;
 741:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// various trig functions of the jacobi rotation angle phi
 742:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	float cot2phi, tanhalfphi, tanphi, sinphi, cosphi; 
 743:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// scratch variable to prevent over-writing during rotations
 744:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	float ftmp;
 745:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// residue from remaining non-zero above diagonal terms
 746:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	float residue;
 747:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// timeout ctr for number of passes of the algorithm
 748:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	int32 ctr;
 749:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 750:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// initialise eigenvectors matrix and eigenvalues array 
 751:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (ir = 0; ir < n; ir++) 
 4208              		.loc 1 751 0
 4209 000e 0023     		mov	r3, #0
 4210 0010 FB63     		str	r3, [r7, #60]
 4211 0012 30E0     		b	.L125
 4212              	.L128:
 752:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	{   
 753:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		// loop over all columns
 754:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		for (ic = 0; ic < n; ic++) 
 4213              		.loc 1 754 0
 4214 0014 0023     		mov	r3, #0
 4215 0016 BB63     		str	r3, [r7, #56]
 4216 0018 0CE0     		b	.L126
 4217              	.L127:
 755:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		{
 756:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			// set on diagonal and off-diagonal elements to zero
 757:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			eigvec[ir][ic] = 0.0F;   
 4218              		.loc 1 757 0
 4219 001a FB6B     		ldr	r3, [r7, #60]
 4220 001c 9B00     		lsl	r3, r3, #2
 4221 001e 3A68     		ldr	r2, [r7]
 4222 0020 D318     		add	r3, r2, r3
 4223 0022 1A68     		ldr	r2, [r3]
 4224 0024 BB6B     		ldr	r3, [r7, #56]
 4225 0026 9B00     		lsl	r3, r3, #2
 4226 0028 D318     		add	r3, r2, r3
 4227 002a 0022     		mov	r2, #0
 4228 002c 1A60     		str	r2, [r3]
 754:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		for (ic = 0; ic < n; ic++) 
 4229              		.loc 1 754 0
 4230 002e BB6B     		ldr	r3, [r7, #56]
 4231 0030 0133     		add	r3, r3, #1
 4232 0032 BB63     		str	r3, [r7, #56]
 4233              	.L126:
 754:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		for (ic = 0; ic < n; ic++) 
 4234              		.loc 1 754 0 is_stmt 0
 4235 0034 BA6B     		ldr	r2, [r7, #56]
 4236 0036 BB68     		ldr	r3, [r7, #8]
 4237 0038 9A42     		cmp	r2, r3
 4238 003a EEDB     		blt	.L127
 758:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		}
 759:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 760:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		// correct the diagonal elements to 1.0
 761:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		eigvec[ir][ir] = 1.0F;   
 4239              		.loc 1 761 0 is_stmt 1
 4240 003c FB6B     		ldr	r3, [r7, #60]
 4241 003e 9B00     		lsl	r3, r3, #2
 4242 0040 3A68     		ldr	r2, [r7]
 4243 0042 D318     		add	r3, r2, r3
 4244 0044 1A68     		ldr	r2, [r3]
 4245 0046 FB6B     		ldr	r3, [r7, #60]
 4246 0048 9B00     		lsl	r3, r3, #2
 4247 004a D318     		add	r3, r2, r3
 4248 004c FE22     		mov	r2, #254
 4249 004e 9205     		lsl	r2, r2, #22
 4250 0050 1A60     		str	r2, [r3]
 762:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 763:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		// initialise the array of eigenvalues to the diagonal elements of m
 764:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		eigval[ir][0] = m[ir][ir];   
 4251              		.loc 1 764 0
 4252 0052 FB6B     		ldr	r3, [r7, #60]
 4253 0054 9B00     		lsl	r3, r3, #2
 4254 0056 7A68     		ldr	r2, [r7, #4]
 4255 0058 D318     		add	r3, r2, r3
 4256 005a 1A68     		ldr	r2, [r3]
 4257 005c FB6B     		ldr	r3, [r7, #60]
 4258 005e 9B00     		lsl	r3, r3, #2
 4259 0060 F968     		ldr	r1, [r7, #12]
 4260 0062 CB18     		add	r3, r1, r3
 4261 0064 1968     		ldr	r1, [r3]
 4262 0066 FB6B     		ldr	r3, [r7, #60]
 4263 0068 9B00     		lsl	r3, r3, #2
 4264 006a CB18     		add	r3, r1, r3
 4265 006c 1B68     		ldr	r3, [r3]
 4266 006e 1360     		str	r3, [r2]
 751:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (ir = 0; ir < n; ir++) 
 4267              		.loc 1 751 0
 4268 0070 FB6B     		ldr	r3, [r7, #60]
 4269 0072 0133     		add	r3, r3, #1
 4270 0074 FB63     		str	r3, [r7, #60]
 4271              	.L125:
 751:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (ir = 0; ir < n; ir++) 
 4272              		.loc 1 751 0 is_stmt 0
 4273 0076 FA6B     		ldr	r2, [r7, #60]
 4274 0078 BB68     		ldr	r3, [r7, #8]
 4275 007a 9A42     		cmp	r2, r3
 4276 007c CADB     		blt	.L128
 765:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	}
 766:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 767:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// initialise the counter and loop until converged or NITERATIONS reached  
 768:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	ctr = 0;
 4277              		.loc 1 768 0 is_stmt 1
 4278 007e 0023     		mov	r3, #0
 4279 0080 BB62     		str	r3, [r7, #40]
 4280              	.L153:
 769:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	do
 770:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	{   
 771:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		// compute the absolute value of the above diagonal elements as exit criterion 
 772:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		residue = 0.0F;   
 4281              		.loc 1 772 0
 4282 0082 0023     		mov	r3, #0
 4283 0084 FB62     		str	r3, [r7, #44]
 773:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		// loop over rows excluding last row
 774:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		for (ir = 0; ir < n - 1; ir++)
 4284              		.loc 1 774 0
 4285 0086 0023     		mov	r3, #0
 4286 0088 FB63     		str	r3, [r7, #60]
 4287 008a 1EE0     		b	.L129
 4288              	.L132:
 775:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		{   
 776:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			// loop over above diagonal columns
 777:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			for (ic = ir + 1; ic < n; ic++) 
 4289              		.loc 1 777 0
 4290 008c FB6B     		ldr	r3, [r7, #60]
 4291 008e 0133     		add	r3, r3, #1
 4292 0090 BB63     		str	r3, [r7, #56]
 4293 0092 13E0     		b	.L130
 4294              	.L131:
 778:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			{
 779:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 				// accumulate the residual off diagonal terms which are being driven to zero
 780:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 				residue += fabs(m[ir][ic]); 
 4295              		.loc 1 780 0
 4296 0094 FB6B     		ldr	r3, [r7, #60]
 4297 0096 9B00     		lsl	r3, r3, #2
 4298 0098 FA68     		ldr	r2, [r7, #12]
 4299 009a D318     		add	r3, r2, r3
 4300 009c 1A68     		ldr	r2, [r3]
 4301 009e BB6B     		ldr	r3, [r7, #56]
 4302 00a0 9B00     		lsl	r3, r3, #2
 4303 00a2 D318     		add	r3, r2, r3
 4304 00a4 1B68     		ldr	r3, [r3]
 4305 00a6 5B00     		lsl	r3, r3, #1
 4306 00a8 5B08     		lsr	r3, r3, #1
 4307 00aa F86A     		ldr	r0, [r7, #44]
 4308 00ac 191C     		add	r1, r3, #0
 4309 00ae FFF7FEFF 		bl	__aeabi_fadd
 4310 00b2 031C     		add	r3, r0, #0
 4311 00b4 FB62     		str	r3, [r7, #44]
 777:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			for (ic = ir + 1; ic < n; ic++) 
 4312              		.loc 1 777 0
 4313 00b6 BB6B     		ldr	r3, [r7, #56]
 4314 00b8 0133     		add	r3, r3, #1
 4315 00ba BB63     		str	r3, [r7, #56]
 4316              	.L130:
 777:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			for (ic = ir + 1; ic < n; ic++) 
 4317              		.loc 1 777 0 is_stmt 0
 4318 00bc BA6B     		ldr	r2, [r7, #56]
 4319 00be BB68     		ldr	r3, [r7, #8]
 4320 00c0 9A42     		cmp	r2, r3
 4321 00c2 E7DB     		blt	.L131
 774:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		for (ir = 0; ir < n - 1; ir++)
 4322              		.loc 1 774 0 is_stmt 1
 4323 00c4 FB6B     		ldr	r3, [r7, #60]
 4324 00c6 0133     		add	r3, r3, #1
 4325 00c8 FB63     		str	r3, [r7, #60]
 4326              	.L129:
 774:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		for (ir = 0; ir < n - 1; ir++)
 4327              		.loc 1 774 0 is_stmt 0
 4328 00ca BB68     		ldr	r3, [r7, #8]
 4329 00cc 5A1E     		sub	r2, r3, #1
 4330 00ce FB6B     		ldr	r3, [r7, #60]
 4331 00d0 9A42     		cmp	r2, r3
 4332 00d2 DBDC     		bgt	.L132
 781:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			}
 782:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		}   
 783:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 784:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		// check if we still have work to do 
 785:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		if (residue > 0.0F) 
 4333              		.loc 1 785 0 is_stmt 1
 4334 00d4 F86A     		ldr	r0, [r7, #44]
 4335 00d6 0021     		mov	r1, #0
 4336 00d8 FFF7FEFF 		bl	__aeabi_fcmpgt
 4337 00dc 031C     		mov	r3, r0
 4338 00de 002B     		cmp	r3, #0
 4339 00e0 00D1     		bne	.LCB3874
 4340 00e2 A6E2     		b	.L133	@long jump
 4341              	.LCB3874:
 4342              	.L159:
 786:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		{     
 787:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			// loop over all rows with the exception of the last row (since only rotating above diagonal ele
 788:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			for (ir = 0; ir < n - 1; ir++) 
 4343              		.loc 1 788 0
 4344 00e4 0023     		mov	r3, #0
 4345 00e6 FB63     		str	r3, [r7, #60]
 4346 00e8 9DE2     		b	.L135
 4347              	.L150:
 789:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			{   
 790:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 				// loop over columns ic (where ic is always greater than ir since above diagonal)
 791:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 				for (ic = ir + 1; ic < n; ic++) 
 4348              		.loc 1 791 0
 4349 00ea FB6B     		ldr	r3, [r7, #60]
 4350 00ec 0133     		add	r3, r3, #1
 4351 00ee BB63     		str	r3, [r7, #56]
 4352 00f0 91E2     		b	.L136
 4353              	.L149:
 792:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 				{   	
 793:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					// only continue with this element if the element is non-zero
 794:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					if (fabs(m[ir][ic]) > 0.0F) 
 4354              		.loc 1 794 0
 4355 00f2 FB6B     		ldr	r3, [r7, #60]
 4356 00f4 9B00     		lsl	r3, r3, #2
 4357 00f6 FA68     		ldr	r2, [r7, #12]
 4358 00f8 D318     		add	r3, r2, r3
 4359 00fa 1A68     		ldr	r2, [r3]
 4360 00fc BB6B     		ldr	r3, [r7, #56]
 4361 00fe 9B00     		lsl	r3, r3, #2
 4362 0100 D318     		add	r3, r2, r3
 4363 0102 1B68     		ldr	r3, [r3]
 4364 0104 5B00     		lsl	r3, r3, #1
 4365 0106 5B08     		lsr	r3, r3, #1
 4366 0108 181C     		add	r0, r3, #0
 4367 010a 0021     		mov	r1, #0
 4368 010c FFF7FEFF 		bl	__aeabi_fcmpgt
 4369 0110 031C     		mov	r3, r0
 4370 0112 002B     		cmp	r3, #0
 4371 0114 00D1     		bne	.LCB3905
 4372 0116 7BE2     		b	.L137	@long jump
 4373              	.LCB3905:
 4374              	.L160:
 795:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					{   		
 796:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						// calculate cot(2*phi) where phi is the Jacobi rotation angle
 797:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						cot2phi = 0.5F * (eigval[ic][0] - eigval[ir][0]) / (m[ir][ic]); 
 4375              		.loc 1 797 0
 4376 0118 BB6B     		ldr	r3, [r7, #56]
 4377 011a 9B00     		lsl	r3, r3, #2
 4378 011c 7A68     		ldr	r2, [r7, #4]
 4379 011e D318     		add	r3, r2, r3
 4380 0120 1B68     		ldr	r3, [r3]
 4381 0122 1A68     		ldr	r2, [r3]
 4382 0124 FB6B     		ldr	r3, [r7, #60]
 4383 0126 9B00     		lsl	r3, r3, #2
 4384 0128 7968     		ldr	r1, [r7, #4]
 4385 012a CB18     		add	r3, r1, r3
 4386 012c 1B68     		ldr	r3, [r3]
 4387 012e 1B68     		ldr	r3, [r3]
 4388 0130 101C     		add	r0, r2, #0
 4389 0132 191C     		add	r1, r3, #0
 4390 0134 FFF7FEFF 		bl	__aeabi_fsub
 4391 0138 031C     		add	r3, r0, #0
 4392 013a 181C     		add	r0, r3, #0
 4393 013c FC21     		mov	r1, #252
 4394 013e 8905     		lsl	r1, r1, #22
 4395 0140 FFF7FEFF 		bl	__aeabi_fmul
 4396 0144 031C     		add	r3, r0, #0
 4397 0146 1A1C     		add	r2, r3, #0
 4398 0148 FB6B     		ldr	r3, [r7, #60]
 4399 014a 9B00     		lsl	r3, r3, #2
 4400 014c F968     		ldr	r1, [r7, #12]
 4401 014e CB18     		add	r3, r1, r3
 4402 0150 1968     		ldr	r1, [r3]
 4403 0152 BB6B     		ldr	r3, [r7, #56]
 4404 0154 9B00     		lsl	r3, r3, #2
 4405 0156 CB18     		add	r3, r1, r3
 4406 0158 1B68     		ldr	r3, [r3]
 4407 015a 101C     		add	r0, r2, #0
 4408 015c 191C     		add	r1, r3, #0
 4409 015e FFF7FEFF 		bl	__aeabi_fdiv
 4410 0162 031C     		add	r3, r0, #0
 4411 0164 7B62     		str	r3, [r7, #36]
 798:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 799:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						// calculate tan(phi) correcting sign to ensure the smaller solution is used
 800:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						tanphi = 1.0F / (float) (fabs(cot2phi) + sqrt(1.0F + cot2phi * cot2phi));   
 4412              		.loc 1 800 0
 4413 0166 7B6A     		ldr	r3, [r7, #36]
 4414 0168 5B00     		lsl	r3, r3, #1
 4415 016a 5B08     		lsr	r3, r3, #1
 4416 016c 181C     		add	r0, r3, #0
 4417 016e FFF7FEFF 		bl	__aeabi_f2d
 4418 0172 051C     		mov	r5, r0
 4419 0174 0E1C     		mov	r6, r1
 4420 0176 786A     		ldr	r0, [r7, #36]
 4421 0178 796A     		ldr	r1, [r7, #36]
 4422 017a FFF7FEFF 		bl	__aeabi_fmul
 4423 017e 031C     		add	r3, r0, #0
 4424 0180 181C     		add	r0, r3, #0
 4425 0182 FE21     		mov	r1, #254
 4426 0184 8905     		lsl	r1, r1, #22
 4427 0186 FFF7FEFF 		bl	__aeabi_fadd
 4428 018a 031C     		add	r3, r0, #0
 4429 018c 181C     		add	r0, r3, #0
 4430 018e FFF7FEFF 		bl	__aeabi_f2d
 4431 0192 031C     		mov	r3, r0
 4432 0194 0C1C     		mov	r4, r1
 4433 0196 181C     		mov	r0, r3
 4434 0198 211C     		mov	r1, r4
 4435 019a FFF7FEFF 		bl	sqrt
 4436 019e 031C     		mov	r3, r0
 4437 01a0 0C1C     		mov	r4, r1
 4438 01a2 281C     		mov	r0, r5
 4439 01a4 311C     		mov	r1, r6
 4440 01a6 1A1C     		mov	r2, r3
 4441 01a8 231C     		mov	r3, r4
 4442 01aa FFF7FEFF 		bl	__aeabi_dadd
 4443 01ae 031C     		mov	r3, r0
 4444 01b0 0C1C     		mov	r4, r1
 4445 01b2 181C     		mov	r0, r3
 4446 01b4 211C     		mov	r1, r4
 4447 01b6 FFF7FEFF 		bl	__aeabi_d2f
 4448 01ba 031C     		add	r3, r0, #0
 4449 01bc FE20     		mov	r0, #254
 4450 01be 8005     		lsl	r0, r0, #22
 4451 01c0 191C     		add	r1, r3, #0
 4452 01c2 FFF7FEFF 		bl	__aeabi_fdiv
 4453 01c6 031C     		add	r3, r0, #0
 4454 01c8 3B63     		str	r3, [r7, #48]
 801:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						if (cot2phi < 0.0F) 
 4455              		.loc 1 801 0
 4456 01ca 786A     		ldr	r0, [r7, #36]
 4457 01cc 0021     		mov	r1, #0
 4458 01ce FFF7FEFF 		bl	__aeabi_fcmplt
 4459 01d2 031C     		mov	r3, r0
 4460 01d4 002B     		cmp	r3, #0
 4461 01d6 04D0     		beq	.L139
 4462              	.L161:
 802:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 							tanphi = -tanphi; 
 4463              		.loc 1 802 0
 4464 01d8 3B6B     		ldr	r3, [r7, #48]
 4465 01da 8022     		mov	r2, #128
 4466 01dc 1206     		lsl	r2, r2, #24
 4467 01de 5340     		eor	r3, r2
 4468 01e0 3B63     		str	r3, [r7, #48]
 4469              	.L139:
 803:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 804:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						// calculate the sine and cosine of the Jacobi rotation angle phi
 805:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						cosphi = 1.0F / (float)sqrt(1.0F + tanphi * tanphi);  
 4470              		.loc 1 805 0
 4471 01e2 386B     		ldr	r0, [r7, #48]
 4472 01e4 396B     		ldr	r1, [r7, #48]
 4473 01e6 FFF7FEFF 		bl	__aeabi_fmul
 4474 01ea 031C     		add	r3, r0, #0
 4475 01ec 181C     		add	r0, r3, #0
 4476 01ee FE21     		mov	r1, #254
 4477 01f0 8905     		lsl	r1, r1, #22
 4478 01f2 FFF7FEFF 		bl	__aeabi_fadd
 4479 01f6 031C     		add	r3, r0, #0
 4480 01f8 181C     		add	r0, r3, #0
 4481 01fa FFF7FEFF 		bl	__aeabi_f2d
 4482 01fe 031C     		mov	r3, r0
 4483 0200 0C1C     		mov	r4, r1
 4484 0202 181C     		mov	r0, r3
 4485 0204 211C     		mov	r1, r4
 4486 0206 FFF7FEFF 		bl	sqrt
 4487 020a 031C     		mov	r3, r0
 4488 020c 0C1C     		mov	r4, r1
 4489 020e 181C     		mov	r0, r3
 4490 0210 211C     		mov	r1, r4
 4491 0212 FFF7FEFF 		bl	__aeabi_d2f
 4492 0216 031C     		add	r3, r0, #0
 4493 0218 FE20     		mov	r0, #254
 4494 021a 8005     		lsl	r0, r0, #22
 4495 021c 191C     		add	r1, r3, #0
 4496 021e FFF7FEFF 		bl	__aeabi_fdiv
 4497 0222 031C     		add	r3, r0, #0
 4498 0224 3B62     		str	r3, [r7, #32]
 806:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						sinphi = tanphi * cosphi;   
 4499              		.loc 1 806 0
 4500 0226 386B     		ldr	r0, [r7, #48]
 4501 0228 396A     		ldr	r1, [r7, #32]
 4502 022a FFF7FEFF 		bl	__aeabi_fmul
 4503 022e 031C     		add	r3, r0, #0
 4504 0230 FB61     		str	r3, [r7, #28]
 807:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 808:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						// calculate tan(phi/2)
 809:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						tanhalfphi = sinphi / (1.0F + cosphi);  
 4505              		.loc 1 809 0
 4506 0232 386A     		ldr	r0, [r7, #32]
 4507 0234 FE21     		mov	r1, #254
 4508 0236 8905     		lsl	r1, r1, #22
 4509 0238 FFF7FEFF 		bl	__aeabi_fadd
 4510 023c 031C     		add	r3, r0, #0
 4511 023e F869     		ldr	r0, [r7, #28]
 4512 0240 191C     		add	r1, r3, #0
 4513 0242 FFF7FEFF 		bl	__aeabi_fdiv
 4514 0246 031C     		add	r3, r0, #0
 4515 0248 BB61     		str	r3, [r7, #24]
 810:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 811:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						// set tmp = tan(phi) times current matrix element used in update of leading diagonal element
 812:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						ftmp = tanphi * m[ir][ic];  
 4516              		.loc 1 812 0
 4517 024a FB6B     		ldr	r3, [r7, #60]
 4518 024c 9B00     		lsl	r3, r3, #2
 4519 024e FA68     		ldr	r2, [r7, #12]
 4520 0250 D318     		add	r3, r2, r3
 4521 0252 1A68     		ldr	r2, [r3]
 4522 0254 BB6B     		ldr	r3, [r7, #56]
 4523 0256 9B00     		lsl	r3, r3, #2
 4524 0258 D318     		add	r3, r2, r3
 4525 025a 1B68     		ldr	r3, [r3]
 4526 025c 181C     		add	r0, r3, #0
 4527 025e 396B     		ldr	r1, [r7, #48]
 4528 0260 FFF7FEFF 		bl	__aeabi_fmul
 4529 0264 031C     		add	r3, r0, #0
 4530 0266 7B61     		str	r3, [r7, #20]
 813:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 814:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						// apply the jacobi rotation to diagonal elements [ir][ir] and [ic][ic] stored in the eigenva
 815:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						// eigval[ir] = eigval[ir] - tan(phi) *  m[ir][ic]
 816:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						eigval[ir][0] -= ftmp; 
 4531              		.loc 1 816 0
 4532 0268 FB6B     		ldr	r3, [r7, #60]
 4533 026a 9B00     		lsl	r3, r3, #2
 4534 026c 7A68     		ldr	r2, [r7, #4]
 4535 026e D318     		add	r3, r2, r3
 4536 0270 1C68     		ldr	r4, [r3]
 4537 0272 FB6B     		ldr	r3, [r7, #60]
 4538 0274 9B00     		lsl	r3, r3, #2
 4539 0276 7A68     		ldr	r2, [r7, #4]
 4540 0278 D318     		add	r3, r2, r3
 4541 027a 1B68     		ldr	r3, [r3]
 4542 027c 1B68     		ldr	r3, [r3]
 4543 027e 181C     		add	r0, r3, #0
 4544 0280 7969     		ldr	r1, [r7, #20]
 4545 0282 FFF7FEFF 		bl	__aeabi_fsub
 4546 0286 031C     		add	r3, r0, #0
 4547 0288 2360     		str	r3, [r4]
 817:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						// eigval[ic] = eigval[ic] + tan(phi) * m[ir][ic]
 818:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						eigval[ic][0] += ftmp;   
 4548              		.loc 1 818 0
 4549 028a BB6B     		ldr	r3, [r7, #56]
 4550 028c 9B00     		lsl	r3, r3, #2
 4551 028e 7A68     		ldr	r2, [r7, #4]
 4552 0290 D318     		add	r3, r2, r3
 4553 0292 1C68     		ldr	r4, [r3]
 4554 0294 BB6B     		ldr	r3, [r7, #56]
 4555 0296 9B00     		lsl	r3, r3, #2
 4556 0298 7A68     		ldr	r2, [r7, #4]
 4557 029a D318     		add	r3, r2, r3
 4558 029c 1B68     		ldr	r3, [r3]
 4559 029e 1B68     		ldr	r3, [r3]
 4560 02a0 181C     		add	r0, r3, #0
 4561 02a2 7969     		ldr	r1, [r7, #20]
 4562 02a4 FFF7FEFF 		bl	__aeabi_fadd
 4563 02a8 031C     		add	r3, r0, #0
 4564 02aa 2360     		str	r3, [r4]
 819:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 820:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						// by definition, applying the jacobi rotation on element ir, ic results in 0.0
 821:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						m[ir][ic] = 0.0F;   
 4565              		.loc 1 821 0
 4566 02ac FB6B     		ldr	r3, [r7, #60]
 4567 02ae 9B00     		lsl	r3, r3, #2
 4568 02b0 FA68     		ldr	r2, [r7, #12]
 4569 02b2 D318     		add	r3, r2, r3
 4570 02b4 1A68     		ldr	r2, [r3]
 4571 02b6 BB6B     		ldr	r3, [r7, #56]
 4572 02b8 9B00     		lsl	r3, r3, #2
 4573 02ba D318     		add	r3, r2, r3
 4574 02bc 0022     		mov	r2, #0
 4575 02be 1A60     		str	r2, [r3]
 822:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 823:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						// apply the jacobi rotation to all elements of the eigenvector matrix
 824:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						for (j = 0; j < n; j++)  
 4576              		.loc 1 824 0
 4577 02c0 0023     		mov	r3, #0
 4578 02c2 7B63     		str	r3, [r7, #52]
 4579 02c4 61E0     		b	.L141
 4580              	.L142:
 825:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						{
 826:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 							// store eigvec[j][ir]
 827:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 							ftmp = eigvec[j][ir];
 4581              		.loc 1 827 0
 4582 02c6 7B6B     		ldr	r3, [r7, #52]
 4583 02c8 9B00     		lsl	r3, r3, #2
 4584 02ca 3A68     		ldr	r2, [r7]
 4585 02cc D318     		add	r3, r2, r3
 4586 02ce 1A68     		ldr	r2, [r3]
 4587 02d0 FB6B     		ldr	r3, [r7, #60]
 4588 02d2 9B00     		lsl	r3, r3, #2
 4589 02d4 D318     		add	r3, r2, r3
 4590 02d6 1B68     		ldr	r3, [r3]
 4591 02d8 7B61     		str	r3, [r7, #20]
 828:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 							// eigvec[j][ir] = eigvec[j][ir] - sin(phi) * (eigvec[j][ic] + tan(phi/2) * eigvec[j][ir])
 829:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 							eigvec[j][ir] = ftmp - sinphi * (eigvec[j][ic] + tanhalfphi * ftmp);
 4592              		.loc 1 829 0
 4593 02da 7B6B     		ldr	r3, [r7, #52]
 4594 02dc 9B00     		lsl	r3, r3, #2
 4595 02de 3A68     		ldr	r2, [r7]
 4596 02e0 D318     		add	r3, r2, r3
 4597 02e2 1A68     		ldr	r2, [r3]
 4598 02e4 FB6B     		ldr	r3, [r7, #60]
 4599 02e6 9B00     		lsl	r3, r3, #2
 4600 02e8 D418     		add	r4, r2, r3
 4601 02ea 7B6B     		ldr	r3, [r7, #52]
 4602 02ec 9B00     		lsl	r3, r3, #2
 4603 02ee 3A68     		ldr	r2, [r7]
 4604 02f0 D318     		add	r3, r2, r3
 4605 02f2 1A68     		ldr	r2, [r3]
 4606 02f4 BB6B     		ldr	r3, [r7, #56]
 4607 02f6 9B00     		lsl	r3, r3, #2
 4608 02f8 D318     		add	r3, r2, r3
 4609 02fa 1D68     		ldr	r5, [r3]
 4610 02fc B869     		ldr	r0, [r7, #24]
 4611 02fe 7969     		ldr	r1, [r7, #20]
 4612 0300 FFF7FEFF 		bl	__aeabi_fmul
 4613 0304 031C     		add	r3, r0, #0
 4614 0306 281C     		add	r0, r5, #0
 4615 0308 191C     		add	r1, r3, #0
 4616 030a FFF7FEFF 		bl	__aeabi_fadd
 4617 030e 031C     		add	r3, r0, #0
 4618 0310 181C     		add	r0, r3, #0
 4619 0312 F969     		ldr	r1, [r7, #28]
 4620 0314 FFF7FEFF 		bl	__aeabi_fmul
 4621 0318 031C     		add	r3, r0, #0
 4622 031a 7869     		ldr	r0, [r7, #20]
 4623 031c 191C     		add	r1, r3, #0
 4624 031e FFF7FEFF 		bl	__aeabi_fsub
 4625 0322 031C     		add	r3, r0, #0
 4626 0324 2360     		str	r3, [r4]
 830:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 							// eigvec[j][ic] = eigvec[j][ic] + sin(phi) * (eigvec[j][ir] - tan(phi/2) * eigvec[j][ic])
 831:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 							eigvec[j][ic] = eigvec[j][ic] + sinphi * (ftmp - tanhalfphi * eigvec[j][ic]);
 4627              		.loc 1 831 0
 4628 0326 7B6B     		ldr	r3, [r7, #52]
 4629 0328 9B00     		lsl	r3, r3, #2
 4630 032a 3A68     		ldr	r2, [r7]
 4631 032c D318     		add	r3, r2, r3
 4632 032e 1A68     		ldr	r2, [r3]
 4633 0330 BB6B     		ldr	r3, [r7, #56]
 4634 0332 9B00     		lsl	r3, r3, #2
 4635 0334 D418     		add	r4, r2, r3
 4636 0336 7B6B     		ldr	r3, [r7, #52]
 4637 0338 9B00     		lsl	r3, r3, #2
 4638 033a 3A68     		ldr	r2, [r7]
 4639 033c D318     		add	r3, r2, r3
 4640 033e 1A68     		ldr	r2, [r3]
 4641 0340 BB6B     		ldr	r3, [r7, #56]
 4642 0342 9B00     		lsl	r3, r3, #2
 4643 0344 D318     		add	r3, r2, r3
 4644 0346 1D68     		ldr	r5, [r3]
 4645 0348 7B6B     		ldr	r3, [r7, #52]
 4646 034a 9B00     		lsl	r3, r3, #2
 4647 034c 3A68     		ldr	r2, [r7]
 4648 034e D318     		add	r3, r2, r3
 4649 0350 1A68     		ldr	r2, [r3]
 4650 0352 BB6B     		ldr	r3, [r7, #56]
 4651 0354 9B00     		lsl	r3, r3, #2
 4652 0356 D318     		add	r3, r2, r3
 4653 0358 1B68     		ldr	r3, [r3]
 4654 035a 181C     		add	r0, r3, #0
 4655 035c B969     		ldr	r1, [r7, #24]
 4656 035e FFF7FEFF 		bl	__aeabi_fmul
 4657 0362 031C     		add	r3, r0, #0
 4658 0364 7869     		ldr	r0, [r7, #20]
 4659 0366 191C     		add	r1, r3, #0
 4660 0368 FFF7FEFF 		bl	__aeabi_fsub
 4661 036c 031C     		add	r3, r0, #0
 4662 036e 181C     		add	r0, r3, #0
 4663 0370 F969     		ldr	r1, [r7, #28]
 4664 0372 FFF7FEFF 		bl	__aeabi_fmul
 4665 0376 031C     		add	r3, r0, #0
 4666 0378 281C     		add	r0, r5, #0
 4667 037a 191C     		add	r1, r3, #0
 4668 037c FFF7FEFF 		bl	__aeabi_fadd
 4669 0380 031C     		add	r3, r0, #0
 4670 0382 2360     		str	r3, [r4]
 824:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						for (j = 0; j < n; j++)  
 4671              		.loc 1 824 0
 4672 0384 7B6B     		ldr	r3, [r7, #52]
 4673 0386 0133     		add	r3, r3, #1
 4674 0388 7B63     		str	r3, [r7, #52]
 4675              	.L141:
 824:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						for (j = 0; j < n; j++)  
 4676              		.loc 1 824 0 is_stmt 0
 4677 038a 7A6B     		ldr	r2, [r7, #52]
 4678 038c BB68     		ldr	r3, [r7, #8]
 4679 038e 9A42     		cmp	r2, r3
 4680 0390 99DB     		blt	.L142
 832:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						} 
 833:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 834:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						// apply the jacobi rotation only to those elements of matrix m that can change
 835:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						for (j = 0; j <= ir - 1; j++) 
 4681              		.loc 1 835 0 is_stmt 1
 4682 0392 0023     		mov	r3, #0
 4683 0394 7B63     		str	r3, [r7, #52]
 4684 0396 61E0     		b	.L143
 4685              	.L144:
 836:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						{
 837:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 							// store m[j][ir]
 838:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 							ftmp = m[j][ir];
 4686              		.loc 1 838 0
 4687 0398 7B6B     		ldr	r3, [r7, #52]
 4688 039a 9B00     		lsl	r3, r3, #2
 4689 039c FA68     		ldr	r2, [r7, #12]
 4690 039e D318     		add	r3, r2, r3
 4691 03a0 1A68     		ldr	r2, [r3]
 4692 03a2 FB6B     		ldr	r3, [r7, #60]
 4693 03a4 9B00     		lsl	r3, r3, #2
 4694 03a6 D318     		add	r3, r2, r3
 4695 03a8 1B68     		ldr	r3, [r3]
 4696 03aa 7B61     		str	r3, [r7, #20]
 839:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 							// m[j][ir] = m[j][ir] - sin(phi) * (m[j][ic] + tan(phi/2) * m[j][ir])
 840:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 							m[j][ir] = ftmp - sinphi * (m[j][ic] + tanhalfphi * ftmp);
 4697              		.loc 1 840 0
 4698 03ac 7B6B     		ldr	r3, [r7, #52]
 4699 03ae 9B00     		lsl	r3, r3, #2
 4700 03b0 FA68     		ldr	r2, [r7, #12]
 4701 03b2 D318     		add	r3, r2, r3
 4702 03b4 1A68     		ldr	r2, [r3]
 4703 03b6 FB6B     		ldr	r3, [r7, #60]
 4704 03b8 9B00     		lsl	r3, r3, #2
 4705 03ba D418     		add	r4, r2, r3
 4706 03bc 7B6B     		ldr	r3, [r7, #52]
 4707 03be 9B00     		lsl	r3, r3, #2
 4708 03c0 FA68     		ldr	r2, [r7, #12]
 4709 03c2 D318     		add	r3, r2, r3
 4710 03c4 1A68     		ldr	r2, [r3]
 4711 03c6 BB6B     		ldr	r3, [r7, #56]
 4712 03c8 9B00     		lsl	r3, r3, #2
 4713 03ca D318     		add	r3, r2, r3
 4714 03cc 1D68     		ldr	r5, [r3]
 4715 03ce B869     		ldr	r0, [r7, #24]
 4716 03d0 7969     		ldr	r1, [r7, #20]
 4717 03d2 FFF7FEFF 		bl	__aeabi_fmul
 4718 03d6 031C     		add	r3, r0, #0
 4719 03d8 281C     		add	r0, r5, #0
 4720 03da 191C     		add	r1, r3, #0
 4721 03dc FFF7FEFF 		bl	__aeabi_fadd
 4722 03e0 031C     		add	r3, r0, #0
 4723 03e2 181C     		add	r0, r3, #0
 4724 03e4 F969     		ldr	r1, [r7, #28]
 4725 03e6 FFF7FEFF 		bl	__aeabi_fmul
 4726 03ea 031C     		add	r3, r0, #0
 4727 03ec 7869     		ldr	r0, [r7, #20]
 4728 03ee 191C     		add	r1, r3, #0
 4729 03f0 FFF7FEFF 		bl	__aeabi_fsub
 4730 03f4 031C     		add	r3, r0, #0
 4731 03f6 2360     		str	r3, [r4]
 841:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 							// m[j][ic] = m[j][ic] + sin(phi) * (m[j][ir] - tan(phi/2) * m[j][ic])
 842:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 							m[j][ic] = m[j][ic] + sinphi * (ftmp - tanhalfphi * m[j][ic]);
 4732              		.loc 1 842 0
 4733 03f8 7B6B     		ldr	r3, [r7, #52]
 4734 03fa 9B00     		lsl	r3, r3, #2
 4735 03fc FA68     		ldr	r2, [r7, #12]
 4736 03fe D318     		add	r3, r2, r3
 4737 0400 1A68     		ldr	r2, [r3]
 4738 0402 BB6B     		ldr	r3, [r7, #56]
 4739 0404 9B00     		lsl	r3, r3, #2
 4740 0406 D418     		add	r4, r2, r3
 4741 0408 7B6B     		ldr	r3, [r7, #52]
 4742 040a 9B00     		lsl	r3, r3, #2
 4743 040c FA68     		ldr	r2, [r7, #12]
 4744 040e D318     		add	r3, r2, r3
 4745 0410 1A68     		ldr	r2, [r3]
 4746 0412 BB6B     		ldr	r3, [r7, #56]
 4747 0414 9B00     		lsl	r3, r3, #2
 4748 0416 D318     		add	r3, r2, r3
 4749 0418 1D68     		ldr	r5, [r3]
 4750 041a 7B6B     		ldr	r3, [r7, #52]
 4751 041c 9B00     		lsl	r3, r3, #2
 4752 041e FA68     		ldr	r2, [r7, #12]
 4753 0420 D318     		add	r3, r2, r3
 4754 0422 1A68     		ldr	r2, [r3]
 4755 0424 BB6B     		ldr	r3, [r7, #56]
 4756 0426 9B00     		lsl	r3, r3, #2
 4757 0428 D318     		add	r3, r2, r3
 4758 042a 1B68     		ldr	r3, [r3]
 4759 042c 181C     		add	r0, r3, #0
 4760 042e B969     		ldr	r1, [r7, #24]
 4761 0430 FFF7FEFF 		bl	__aeabi_fmul
 4762 0434 031C     		add	r3, r0, #0
 4763 0436 7869     		ldr	r0, [r7, #20]
 4764 0438 191C     		add	r1, r3, #0
 4765 043a FFF7FEFF 		bl	__aeabi_fsub
 4766 043e 031C     		add	r3, r0, #0
 4767 0440 181C     		add	r0, r3, #0
 4768 0442 F969     		ldr	r1, [r7, #28]
 4769 0444 FFF7FEFF 		bl	__aeabi_fmul
 4770 0448 031C     		add	r3, r0, #0
 4771 044a 281C     		add	r0, r5, #0
 4772 044c 191C     		add	r1, r3, #0
 4773 044e FFF7FEFF 		bl	__aeabi_fadd
 4774 0452 031C     		add	r3, r0, #0
 4775 0454 2360     		str	r3, [r4]
 835:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						for (j = 0; j <= ir - 1; j++) 
 4776              		.loc 1 835 0
 4777 0456 7B6B     		ldr	r3, [r7, #52]
 4778 0458 0133     		add	r3, r3, #1
 4779 045a 7B63     		str	r3, [r7, #52]
 4780              	.L143:
 835:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						for (j = 0; j <= ir - 1; j++) 
 4781              		.loc 1 835 0 is_stmt 0
 4782 045c FB6B     		ldr	r3, [r7, #60]
 4783 045e 5A1E     		sub	r2, r3, #1
 4784 0460 7B6B     		ldr	r3, [r7, #52]
 4785 0462 9A42     		cmp	r2, r3
 4786 0464 98DA     		bge	.L144
 843:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						}
 844:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						for (j = ir + 1; j <= ic - 1; j++) 
 4787              		.loc 1 844 0 is_stmt 1
 4788 0466 FB6B     		ldr	r3, [r7, #60]
 4789 0468 0133     		add	r3, r3, #1
 4790 046a 7B63     		str	r3, [r7, #52]
 4791 046c 61E0     		b	.L145
 4792              	.L146:
 845:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						{
 846:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 							// store m[ir][j] 
 847:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 							ftmp = m[ir][j];
 4793              		.loc 1 847 0
 4794 046e FB6B     		ldr	r3, [r7, #60]
 4795 0470 9B00     		lsl	r3, r3, #2
 4796 0472 FA68     		ldr	r2, [r7, #12]
 4797 0474 D318     		add	r3, r2, r3
 4798 0476 1A68     		ldr	r2, [r3]
 4799 0478 7B6B     		ldr	r3, [r7, #52]
 4800 047a 9B00     		lsl	r3, r3, #2
 4801 047c D318     		add	r3, r2, r3
 4802 047e 1B68     		ldr	r3, [r3]
 4803 0480 7B61     		str	r3, [r7, #20]
 848:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 							// m[ir][j] = m[ir][j] - sin(phi) * (m[j][ic] + tan(phi/2) * m[ir][j])
 849:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 							m[ir][j] = ftmp - sinphi * (m[j][ic] + tanhalfphi * ftmp);
 4804              		.loc 1 849 0
 4805 0482 FB6B     		ldr	r3, [r7, #60]
 4806 0484 9B00     		lsl	r3, r3, #2
 4807 0486 FA68     		ldr	r2, [r7, #12]
 4808 0488 D318     		add	r3, r2, r3
 4809 048a 1A68     		ldr	r2, [r3]
 4810 048c 7B6B     		ldr	r3, [r7, #52]
 4811 048e 9B00     		lsl	r3, r3, #2
 4812 0490 D418     		add	r4, r2, r3
 4813 0492 7B6B     		ldr	r3, [r7, #52]
 4814 0494 9B00     		lsl	r3, r3, #2
 4815 0496 FA68     		ldr	r2, [r7, #12]
 4816 0498 D318     		add	r3, r2, r3
 4817 049a 1A68     		ldr	r2, [r3]
 4818 049c BB6B     		ldr	r3, [r7, #56]
 4819 049e 9B00     		lsl	r3, r3, #2
 4820 04a0 D318     		add	r3, r2, r3
 4821 04a2 1D68     		ldr	r5, [r3]
 4822 04a4 B869     		ldr	r0, [r7, #24]
 4823 04a6 7969     		ldr	r1, [r7, #20]
 4824 04a8 FFF7FEFF 		bl	__aeabi_fmul
 4825 04ac 031C     		add	r3, r0, #0
 4826 04ae 281C     		add	r0, r5, #0
 4827 04b0 191C     		add	r1, r3, #0
 4828 04b2 FFF7FEFF 		bl	__aeabi_fadd
 4829 04b6 031C     		add	r3, r0, #0
 4830 04b8 181C     		add	r0, r3, #0
 4831 04ba F969     		ldr	r1, [r7, #28]
 4832 04bc FFF7FEFF 		bl	__aeabi_fmul
 4833 04c0 031C     		add	r3, r0, #0
 4834 04c2 7869     		ldr	r0, [r7, #20]
 4835 04c4 191C     		add	r1, r3, #0
 4836 04c6 FFF7FEFF 		bl	__aeabi_fsub
 4837 04ca 031C     		add	r3, r0, #0
 4838 04cc 2360     		str	r3, [r4]
 850:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 							// m[j][ic] = m[j][ic] + sin(phi) * (m[ir][j] - tan(phi/2) * m[j][ic])
 851:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 							m[j][ic] = m[j][ic] + sinphi * (ftmp - tanhalfphi * m[j][ic]);	
 4839              		.loc 1 851 0
 4840 04ce 7B6B     		ldr	r3, [r7, #52]
 4841 04d0 9B00     		lsl	r3, r3, #2
 4842 04d2 FA68     		ldr	r2, [r7, #12]
 4843 04d4 D318     		add	r3, r2, r3
 4844 04d6 1A68     		ldr	r2, [r3]
 4845 04d8 BB6B     		ldr	r3, [r7, #56]
 4846 04da 9B00     		lsl	r3, r3, #2
 4847 04dc D418     		add	r4, r2, r3
 4848 04de 7B6B     		ldr	r3, [r7, #52]
 4849 04e0 9B00     		lsl	r3, r3, #2
 4850 04e2 FA68     		ldr	r2, [r7, #12]
 4851 04e4 D318     		add	r3, r2, r3
 4852 04e6 1A68     		ldr	r2, [r3]
 4853 04e8 BB6B     		ldr	r3, [r7, #56]
 4854 04ea 9B00     		lsl	r3, r3, #2
 4855 04ec D318     		add	r3, r2, r3
 4856 04ee 1D68     		ldr	r5, [r3]
 4857 04f0 7B6B     		ldr	r3, [r7, #52]
 4858 04f2 9B00     		lsl	r3, r3, #2
 4859 04f4 FA68     		ldr	r2, [r7, #12]
 4860 04f6 D318     		add	r3, r2, r3
 4861 04f8 1A68     		ldr	r2, [r3]
 4862 04fa BB6B     		ldr	r3, [r7, #56]
 4863 04fc 9B00     		lsl	r3, r3, #2
 4864 04fe D318     		add	r3, r2, r3
 4865 0500 1B68     		ldr	r3, [r3]
 4866 0502 181C     		add	r0, r3, #0
 4867 0504 B969     		ldr	r1, [r7, #24]
 4868 0506 FFF7FEFF 		bl	__aeabi_fmul
 4869 050a 031C     		add	r3, r0, #0
 4870 050c 7869     		ldr	r0, [r7, #20]
 4871 050e 191C     		add	r1, r3, #0
 4872 0510 FFF7FEFF 		bl	__aeabi_fsub
 4873 0514 031C     		add	r3, r0, #0
 4874 0516 181C     		add	r0, r3, #0
 4875 0518 F969     		ldr	r1, [r7, #28]
 4876 051a FFF7FEFF 		bl	__aeabi_fmul
 4877 051e 031C     		add	r3, r0, #0
 4878 0520 281C     		add	r0, r5, #0
 4879 0522 191C     		add	r1, r3, #0
 4880 0524 FFF7FEFF 		bl	__aeabi_fadd
 4881 0528 031C     		add	r3, r0, #0
 4882 052a 2360     		str	r3, [r4]
 844:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						for (j = ir + 1; j <= ic - 1; j++) 
 4883              		.loc 1 844 0
 4884 052c 7B6B     		ldr	r3, [r7, #52]
 4885 052e 0133     		add	r3, r3, #1
 4886 0530 7B63     		str	r3, [r7, #52]
 4887              	.L145:
 844:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						for (j = ir + 1; j <= ic - 1; j++) 
 4888              		.loc 1 844 0 is_stmt 0
 4889 0532 BB6B     		ldr	r3, [r7, #56]
 4890 0534 5A1E     		sub	r2, r3, #1
 4891 0536 7B6B     		ldr	r3, [r7, #52]
 4892 0538 9A42     		cmp	r2, r3
 4893 053a 98DA     		bge	.L146
 852:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						}
 853:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						for (j = ic + 1; j < n; j++) 
 4894              		.loc 1 853 0 is_stmt 1
 4895 053c BB6B     		ldr	r3, [r7, #56]
 4896 053e 0133     		add	r3, r3, #1
 4897 0540 7B63     		str	r3, [r7, #52]
 4898 0542 61E0     		b	.L147
 4899              	.L148:
 854:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						{
 855:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 							// store m[ir][j] 
 856:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 							ftmp = m[ir][j];
 4900              		.loc 1 856 0
 4901 0544 FB6B     		ldr	r3, [r7, #60]
 4902 0546 9B00     		lsl	r3, r3, #2
 4903 0548 FA68     		ldr	r2, [r7, #12]
 4904 054a D318     		add	r3, r2, r3
 4905 054c 1A68     		ldr	r2, [r3]
 4906 054e 7B6B     		ldr	r3, [r7, #52]
 4907 0550 9B00     		lsl	r3, r3, #2
 4908 0552 D318     		add	r3, r2, r3
 4909 0554 1B68     		ldr	r3, [r3]
 4910 0556 7B61     		str	r3, [r7, #20]
 857:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 							// m[ir][j] = m[ir][j] - sin(phi) * (m[ic][j] + tan(phi/2) * m[ir][j])
 858:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 							m[ir][j] = ftmp - sinphi * (m[ic][j] + tanhalfphi * ftmp);
 4911              		.loc 1 858 0
 4912 0558 FB6B     		ldr	r3, [r7, #60]
 4913 055a 9B00     		lsl	r3, r3, #2
 4914 055c FA68     		ldr	r2, [r7, #12]
 4915 055e D318     		add	r3, r2, r3
 4916 0560 1A68     		ldr	r2, [r3]
 4917 0562 7B6B     		ldr	r3, [r7, #52]
 4918 0564 9B00     		lsl	r3, r3, #2
 4919 0566 D418     		add	r4, r2, r3
 4920 0568 BB6B     		ldr	r3, [r7, #56]
 4921 056a 9B00     		lsl	r3, r3, #2
 4922 056c FA68     		ldr	r2, [r7, #12]
 4923 056e D318     		add	r3, r2, r3
 4924 0570 1A68     		ldr	r2, [r3]
 4925 0572 7B6B     		ldr	r3, [r7, #52]
 4926 0574 9B00     		lsl	r3, r3, #2
 4927 0576 D318     		add	r3, r2, r3
 4928 0578 1D68     		ldr	r5, [r3]
 4929 057a B869     		ldr	r0, [r7, #24]
 4930 057c 7969     		ldr	r1, [r7, #20]
 4931 057e FFF7FEFF 		bl	__aeabi_fmul
 4932 0582 031C     		add	r3, r0, #0
 4933 0584 281C     		add	r0, r5, #0
 4934 0586 191C     		add	r1, r3, #0
 4935 0588 FFF7FEFF 		bl	__aeabi_fadd
 4936 058c 031C     		add	r3, r0, #0
 4937 058e 181C     		add	r0, r3, #0
 4938 0590 F969     		ldr	r1, [r7, #28]
 4939 0592 FFF7FEFF 		bl	__aeabi_fmul
 4940 0596 031C     		add	r3, r0, #0
 4941 0598 7869     		ldr	r0, [r7, #20]
 4942 059a 191C     		add	r1, r3, #0
 4943 059c FFF7FEFF 		bl	__aeabi_fsub
 4944 05a0 031C     		add	r3, r0, #0
 4945 05a2 2360     		str	r3, [r4]
 859:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 							// m[ic][j] = m[ic][j] + sin(phi) * (m[ir][j] - tan(phi/2) * m[ic][j])
 860:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 							m[ic][j] = m[ic][j] + sinphi * (ftmp - tanhalfphi * m[ic][j]);
 4946              		.loc 1 860 0
 4947 05a4 BB6B     		ldr	r3, [r7, #56]
 4948 05a6 9B00     		lsl	r3, r3, #2
 4949 05a8 FA68     		ldr	r2, [r7, #12]
 4950 05aa D318     		add	r3, r2, r3
 4951 05ac 1A68     		ldr	r2, [r3]
 4952 05ae 7B6B     		ldr	r3, [r7, #52]
 4953 05b0 9B00     		lsl	r3, r3, #2
 4954 05b2 D418     		add	r4, r2, r3
 4955 05b4 BB6B     		ldr	r3, [r7, #56]
 4956 05b6 9B00     		lsl	r3, r3, #2
 4957 05b8 FA68     		ldr	r2, [r7, #12]
 4958 05ba D318     		add	r3, r2, r3
 4959 05bc 1A68     		ldr	r2, [r3]
 4960 05be 7B6B     		ldr	r3, [r7, #52]
 4961 05c0 9B00     		lsl	r3, r3, #2
 4962 05c2 D318     		add	r3, r2, r3
 4963 05c4 1D68     		ldr	r5, [r3]
 4964 05c6 BB6B     		ldr	r3, [r7, #56]
 4965 05c8 9B00     		lsl	r3, r3, #2
 4966 05ca FA68     		ldr	r2, [r7, #12]
 4967 05cc D318     		add	r3, r2, r3
 4968 05ce 1A68     		ldr	r2, [r3]
 4969 05d0 7B6B     		ldr	r3, [r7, #52]
 4970 05d2 9B00     		lsl	r3, r3, #2
 4971 05d4 D318     		add	r3, r2, r3
 4972 05d6 1B68     		ldr	r3, [r3]
 4973 05d8 181C     		add	r0, r3, #0
 4974 05da B969     		ldr	r1, [r7, #24]
 4975 05dc FFF7FEFF 		bl	__aeabi_fmul
 4976 05e0 031C     		add	r3, r0, #0
 4977 05e2 7869     		ldr	r0, [r7, #20]
 4978 05e4 191C     		add	r1, r3, #0
 4979 05e6 FFF7FEFF 		bl	__aeabi_fsub
 4980 05ea 031C     		add	r3, r0, #0
 4981 05ec 181C     		add	r0, r3, #0
 4982 05ee F969     		ldr	r1, [r7, #28]
 4983 05f0 FFF7FEFF 		bl	__aeabi_fmul
 4984 05f4 031C     		add	r3, r0, #0
 4985 05f6 281C     		add	r0, r5, #0
 4986 05f8 191C     		add	r1, r3, #0
 4987 05fa FFF7FEFF 		bl	__aeabi_fadd
 4988 05fe 031C     		add	r3, r0, #0
 4989 0600 2360     		str	r3, [r4]
 853:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						for (j = ic + 1; j < n; j++) 
 4990              		.loc 1 853 0
 4991 0602 7B6B     		ldr	r3, [r7, #52]
 4992 0604 0133     		add	r3, r3, #1
 4993 0606 7B63     		str	r3, [r7, #52]
 4994              	.L147:
 853:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						for (j = ic + 1; j < n; j++) 
 4995              		.loc 1 853 0 is_stmt 0
 4996 0608 7A6B     		ldr	r2, [r7, #52]
 4997 060a BB68     		ldr	r3, [r7, #8]
 4998 060c 9A42     		cmp	r2, r3
 4999 060e 99DB     		blt	.L148
 5000              	.L137:
 791:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 				for (ic = ir + 1; ic < n; ic++) 
 5001              		.loc 1 791 0 is_stmt 1
 5002 0610 BB6B     		ldr	r3, [r7, #56]
 5003 0612 0133     		add	r3, r3, #1
 5004 0614 BB63     		str	r3, [r7, #56]
 5005              	.L136:
 791:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 				for (ic = ir + 1; ic < n; ic++) 
 5006              		.loc 1 791 0 is_stmt 0
 5007 0616 BA6B     		ldr	r2, [r7, #56]
 5008 0618 BB68     		ldr	r3, [r7, #8]
 5009 061a 9A42     		cmp	r2, r3
 5010 061c 00DA     		bge	.LCB4519
 5011 061e 68E5     		b	.L149	@long jump
 5012              	.LCB4519:
 788:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			for (ir = 0; ir < n - 1; ir++) 
 5013              		.loc 1 788 0 is_stmt 1
 5014 0620 FB6B     		ldr	r3, [r7, #60]
 5015 0622 0133     		add	r3, r3, #1
 5016 0624 FB63     		str	r3, [r7, #60]
 5017              	.L135:
 788:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			for (ir = 0; ir < n - 1; ir++) 
 5018              		.loc 1 788 0 is_stmt 0
 5019 0626 BB68     		ldr	r3, [r7, #8]
 5020 0628 5A1E     		sub	r2, r3, #1
 5021 062a FB6B     		ldr	r3, [r7, #60]
 5022 062c 9A42     		cmp	r2, r3
 5023 062e 00DD     		ble	.LCB4529
 5024 0630 5BE5     		b	.L150	@long jump
 5025              	.LCB4529:
 5026              	.L133:
 861:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 						}	
 862:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					}   // end of test for matrix element already zero
 863:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 				}   // end of loop over columns 
 864:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			}   // end of loop over rows
 865:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		}  // end of test for non-zero residue
 866:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	} while ((residue > 0.0F) && (ctr++ < NITERATIONS)); // end of main loop
 5027              		.loc 1 866 0 is_stmt 1
 5028 0632 F86A     		ldr	r0, [r7, #44]
 5029 0634 0021     		mov	r1, #0
 5030 0636 FFF7FEFF 		bl	__aeabi_fcmpgt
 5031 063a 031C     		mov	r3, r0
 5032 063c 002B     		cmp	r3, #0
 5033 063e 0ED0     		beq	.L151
 5034              	.L162:
 5035              		.loc 1 866 0 is_stmt 0
 5036 0640 BB6A     		ldr	r3, [r7, #40]
 5037 0642 0E22     		mov	r2, #14
 5038 0644 D80F     		lsr	r0, r3, #31
 5039 0646 D117     		asr	r1, r2, #31
 5040 0648 041C     		mov	r4, r0
 5041 064a 9A42     		cmp	r2, r3
 5042 064c 4C41     		adc	r4, r4, r1
 5043 064e 231C     		mov	r3, r4
 5044 0650 DBB2     		uxtb	r3, r3
 5045 0652 BA6A     		ldr	r2, [r7, #40]
 5046 0654 0132     		add	r2, r2, #1
 5047 0656 BA62     		str	r2, [r7, #40]
 5048 0658 002B     		cmp	r3, #0
 5049 065a 00D0     		beq	.LCB4550
 5050 065c 11E5     		b	.L153	@long jump
 5051              	.LCB4550:
 5052              	.L151:
 867:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 868:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// recover the above diagonal matrix elements from unaltered below diagonal elements 
 869:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (ir = 0; ir < n - 1; ir++)
 5053              		.loc 1 869 0 is_stmt 1
 5054 065e 0023     		mov	r3, #0
 5055 0660 FB63     		str	r3, [r7, #60]
 5056 0662 1FE0     		b	.L154
 5057              	.L157:
 870:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	{
 871:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		// loop over above diagonal columns
 872:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		for (ic = ir + 1; ic < n; ic++)
 5058              		.loc 1 872 0
 5059 0664 FB6B     		ldr	r3, [r7, #60]
 5060 0666 0133     		add	r3, r3, #1
 5061 0668 BB63     		str	r3, [r7, #56]
 5062 066a 14E0     		b	.L155
 5063              	.L156:
 873:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		{
 874:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			// copy below diagonal element to above diagonal element
 875:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			m[ir][ic] = m[ic][ir];
 5064              		.loc 1 875 0
 5065 066c FB6B     		ldr	r3, [r7, #60]
 5066 066e 9B00     		lsl	r3, r3, #2
 5067 0670 FA68     		ldr	r2, [r7, #12]
 5068 0672 D318     		add	r3, r2, r3
 5069 0674 1A68     		ldr	r2, [r3]
 5070 0676 BB6B     		ldr	r3, [r7, #56]
 5071 0678 9B00     		lsl	r3, r3, #2
 5072 067a D218     		add	r2, r2, r3
 5073 067c BB6B     		ldr	r3, [r7, #56]
 5074 067e 9B00     		lsl	r3, r3, #2
 5075 0680 F968     		ldr	r1, [r7, #12]
 5076 0682 CB18     		add	r3, r1, r3
 5077 0684 1968     		ldr	r1, [r3]
 5078 0686 FB6B     		ldr	r3, [r7, #60]
 5079 0688 9B00     		lsl	r3, r3, #2
 5080 068a CB18     		add	r3, r1, r3
 5081 068c 1B68     		ldr	r3, [r3]
 5082 068e 1360     		str	r3, [r2]
 872:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		for (ic = ir + 1; ic < n; ic++)
 5083              		.loc 1 872 0
 5084 0690 BB6B     		ldr	r3, [r7, #56]
 5085 0692 0133     		add	r3, r3, #1
 5086 0694 BB63     		str	r3, [r7, #56]
 5087              	.L155:
 872:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		for (ic = ir + 1; ic < n; ic++)
 5088              		.loc 1 872 0 is_stmt 0
 5089 0696 BA6B     		ldr	r2, [r7, #56]
 5090 0698 BB68     		ldr	r3, [r7, #8]
 5091 069a 9A42     		cmp	r2, r3
 5092 069c E6DB     		blt	.L156
 869:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (ir = 0; ir < n - 1; ir++)
 5093              		.loc 1 869 0 is_stmt 1
 5094 069e FB6B     		ldr	r3, [r7, #60]
 5095 06a0 0133     		add	r3, r3, #1
 5096 06a2 FB63     		str	r3, [r7, #60]
 5097              	.L154:
 869:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (ir = 0; ir < n - 1; ir++)
 5098              		.loc 1 869 0 is_stmt 0
 5099 06a4 BB68     		ldr	r3, [r7, #8]
 5100 06a6 5A1E     		sub	r2, r3, #1
 5101 06a8 FB6B     		ldr	r3, [r7, #60]
 5102 06aa 9A42     		cmp	r2, r3
 5103 06ac DADC     		bgt	.L157
 876:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		}
 877:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	}
 878:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	return;
 5104              		.loc 1 878 0 is_stmt 1
 5105 06ae C046     		mov	r8, r8
 879:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** }  
 5106              		.loc 1 879 0
 5107 06b0 BD46     		mov	sp, r7
 5108 06b2 11B0     		add	sp, sp, #68
 5109              		@ sp needed for prologue
 5110 06b4 F0BD     		pop	{r4, r5, r6, r7, pc}
 5111              		.cfi_endproc
 5112              	.LFE10:
 5114 06b6 C046     		.section	.text.fmatrixAeqAxScalar,"ax",%progbits
 5115              		.align	2
 5116              		.global	fmatrixAeqAxScalar
 5117              		.code	16
 5118              		.thumb_func
 5120              	fmatrixAeqAxScalar:
 5121              	.LFB11:
 880:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 881:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** // function multiplies all elements of matrix A by the specified scalar 
 882:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** void fmatrixAeqAxScalar(float **A, float Scalar, int32 r, int32 c)
 883:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** {
 5122              		.loc 1 883 0
 5123              		.cfi_startproc
 5124 0000 90B5     		push	{r4, r7, lr}
 5125              	.LCFI30:
 5126              		.cfi_def_cfa_offset 12
 5127              		.cfi_offset 4, -12
 5128              		.cfi_offset 7, -8
 5129              		.cfi_offset 14, -4
 5130 0002 87B0     		sub	sp, sp, #28
 5131              	.LCFI31:
 5132              		.cfi_def_cfa_offset 40
 5133 0004 00AF     		add	r7, sp, #0
 5134              	.LCFI32:
 5135              		.cfi_def_cfa_register 7
 5136 0006 F860     		str	r0, [r7, #12]
 5137 0008 B960     		str	r1, [r7, #8]
 5138 000a 7A60     		str	r2, [r7, #4]
 5139 000c 3B60     		str	r3, [r7]
 884:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// r = rows and c = columns in A 
 885:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 886:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	int32 i, j;		// loop counters 
 887:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 888:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (i = 0; i < r; i++)
 5140              		.loc 1 888 0
 5141 000e 0023     		mov	r3, #0
 5142 0010 7B61     		str	r3, [r7, #20]
 5143 0012 23E0     		b	.L164
 5144              	.L167:
 889:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	{
 890:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		for (j = 0; j < c; j++)
 5145              		.loc 1 890 0
 5146 0014 0023     		mov	r3, #0
 5147 0016 3B61     		str	r3, [r7, #16]
 5148 0018 19E0     		b	.L165
 5149              	.L166:
 891:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		{
 892:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			A[i][j] *= Scalar;
 5150              		.loc 1 892 0
 5151 001a 7B69     		ldr	r3, [r7, #20]
 5152 001c 9B00     		lsl	r3, r3, #2
 5153 001e FA68     		ldr	r2, [r7, #12]
 5154 0020 D318     		add	r3, r2, r3
 5155 0022 1A68     		ldr	r2, [r3]
 5156 0024 3B69     		ldr	r3, [r7, #16]
 5157 0026 9B00     		lsl	r3, r3, #2
 5158 0028 D418     		add	r4, r2, r3
 5159 002a 7B69     		ldr	r3, [r7, #20]
 5160 002c 9B00     		lsl	r3, r3, #2
 5161 002e FA68     		ldr	r2, [r7, #12]
 5162 0030 D318     		add	r3, r2, r3
 5163 0032 1A68     		ldr	r2, [r3]
 5164 0034 3B69     		ldr	r3, [r7, #16]
 5165 0036 9B00     		lsl	r3, r3, #2
 5166 0038 D318     		add	r3, r2, r3
 5167 003a 1B68     		ldr	r3, [r3]
 5168 003c 181C     		add	r0, r3, #0
 5169 003e B968     		ldr	r1, [r7, #8]
 5170 0040 FFF7FEFF 		bl	__aeabi_fmul
 5171 0044 031C     		add	r3, r0, #0
 5172 0046 2360     		str	r3, [r4]
 890:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		for (j = 0; j < c; j++)
 5173              		.loc 1 890 0
 5174 0048 3B69     		ldr	r3, [r7, #16]
 5175 004a 0133     		add	r3, r3, #1
 5176 004c 3B61     		str	r3, [r7, #16]
 5177              	.L165:
 890:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		for (j = 0; j < c; j++)
 5178              		.loc 1 890 0 is_stmt 0
 5179 004e 3A69     		ldr	r2, [r7, #16]
 5180 0050 3B68     		ldr	r3, [r7]
 5181 0052 9A42     		cmp	r2, r3
 5182 0054 E1DB     		blt	.L166
 888:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (i = 0; i < r; i++)
 5183              		.loc 1 888 0 is_stmt 1
 5184 0056 7B69     		ldr	r3, [r7, #20]
 5185 0058 0133     		add	r3, r3, #1
 5186 005a 7B61     		str	r3, [r7, #20]
 5187              	.L164:
 888:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (i = 0; i < r; i++)
 5188              		.loc 1 888 0 is_stmt 0
 5189 005c 7A69     		ldr	r2, [r7, #20]
 5190 005e 7B68     		ldr	r3, [r7, #4]
 5191 0060 9A42     		cmp	r2, r3
 5192 0062 D7DB     		blt	.L167
 893:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		}
 894:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	}
 895:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	return;
 5193              		.loc 1 895 0 is_stmt 1
 5194 0064 C046     		mov	r8, r8
 896:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** }
 5195              		.loc 1 896 0
 5196 0066 BD46     		mov	sp, r7
 5197 0068 07B0     		add	sp, sp, #28
 5198              		@ sp needed for prologue
 5199 006a 90BD     		pop	{r4, r7, pc}
 5200              		.cfi_endproc
 5201              	.LFE11:
 5203              		.section	.rodata
 5204 01db 00       		.align	2
 5205              	.LC116:
 5206 01dc 0A526F77 		.ascii	"\012Row %d\000"
 5206      20256400 
 5207              		.align	2
 5208              	.LC118:
 5209 01e4 2531322E 		.ascii	"%12.5f\000"
 5209      356600
 5210              		.section	.text.fmatrixPrintA,"ax",%progbits
 5211              		.align	2
 5212              		.global	fmatrixPrintA
 5213              		.code	16
 5214              		.thumb_func
 5216              	fmatrixPrintA:
 5217              	.LFB12:
 897:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 898:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 899:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** // function prints the floating point matrix A between rows r1 and r2 and columns c1 and c2 inclusv
 900:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** void fmatrixPrintA(float **A, int32 r1, int32 r2, int32 c1, int32 c2)
 901:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** {
 5218              		.loc 1 901 0
 5219              		.cfi_startproc
 5220 0000 90B5     		push	{r4, r7, lr}
 5221              	.LCFI33:
 5222              		.cfi_def_cfa_offset 12
 5223              		.cfi_offset 4, -12
 5224              		.cfi_offset 7, -8
 5225              		.cfi_offset 14, -4
 5226 0002 87B0     		sub	sp, sp, #28
 5227              	.LCFI34:
 5228              		.cfi_def_cfa_offset 40
 5229 0004 00AF     		add	r7, sp, #0
 5230              	.LCFI35:
 5231              		.cfi_def_cfa_register 7
 5232 0006 F860     		str	r0, [r7, #12]
 5233 0008 B960     		str	r1, [r7, #8]
 5234 000a 7A60     		str	r2, [r7, #4]
 5235 000c 3B60     		str	r3, [r7]
 902:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	int32 i, j;		// loop counters 
 903:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 904:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (i = r1; i <= r2; i++)
 5236              		.loc 1 904 0
 5237 000e BB68     		ldr	r3, [r7, #8]
 5238 0010 7B61     		str	r3, [r7, #20]
 5239 0012 26E0     		b	.L170
 5240              	.L173:
 905:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	{
 906:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		printf("\nRow %d", i);
 5241              		.loc 1 906 0
 5242 0014 174A     		ldr	r2, .L175
 5243 0016 7B69     		ldr	r3, [r7, #20]
 5244 0018 101C     		mov	r0, r2
 5245 001a 191C     		mov	r1, r3
 5246 001c FFF7FEFF 		bl	printf
 907:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		for (j = c1; j <= c2; j++)
 5247              		.loc 1 907 0
 5248 0020 3B68     		ldr	r3, [r7]
 5249 0022 3B61     		str	r3, [r7, #16]
 5250 0024 16E0     		b	.L171
 5251              	.L172:
 908:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		{
 909:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			printf("%12.5f", (double) A[i][j]);
 5252              		.loc 1 909 0
 5253 0026 7B69     		ldr	r3, [r7, #20]
 5254 0028 9B00     		lsl	r3, r3, #2
 5255 002a FA68     		ldr	r2, [r7, #12]
 5256 002c D318     		add	r3, r2, r3
 5257 002e 1A68     		ldr	r2, [r3]
 5258 0030 3B69     		ldr	r3, [r7, #16]
 5259 0032 9B00     		lsl	r3, r3, #2
 5260 0034 D318     		add	r3, r2, r3
 5261 0036 1B68     		ldr	r3, [r3]
 5262 0038 181C     		add	r0, r3, #0
 5263 003a FFF7FEFF 		bl	__aeabi_f2d
 5264 003e 031C     		mov	r3, r0
 5265 0040 0C1C     		mov	r4, r1
 5266 0042 0D4A     		ldr	r2, .L175+4
 5267 0044 101C     		mov	r0, r2
 5268 0046 1A1C     		mov	r2, r3
 5269 0048 231C     		mov	r3, r4
 5270 004a FFF7FEFF 		bl	printf
 907:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		for (j = c1; j <= c2; j++)
 5271              		.loc 1 907 0
 5272 004e 3B69     		ldr	r3, [r7, #16]
 5273 0050 0133     		add	r3, r3, #1
 5274 0052 3B61     		str	r3, [r7, #16]
 5275              	.L171:
 907:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		for (j = c1; j <= c2; j++)
 5276              		.loc 1 907 0 is_stmt 0
 5277 0054 3A69     		ldr	r2, [r7, #16]
 5278 0056 BB6A     		ldr	r3, [r7, #40]
 5279 0058 9A42     		cmp	r2, r3
 5280 005a E4DD     		ble	.L172
 904:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (i = r1; i <= r2; i++)
 5281              		.loc 1 904 0 is_stmt 1
 5282 005c 7B69     		ldr	r3, [r7, #20]
 5283 005e 0133     		add	r3, r3, #1
 5284 0060 7B61     		str	r3, [r7, #20]
 5285              	.L170:
 904:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (i = r1; i <= r2; i++)
 5286              		.loc 1 904 0 is_stmt 0
 5287 0062 7A69     		ldr	r2, [r7, #20]
 5288 0064 7B68     		ldr	r3, [r7, #4]
 5289 0066 9A42     		cmp	r2, r3
 5290 0068 D4DD     		ble	.L173
 910:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		}
 911:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	}
 912:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	return;
 5291              		.loc 1 912 0 is_stmt 1
 5292 006a C046     		mov	r8, r8
 913:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** }
 5293              		.loc 1 913 0
 5294 006c BD46     		mov	sp, r7
 5295 006e 07B0     		add	sp, sp, #28
 5296              		@ sp needed for prologue
 5297 0070 90BD     		pop	{r4, r7, pc}
 5298              	.L176:
 5299 0072 C046     		.align	2
 5300              	.L175:
 5301 0074 DC010000 		.word	.LC116
 5302 0078 E4010000 		.word	.LC118
 5303              		.cfi_endproc
 5304              	.LFE12:
 5306              		.section	.text.f4x4matrixAeqInvSymA,"ax",%progbits
 5307              		.align	2
 5308              		.global	f4x4matrixAeqInvSymA
 5309              		.code	16
 5310              		.thumb_func
 5312              	f4x4matrixAeqInvSymA:
 5313              	.LFB13:
 914:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 915:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** // (FLOAT) function computes inverse of a symmetric 4x4 matrix A
 916:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** void f4x4matrixAeqInvSymA(float **A)
 917:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** {
 5314              		.loc 1 917 0
 5315              		.cfi_startproc
 5316 0000 B0B5     		push	{r4, r5, r7, lr}
 5317              	.LCFI36:
 5318              		.cfi_def_cfa_offset 16
 5319              		.cfi_offset 4, -16
 5320              		.cfi_offset 5, -12
 5321              		.cfi_offset 7, -8
 5322              		.cfi_offset 14, -4
 5323 0002 86B0     		sub	sp, sp, #24
 5324              	.LCFI37:
 5325              		.cfi_def_cfa_offset 40
 5326 0004 00AF     		add	r7, sp, #0
 5327              	.LCFI38:
 5328              		.cfi_def_cfa_register 7
 5329 0006 7860     		str	r0, [r7, #4]
 918:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// global arrays used: ftmpA4x1, ftmpA4x4
 919:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 920:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// local variables
 921:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	int32 i, j, k;		// loop counters
 922:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	float fdet;			// matrix determinant
 923:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 924:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// set tmpA4x1 to the eigenvalues and tmpA4x4 to the eigenvectors of A
 925:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// function eigencompute does not use any additional global arrays
 926:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	eigencompute(A, 4, ftmpA4x1, ftmpA4x4);
 5330              		.loc 1 926 0
 5331 0008 7968     		ldr	r1, [r7, #4]
 5332 000a 524A     		ldr	r2, .L195
 5333 000c 524B     		ldr	r3, .L195+4
 5334 000e 081C     		mov	r0, r1
 5335 0010 0421     		mov	r1, #4
 5336 0012 FFF7FEFF 		bl	eigencompute
 927:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 928:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// check if the matrix A is singular by computing its determinant from the product of its eigenval
 929:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	fdet = 1.0F;
 5337              		.loc 1 929 0
 5338 0016 FE23     		mov	r3, #254
 5339 0018 9B05     		lsl	r3, r3, #22
 5340 001a BB60     		str	r3, [r7, #8]
 930:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (i = 0; i < 4; i++)
 5341              		.loc 1 930 0
 5342 001c 0023     		mov	r3, #0
 5343 001e 7B61     		str	r3, [r7, #20]
 5344 0020 0DE0     		b	.L178
 5345              	.L179:
 931:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		fdet *= ftmpA4x1[i][0];
 5346              		.loc 1 931 0
 5347 0022 4C4B     		ldr	r3, .L195
 5348 0024 7A69     		ldr	r2, [r7, #20]
 5349 0026 9200     		lsl	r2, r2, #2
 5350 0028 D358     		ldr	r3, [r2, r3]
 5351 002a 1B68     		ldr	r3, [r3]
 5352 002c B868     		ldr	r0, [r7, #8]
 5353 002e 191C     		add	r1, r3, #0
 5354 0030 FFF7FEFF 		bl	__aeabi_fmul
 5355 0034 031C     		add	r3, r0, #0
 5356 0036 BB60     		str	r3, [r7, #8]
 930:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (i = 0; i < 4; i++)
 5357              		.loc 1 930 0
 5358 0038 7B69     		ldr	r3, [r7, #20]
 5359 003a 0133     		add	r3, r3, #1
 5360 003c 7B61     		str	r3, [r7, #20]
 5361              	.L178:
 930:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (i = 0; i < 4; i++)
 5362              		.loc 1 930 0 is_stmt 0
 5363 003e 7B69     		ldr	r3, [r7, #20]
 5364 0040 032B     		cmp	r3, #3
 5365 0042 EEDD     		ble	.L179
 932:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 933:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// compute the inverse if the determinant is non-zero
 934:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	if (fdet != 0.0F)
 5366              		.loc 1 934 0 is_stmt 1
 5367 0044 B868     		ldr	r0, [r7, #8]
 5368 0046 0021     		mov	r1, #0
 5369 0048 FFF7FEFF 		bl	__aeabi_fcmpeq
 5370 004c 031C     		mov	r3, r0
 5371 004e 002B     		cmp	r3, #0
 5372 0050 00D0     		beq	.LCB4848
 5373 0052 75E0     		b	.L193	@long jump
 5374              	.LCB4848:
 5375              	.L192:
 935:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	{
 936:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		// take the reciprocal of the eigenvalues
 937:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		for (i = 0; i < 4; i++)
 5376              		.loc 1 937 0
 5377 0054 0023     		mov	r3, #0
 5378 0056 7B61     		str	r3, [r7, #20]
 5379 0058 12E0     		b	.L182
 5380              	.L183:
 938:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			ftmpA4x1[i][0] = 1.0F / ftmpA4x1[i][0];
 5381              		.loc 1 938 0
 5382 005a 3E4B     		ldr	r3, .L195
 5383 005c 7A69     		ldr	r2, [r7, #20]
 5384 005e 9200     		lsl	r2, r2, #2
 5385 0060 D458     		ldr	r4, [r2, r3]
 5386 0062 3C4B     		ldr	r3, .L195
 5387 0064 7A69     		ldr	r2, [r7, #20]
 5388 0066 9200     		lsl	r2, r2, #2
 5389 0068 D358     		ldr	r3, [r2, r3]
 5390 006a 1B68     		ldr	r3, [r3]
 5391 006c FE20     		mov	r0, #254
 5392 006e 8005     		lsl	r0, r0, #22
 5393 0070 191C     		add	r1, r3, #0
 5394 0072 FFF7FEFF 		bl	__aeabi_fdiv
 5395 0076 031C     		add	r3, r0, #0
 5396 0078 2360     		str	r3, [r4]
 937:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		for (i = 0; i < 4; i++)
 5397              		.loc 1 937 0
 5398 007a 7B69     		ldr	r3, [r7, #20]
 5399 007c 0133     		add	r3, r3, #1
 5400 007e 7B61     		str	r3, [r7, #20]
 5401              	.L182:
 937:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		for (i = 0; i < 4; i++)
 5402              		.loc 1 937 0 is_stmt 0
 5403 0080 7B69     		ldr	r3, [r7, #20]
 5404 0082 032B     		cmp	r3, #3
 5405 0084 E9DD     		ble	.L183
 939:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 940:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		// set A to be eigenvectors . diag(1.0F / eigenvalues) . eigenvectors^T
 941:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		for (i = 0; i < 4; i++) // loop over rows i
 5406              		.loc 1 941 0 is_stmt 1
 5407 0086 0023     		mov	r3, #0
 5408 0088 7B61     		str	r3, [r7, #20]
 5409 008a 55E0     		b	.L184
 5410              	.L189:
 942:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		{
 943:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			for (j = 0; j < 4; j++) // loop over columns j
 5411              		.loc 1 943 0
 5412 008c 0023     		mov	r3, #0
 5413 008e 3B61     		str	r3, [r7, #16]
 5414 0090 4CE0     		b	.L185
 5415              	.L188:
 944:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			{
 945:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 				A[i][j] = 0.0F;
 5416              		.loc 1 945 0
 5417 0092 7B69     		ldr	r3, [r7, #20]
 5418 0094 9B00     		lsl	r3, r3, #2
 5419 0096 7A68     		ldr	r2, [r7, #4]
 5420 0098 D318     		add	r3, r2, r3
 5421 009a 1A68     		ldr	r2, [r3]
 5422 009c 3B69     		ldr	r3, [r7, #16]
 5423 009e 9B00     		lsl	r3, r3, #2
 5424 00a0 D318     		add	r3, r2, r3
 5425 00a2 0022     		mov	r2, #0
 5426 00a4 1A60     		str	r2, [r3]
 946:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 				for (k = 0; k < 4; k++)
 5427              		.loc 1 946 0
 5428 00a6 0023     		mov	r3, #0
 5429 00a8 FB60     		str	r3, [r7, #12]
 5430 00aa 39E0     		b	.L186
 5431              	.L187:
 947:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 				{
 948:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 					A[i][j] += ftmpA4x4[i][k] * ftmpA4x1[k][0] * ftmpA4x4[j][k];
 5432              		.loc 1 948 0
 5433 00ac 7B69     		ldr	r3, [r7, #20]
 5434 00ae 9B00     		lsl	r3, r3, #2
 5435 00b0 7A68     		ldr	r2, [r7, #4]
 5436 00b2 D318     		add	r3, r2, r3
 5437 00b4 1A68     		ldr	r2, [r3]
 5438 00b6 3B69     		ldr	r3, [r7, #16]
 5439 00b8 9B00     		lsl	r3, r3, #2
 5440 00ba D418     		add	r4, r2, r3
 5441 00bc 7B69     		ldr	r3, [r7, #20]
 5442 00be 9B00     		lsl	r3, r3, #2
 5443 00c0 7A68     		ldr	r2, [r7, #4]
 5444 00c2 D318     		add	r3, r2, r3
 5445 00c4 1A68     		ldr	r2, [r3]
 5446 00c6 3B69     		ldr	r3, [r7, #16]
 5447 00c8 9B00     		lsl	r3, r3, #2
 5448 00ca D318     		add	r3, r2, r3
 5449 00cc 1D68     		ldr	r5, [r3]
 5450 00ce 224B     		ldr	r3, .L195+4
 5451 00d0 7A69     		ldr	r2, [r7, #20]
 5452 00d2 9200     		lsl	r2, r2, #2
 5453 00d4 D258     		ldr	r2, [r2, r3]
 5454 00d6 FB68     		ldr	r3, [r7, #12]
 5455 00d8 9B00     		lsl	r3, r3, #2
 5456 00da D318     		add	r3, r2, r3
 5457 00dc 1A68     		ldr	r2, [r3]
 5458 00de 1D4B     		ldr	r3, .L195
 5459 00e0 F968     		ldr	r1, [r7, #12]
 5460 00e2 8900     		lsl	r1, r1, #2
 5461 00e4 CB58     		ldr	r3, [r1, r3]
 5462 00e6 1B68     		ldr	r3, [r3]
 5463 00e8 101C     		add	r0, r2, #0
 5464 00ea 191C     		add	r1, r3, #0
 5465 00ec FFF7FEFF 		bl	__aeabi_fmul
 5466 00f0 031C     		add	r3, r0, #0
 5467 00f2 1A1C     		add	r2, r3, #0
 5468 00f4 184B     		ldr	r3, .L195+4
 5469 00f6 3969     		ldr	r1, [r7, #16]
 5470 00f8 8900     		lsl	r1, r1, #2
 5471 00fa C958     		ldr	r1, [r1, r3]
 5472 00fc FB68     		ldr	r3, [r7, #12]
 5473 00fe 9B00     		lsl	r3, r3, #2
 5474 0100 CB18     		add	r3, r1, r3
 5475 0102 1B68     		ldr	r3, [r3]
 5476 0104 101C     		add	r0, r2, #0
 5477 0106 191C     		add	r1, r3, #0
 5478 0108 FFF7FEFF 		bl	__aeabi_fmul
 5479 010c 031C     		add	r3, r0, #0
 5480 010e 281C     		add	r0, r5, #0
 5481 0110 191C     		add	r1, r3, #0
 5482 0112 FFF7FEFF 		bl	__aeabi_fadd
 5483 0116 031C     		add	r3, r0, #0
 5484 0118 2360     		str	r3, [r4]
 946:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 				for (k = 0; k < 4; k++)
 5485              		.loc 1 946 0
 5486 011a FB68     		ldr	r3, [r7, #12]
 5487 011c 0133     		add	r3, r3, #1
 5488 011e FB60     		str	r3, [r7, #12]
 5489              	.L186:
 946:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 				for (k = 0; k < 4; k++)
 5490              		.loc 1 946 0 is_stmt 0
 5491 0120 FB68     		ldr	r3, [r7, #12]
 5492 0122 032B     		cmp	r3, #3
 5493 0124 C2DD     		ble	.L187
 943:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			for (j = 0; j < 4; j++) // loop over columns j
 5494              		.loc 1 943 0 is_stmt 1
 5495 0126 3B69     		ldr	r3, [r7, #16]
 5496 0128 0133     		add	r3, r3, #1
 5497 012a 3B61     		str	r3, [r7, #16]
 5498              	.L185:
 943:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			for (j = 0; j < 4; j++) // loop over columns j
 5499              		.loc 1 943 0 is_stmt 0
 5500 012c 3B69     		ldr	r3, [r7, #16]
 5501 012e 032B     		cmp	r3, #3
 5502 0130 AFDD     		ble	.L188
 941:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		for (i = 0; i < 4; i++) // loop over rows i
 5503              		.loc 1 941 0 is_stmt 1
 5504 0132 7B69     		ldr	r3, [r7, #20]
 5505 0134 0133     		add	r3, r3, #1
 5506 0136 7B61     		str	r3, [r7, #20]
 5507              	.L184:
 941:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		for (i = 0; i < 4; i++) // loop over rows i
 5508              		.loc 1 941 0 is_stmt 0
 5509 0138 7B69     		ldr	r3, [r7, #20]
 5510 013a 032B     		cmp	r3, #3
 5511 013c A6DD     		ble	.L189
 941:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		for (i = 0; i < 4; i++) // loop over rows i
 5512              		.loc 1 941 0
 5513 013e 05E0     		b	.L194
 5514              	.L193:
 949:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 				}
 950:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			}
 951:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		}
 952:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	}
 953:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	else
 954:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	{
 955:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		// the matrix A is singular so return the identity matrix
 956:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		fmatrixAeqI(A, 4);
 5515              		.loc 1 956 0 is_stmt 1
 5516 0140 7B68     		ldr	r3, [r7, #4]
 5517 0142 181C     		mov	r0, r3
 5518 0144 0421     		mov	r1, #4
 5519 0146 FFF7FEFF 		bl	fmatrixAeqI
 957:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	}
 958:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 959:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	return;
 5520              		.loc 1 959 0
 5521 014a 00E0     		b	.L177
 5522              	.L194:
 5523 014c C046     		mov	r8, r8
 5524              	.L177:
 960:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** }
 5525              		.loc 1 960 0
 5526 014e BD46     		mov	sp, r7
 5527 0150 06B0     		add	sp, sp, #24
 5528              		@ sp needed for prologue
 5529 0152 B0BD     		pop	{r4, r5, r7, pc}
 5530              	.L196:
 5531              		.align	2
 5532              	.L195:
 5533 0154 00000000 		.word	ftmpA4x1
 5534 0158 00000000 		.word	ftmpA4x4
 5535              		.cfi_endproc
 5536              	.LFE13:
 5538              		.section	.text.fmatrixAeqBxC,"ax",%progbits
 5539              		.align	2
 5540              		.global	fmatrixAeqBxC
 5541              		.code	16
 5542              		.thumb_func
 5544              	fmatrixAeqBxC:
 5545              	.LFB14:
 961:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 962:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** // function calculates the matrix product A = B x C 
 963:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** void fmatrixAeqBxC(float **A, float **B, float **C, int32 rB, int32 cBrC, int32 cC)
 964:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** {
 5546              		.loc 1 964 0
 5547              		.cfi_startproc
 5548 0000 B0B5     		push	{r4, r5, r7, lr}
 5549              	.LCFI39:
 5550              		.cfi_def_cfa_offset 16
 5551              		.cfi_offset 4, -16
 5552              		.cfi_offset 5, -12
 5553              		.cfi_offset 7, -8
 5554              		.cfi_offset 14, -4
 5555 0002 88B0     		sub	sp, sp, #32
 5556              	.LCFI40:
 5557              		.cfi_def_cfa_offset 48
 5558 0004 00AF     		add	r7, sp, #0
 5559              	.LCFI41:
 5560              		.cfi_def_cfa_register 7
 5561 0006 F860     		str	r0, [r7, #12]
 5562 0008 B960     		str	r1, [r7, #8]
 5563 000a 7A60     		str	r2, [r7, #4]
 5564 000c 3B60     		str	r3, [r7]
 965:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// rB = rows in B 
 966:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// cBrC = columns in B = rows in C 
 967:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// cC = columns in C 
 968:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// A has dimension rB rows x cC columns 
 969:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 970:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	int32 i, j, k;	// counters 
 971:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 972:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (i = 0; i < rB; i++)
 5565              		.loc 1 972 0
 5566 000e 0023     		mov	r3, #0
 5567 0010 FB61     		str	r3, [r7, #28]
 5568 0012 4EE0     		b	.L198
 5569              	.L203:
 973:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	{
 974:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		for (j = 0; j < cC; j++)
 5570              		.loc 1 974 0
 5571 0014 0023     		mov	r3, #0
 5572 0016 BB61     		str	r3, [r7, #24]
 5573 0018 44E0     		b	.L199
 5574              	.L202:
 975:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		{
 976:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			A[i][j] = 0.0F;
 5575              		.loc 1 976 0
 5576 001a FB69     		ldr	r3, [r7, #28]
 5577 001c 9B00     		lsl	r3, r3, #2
 5578 001e FA68     		ldr	r2, [r7, #12]
 5579 0020 D318     		add	r3, r2, r3
 5580 0022 1A68     		ldr	r2, [r3]
 5581 0024 BB69     		ldr	r3, [r7, #24]
 5582 0026 9B00     		lsl	r3, r3, #2
 5583 0028 D318     		add	r3, r2, r3
 5584 002a 0022     		mov	r2, #0
 5585 002c 1A60     		str	r2, [r3]
 977:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			for (k = 0; k < cBrC; k++)
 5586              		.loc 1 977 0
 5587 002e 0023     		mov	r3, #0
 5588 0030 7B61     		str	r3, [r7, #20]
 5589 0032 30E0     		b	.L200
 5590              	.L201:
 978:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 				A[i][j] += B[i][k] * C[k][j]; 
 5591              		.loc 1 978 0
 5592 0034 FB69     		ldr	r3, [r7, #28]
 5593 0036 9B00     		lsl	r3, r3, #2
 5594 0038 FA68     		ldr	r2, [r7, #12]
 5595 003a D318     		add	r3, r2, r3
 5596 003c 1A68     		ldr	r2, [r3]
 5597 003e BB69     		ldr	r3, [r7, #24]
 5598 0040 9B00     		lsl	r3, r3, #2
 5599 0042 D418     		add	r4, r2, r3
 5600 0044 FB69     		ldr	r3, [r7, #28]
 5601 0046 9B00     		lsl	r3, r3, #2
 5602 0048 FA68     		ldr	r2, [r7, #12]
 5603 004a D318     		add	r3, r2, r3
 5604 004c 1A68     		ldr	r2, [r3]
 5605 004e BB69     		ldr	r3, [r7, #24]
 5606 0050 9B00     		lsl	r3, r3, #2
 5607 0052 D318     		add	r3, r2, r3
 5608 0054 1D68     		ldr	r5, [r3]
 5609 0056 FB69     		ldr	r3, [r7, #28]
 5610 0058 9B00     		lsl	r3, r3, #2
 5611 005a BA68     		ldr	r2, [r7, #8]
 5612 005c D318     		add	r3, r2, r3
 5613 005e 1A68     		ldr	r2, [r3]
 5614 0060 7B69     		ldr	r3, [r7, #20]
 5615 0062 9B00     		lsl	r3, r3, #2
 5616 0064 D318     		add	r3, r2, r3
 5617 0066 1A68     		ldr	r2, [r3]
 5618 0068 7B69     		ldr	r3, [r7, #20]
 5619 006a 9B00     		lsl	r3, r3, #2
 5620 006c 7968     		ldr	r1, [r7, #4]
 5621 006e CB18     		add	r3, r1, r3
 5622 0070 1968     		ldr	r1, [r3]
 5623 0072 BB69     		ldr	r3, [r7, #24]
 5624 0074 9B00     		lsl	r3, r3, #2
 5625 0076 CB18     		add	r3, r1, r3
 5626 0078 1B68     		ldr	r3, [r3]
 5627 007a 101C     		add	r0, r2, #0
 5628 007c 191C     		add	r1, r3, #0
 5629 007e FFF7FEFF 		bl	__aeabi_fmul
 5630 0082 031C     		add	r3, r0, #0
 5631 0084 281C     		add	r0, r5, #0
 5632 0086 191C     		add	r1, r3, #0
 5633 0088 FFF7FEFF 		bl	__aeabi_fadd
 5634 008c 031C     		add	r3, r0, #0
 5635 008e 2360     		str	r3, [r4]
 977:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			for (k = 0; k < cBrC; k++)
 5636              		.loc 1 977 0
 5637 0090 7B69     		ldr	r3, [r7, #20]
 5638 0092 0133     		add	r3, r3, #1
 5639 0094 7B61     		str	r3, [r7, #20]
 5640              	.L200:
 977:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			for (k = 0; k < cBrC; k++)
 5641              		.loc 1 977 0 is_stmt 0
 5642 0096 7A69     		ldr	r2, [r7, #20]
 5643 0098 3B6B     		ldr	r3, [r7, #48]
 5644 009a 9A42     		cmp	r2, r3
 5645 009c CADB     		blt	.L201
 974:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		for (j = 0; j < cC; j++)
 5646              		.loc 1 974 0 is_stmt 1
 5647 009e BB69     		ldr	r3, [r7, #24]
 5648 00a0 0133     		add	r3, r3, #1
 5649 00a2 BB61     		str	r3, [r7, #24]
 5650              	.L199:
 974:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		for (j = 0; j < cC; j++)
 5651              		.loc 1 974 0 is_stmt 0
 5652 00a4 BA69     		ldr	r2, [r7, #24]
 5653 00a6 7B6B     		ldr	r3, [r7, #52]
 5654 00a8 9A42     		cmp	r2, r3
 5655 00aa B6DB     		blt	.L202
 972:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (i = 0; i < rB; i++)
 5656              		.loc 1 972 0 is_stmt 1
 5657 00ac FB69     		ldr	r3, [r7, #28]
 5658 00ae 0133     		add	r3, r3, #1
 5659 00b0 FB61     		str	r3, [r7, #28]
 5660              	.L198:
 972:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (i = 0; i < rB; i++)
 5661              		.loc 1 972 0 is_stmt 0
 5662 00b2 FA69     		ldr	r2, [r7, #28]
 5663 00b4 3B68     		ldr	r3, [r7]
 5664 00b6 9A42     		cmp	r2, r3
 5665 00b8 ACDB     		blt	.L203
 979:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		}
 980:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	}
 981:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	return;
 5666              		.loc 1 981 0 is_stmt 1
 5667 00ba C046     		mov	r8, r8
 982:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** }
 5668              		.loc 1 982 0
 5669 00bc BD46     		mov	sp, r7
 5670 00be 08B0     		add	sp, sp, #32
 5671              		@ sp needed for prologue
 5672 00c0 B0BD     		pop	{r4, r5, r7, pc}
 5673              		.cfi_endproc
 5674              	.LFE14:
 5676 00c2 C046     		.section	.text.fmatrixAeqI,"ax",%progbits
 5677              		.align	2
 5678              		.global	fmatrixAeqI
 5679              		.code	16
 5680              		.thumb_func
 5682              	fmatrixAeqI:
 5683              	.LFB15:
 983:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 984:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** // function sets the matrix A to the identity matrix 
 985:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** void fmatrixAeqI(float **A, int32 rc)
 986:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** {
 5684              		.loc 1 986 0
 5685              		.cfi_startproc
 5686 0000 80B5     		push	{r7, lr}
 5687              	.LCFI42:
 5688              		.cfi_def_cfa_offset 8
 5689              		.cfi_offset 7, -8
 5690              		.cfi_offset 14, -4
 5691 0002 84B0     		sub	sp, sp, #16
 5692              	.LCFI43:
 5693              		.cfi_def_cfa_offset 24
 5694 0004 00AF     		add	r7, sp, #0
 5695              	.LCFI44:
 5696              		.cfi_def_cfa_register 7
 5697 0006 7860     		str	r0, [r7, #4]
 5698 0008 3960     		str	r1, [r7]
 987:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// rc = rows and columns in A 
 988:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 989:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	int32 i, j;		// loop counters 
 990:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
 991:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (i = 0; i < rc; i++)
 5699              		.loc 1 991 0
 5700 000a 0023     		mov	r3, #0
 5701 000c FB60     		str	r3, [r7, #12]
 5702 000e 21E0     		b	.L206
 5703              	.L209:
 992:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	{
 993:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		for (j = 0; j < rc; j++)
 5704              		.loc 1 993 0
 5705 0010 0023     		mov	r3, #0
 5706 0012 BB60     		str	r3, [r7, #8]
 5707 0014 0CE0     		b	.L207
 5708              	.L208:
 994:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		{
 995:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			A[i][j] = 0.0F;
 5709              		.loc 1 995 0
 5710 0016 FB68     		ldr	r3, [r7, #12]
 5711 0018 9B00     		lsl	r3, r3, #2
 5712 001a 7A68     		ldr	r2, [r7, #4]
 5713 001c D318     		add	r3, r2, r3
 5714 001e 1A68     		ldr	r2, [r3]
 5715 0020 BB68     		ldr	r3, [r7, #8]
 5716 0022 9B00     		lsl	r3, r3, #2
 5717 0024 D318     		add	r3, r2, r3
 5718 0026 0022     		mov	r2, #0
 5719 0028 1A60     		str	r2, [r3]
 993:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		for (j = 0; j < rc; j++)
 5720              		.loc 1 993 0
 5721 002a BB68     		ldr	r3, [r7, #8]
 5722 002c 0133     		add	r3, r3, #1
 5723 002e BB60     		str	r3, [r7, #8]
 5724              	.L207:
 993:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		for (j = 0; j < rc; j++)
 5725              		.loc 1 993 0 is_stmt 0
 5726 0030 BA68     		ldr	r2, [r7, #8]
 5727 0032 3B68     		ldr	r3, [r7]
 5728 0034 9A42     		cmp	r2, r3
 5729 0036 EEDB     		blt	.L208
 996:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		}
 997:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		A[i][i] = 1.0F;
 5730              		.loc 1 997 0 is_stmt 1
 5731 0038 FB68     		ldr	r3, [r7, #12]
 5732 003a 9B00     		lsl	r3, r3, #2
 5733 003c 7A68     		ldr	r2, [r7, #4]
 5734 003e D318     		add	r3, r2, r3
 5735 0040 1A68     		ldr	r2, [r3]
 5736 0042 FB68     		ldr	r3, [r7, #12]
 5737 0044 9B00     		lsl	r3, r3, #2
 5738 0046 D318     		add	r3, r2, r3
 5739 0048 FE22     		mov	r2, #254
 5740 004a 9205     		lsl	r2, r2, #22
 5741 004c 1A60     		str	r2, [r3]
 991:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (i = 0; i < rc; i++)
 5742              		.loc 1 991 0
 5743 004e FB68     		ldr	r3, [r7, #12]
 5744 0050 0133     		add	r3, r3, #1
 5745 0052 FB60     		str	r3, [r7, #12]
 5746              	.L206:
 991:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (i = 0; i < rc; i++)
 5747              		.loc 1 991 0 is_stmt 0
 5748 0054 FA68     		ldr	r2, [r7, #12]
 5749 0056 3B68     		ldr	r3, [r7]
 5750 0058 9A42     		cmp	r2, r3
 5751 005a D9DB     		blt	.L209
 998:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	}
 999:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	return;
 5752              		.loc 1 999 0 is_stmt 1
 5753 005c C046     		mov	r8, r8
1000:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** }
 5754              		.loc 1 1000 0
 5755 005e BD46     		mov	sp, r7
 5756 0060 04B0     		add	sp, sp, #16
 5757              		@ sp needed for prologue
 5758 0062 80BD     		pop	{r7, pc}
 5759              		.cfi_endproc
 5760              	.LFE15:
 5762              		.section	.text.fLPFOrientationMatrix,"ax",%progbits
 5763              		.align	2
 5764              		.global	fLPFOrientationMatrix
 5765              		.code	16
 5766              		.thumb_func
 5768              	fLPFOrientationMatrix:
 5769              	.LFB16:
1001:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1002:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** void fLPFOrientationMatrix()
1003:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** {
 5770              		.loc 1 1003 0
 5771              		.cfi_startproc
 5772 0000 90B5     		push	{r4, r7, lr}
 5773              	.LCFI45:
 5774              		.cfi_def_cfa_offset 12
 5775              		.cfi_offset 4, -12
 5776              		.cfi_offset 7, -8
 5777              		.cfi_offset 14, -4
 5778 0002 85B0     		sub	sp, sp, #20
 5779              	.LCFI46:
 5780              		.cfi_def_cfa_offset 32
 5781 0004 02AF     		add	r7, sp, #8
 5782              	.LCFI47:
 5783              		.cfi_def_cfa 7, 24
1004:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// function is called after eCompass and will always have a valid orientation matrix fR6DOFn 
1005:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// function low pass filters the orientation matrix fLPR6DOFn and updates fLPR6DOFnm1 
1006:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// low roll (phi), pitch (the), yaw (psi) and compass (rho) are computed from the low pass matrix 
1007:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// computes the low pass filtered orientation quaternion fqLPR6DOFn 
1008:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// and the inclination angle delta is low pass filtered 
1009:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1010:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// local variables 
1011:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	float ftmpAngle;			// scratch variable 
1012:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1013:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// on first pass initialise low pass filtered rotation matrix to current 
1014:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	if (loopcounter == 0)
 5784              		.loc 1 1014 0
 5785 0006 524B     		ldr	r3, .L221
 5786 0008 1B68     		ldr	r3, [r3]
 5787 000a 002B     		cmp	r3, #0
 5788 000c 0BD1     		bne	.L212
1015:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	{
1016:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		fmatrixAeqB(fLPR6DOFn, fR6DOFn, 3, 3);
 5789              		.loc 1 1016 0
 5790 000e 514A     		ldr	r2, .L221+4
 5791 0010 514B     		ldr	r3, .L221+8
 5792 0012 101C     		mov	r0, r2
 5793 0014 191C     		mov	r1, r3
 5794 0016 0322     		mov	r2, #3
 5795 0018 0323     		mov	r3, #3
 5796 001a FFF7FEFF 		bl	fmatrixAeqB
1017:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		fLPdelta6DOF = fdelta6DOF;
 5797              		.loc 1 1017 0
 5798 001e 4F4B     		ldr	r3, .L221+12
 5799 0020 1A68     		ldr	r2, [r3]
 5800 0022 4F4B     		ldr	r3, .L221+16
 5801 0024 1A60     		str	r2, [r3]
 5802              	.L212:
1018:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	}
1019:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1020:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// shuffle low pass filtered matrix down the delay line 
1021:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	fmatrixAeqB(fLPR6DOFnm1, fLPR6DOFn, 3, 3);
 5803              		.loc 1 1021 0
 5804 0026 4F4A     		ldr	r2, .L221+20
 5805 0028 4A4B     		ldr	r3, .L221+4
 5806 002a 101C     		mov	r0, r2
 5807 002c 191C     		mov	r1, r3
 5808 002e 0322     		mov	r2, #3
 5809 0030 0323     		mov	r3, #3
 5810 0032 FFF7FEFF 		bl	fmatrixAeqB
1022:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1023:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// exponentially filter the orientation matrix fLPR6DOFn towards fR6DOFn 
1024:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// set ftmpA3x3 to dR = R6[n].LPR6[n]^T 
1025:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	fmatrixAeqBxTrC(ftmpA3x3, fR6DOFn, fLPR6DOFn, 3, 3, 3);
 5811              		.loc 1 1025 0
 5812 0036 4C49     		ldr	r1, .L221+24
 5813 0038 474A     		ldr	r2, .L221+8
 5814 003a 464B     		ldr	r3, .L221+4
 5815 003c 0320     		mov	r0, #3
 5816 003e 0090     		str	r0, [sp]
 5817 0040 0320     		mov	r0, #3
 5818 0042 0190     		str	r0, [sp, #4]
 5819 0044 081C     		mov	r0, r1
 5820 0046 111C     		mov	r1, r2
 5821 0048 1A1C     		mov	r2, r3
 5822 004a 0323     		mov	r3, #3
 5823 004c FFF7FEFF 		bl	fmatrixAeqBxTrC
1026:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// set ftmpA3x1 to the rotation axis and ftmp to the angle change 
1027:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	ftmpAngle = 0.0F; // to avoid compiler error
 5824              		.loc 1 1027 0
 5825 0050 0023     		mov	r3, #0
 5826 0052 7B60     		str	r3, [r7, #4]
1028:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	fAxisAngleDegFromRotationMatrix(ftmpA3x3, ftmpA3x1, &ftmpAngle);
 5827              		.loc 1 1028 0
 5828 0054 4449     		ldr	r1, .L221+24
 5829 0056 454A     		ldr	r2, .L221+28
 5830 0058 3B1D     		add	r3, r7, #4
 5831 005a 081C     		mov	r0, r1
 5832 005c 111C     		mov	r1, r2
 5833 005e 1A1C     		mov	r2, r3
 5834 0060 FFF7FEFF 		bl	fAxisAngleDegFromRotationMatrix
1029:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// set ftmpA3x3 to the matrix required to exponentially converge the low pass matrix to current 
1030:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	fRotationMatrixFromAxisAngleDeg(ftmpA3x3, ftmpA3x1, ftmpAngle * ANGLE_LPF_FPU);
 5835              		.loc 1 1030 0
 5836 0064 7B68     		ldr	r3, [r7, #4]
 5837 0066 181C     		add	r0, r3, #0
 5838 0068 F621     		mov	r1, #246
 5839 006a 8905     		lsl	r1, r1, #22
 5840 006c FFF7FEFF 		bl	__aeabi_fmul
 5841 0070 031C     		add	r3, r0, #0
 5842 0072 3D49     		ldr	r1, .L221+24
 5843 0074 3D4A     		ldr	r2, .L221+28
 5844 0076 081C     		mov	r0, r1
 5845 0078 111C     		mov	r1, r2
 5846 007a 1A1C     		add	r2, r3, #0
 5847 007c FFF7FEFF 		bl	fRotationMatrixFromAxisAngleDeg
1031:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// rotate the low pass filtered orientation matrix fLPR6DOFn by the required amount 
1032:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	fmatrixAeqBxC(ftmpB3x3, ftmpA3x3, fLPR6DOFn, 3,  3, 3);
 5848              		.loc 1 1032 0
 5849 0080 3B49     		ldr	r1, .L221+32
 5850 0082 394A     		ldr	r2, .L221+24
 5851 0084 334B     		ldr	r3, .L221+4
 5852 0086 0320     		mov	r0, #3
 5853 0088 0090     		str	r0, [sp]
 5854 008a 0320     		mov	r0, #3
 5855 008c 0190     		str	r0, [sp, #4]
 5856 008e 081C     		mov	r0, r1
 5857 0090 111C     		mov	r1, r2
 5858 0092 1A1C     		mov	r2, r3
 5859 0094 0323     		mov	r3, #3
 5860 0096 FFF7FEFF 		bl	fmatrixAeqBxC
1033:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	fmatrixAeqB(fLPR6DOFn, ftmpB3x3, 3, 3);
 5861              		.loc 1 1033 0
 5862 009a 2E4A     		ldr	r2, .L221+4
 5863 009c 344B     		ldr	r3, .L221+32
 5864 009e 101C     		mov	r0, r2
 5865 00a0 191C     		mov	r1, r3
 5866 00a2 0322     		mov	r2, #3
 5867 00a4 0323     		mov	r3, #3
 5868 00a6 FFF7FEFF 		bl	fmatrixAeqB
1034:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1035:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// calculate the low pass quaternion from the low pass filtered rotation matrix 
1036:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	//fQuaternionFromRotationMatrix(fLPR6DOFn, &fqLPR6DOFn);
1037:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1038:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// calculate the low pass filtered angles from the low pass filtered orientation matrix 
1039:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	if (COORDSYSTEM == NED) // NED
 5869              		.loc 1 1039 0
 5870 00aa 324B     		ldr	r3, .L221+36
 5871 00ac 1B68     		ldr	r3, [r3]
 5872 00ae 002B     		cmp	r3, #0
 5873 00b0 10D1     		bne	.L213
1040:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	{
1041:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		// get the low pass filtered angles 
1042:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		fNEDAnglesDegFromRotationMatrix(fLPR6DOFn, &fLPPhi6DOF, &fLPThe6DOF, &fLPPsi6DOF, &fLPRho6DOF);
 5874              		.loc 1 1042 0
 5875 00b2 2848     		ldr	r0, .L221+4
 5876 00b4 3049     		ldr	r1, .L221+40
 5877 00b6 314A     		ldr	r2, .L221+44
 5878 00b8 314B     		ldr	r3, .L221+48
 5879 00ba 324C     		ldr	r4, .L221+52
 5880 00bc 0094     		str	r4, [sp]
 5881 00be FFF7FEFF 		bl	fNEDAnglesDegFromRotationMatrix
1043:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		// recompute the matrix from the angles to stop error propagation 
1044:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		fNEDRotationMatrixFromAnglesDeg(fLPR6DOFn, fLPPhi6DOF, fLPThe6DOF, fLPPsi6DOF);
 5882              		.loc 1 1044 0
 5883 00c2 2D4B     		ldr	r3, .L221+40
 5884 00c4 1968     		ldr	r1, [r3]
 5885 00c6 2D4B     		ldr	r3, .L221+44
 5886 00c8 1A68     		ldr	r2, [r3]
 5887 00ca 2D4B     		ldr	r3, .L221+48
 5888 00cc 1B68     		ldr	r3, [r3]
 5889 00ce 2148     		ldr	r0, .L221+4
 5890 00d0 FFF7FEFF 		bl	fNEDRotationMatrixFromAnglesDeg
 5891              	.L213:
1045:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	}
1046:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** //	else if (COORDSYSTEM == ANDROID) // Android
1047:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** //	{
1048:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** //		// get the low pass filtered angles 
1049:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** //		fAndroidAnglesDegFromRotationMatrix(fLPR6DOFn, &fLPPhi6DOF, &fLPThe6DOF, &fLPPsi6DOF, &fLPRho6D
1050:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** //		// recompute the matrix from the angles to stop error propagation 
1051:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** //		fAndroidRotationMatrixFromAnglesDeg(fLPR6DOFn, fLPPhi6DOF, fLPThe6DOF, fLPPsi6DOF);
1052:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** //	}
1053:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** //	else // Windows 8 
1054:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** //	{
1055:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** //		// get the low pass filtered angles 
1056:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** //		fWin8AnglesDegFromRotationMatrix(fLPR6DOFn, &fLPPhi6DOF, &fLPThe6DOF, &fLPPsi6DOF, &fLPRho6DOF)
1057:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** //		// recompute the matrix from the angles to stop error propagation 
1058:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** //		fWin8RotationMatrixFromAnglesDeg(fLPR6DOFn, fLPPhi6DOF, fLPThe6DOF, fLPPsi6DOF);
1059:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** //	}
1060:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1061:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// exponentially low pass filter the inclination angle 
1062:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	ftmpAngle = fdelta6DOF - fLPdelta6DOF;
 5892              		.loc 1 1062 0
 5893 00d4 214B     		ldr	r3, .L221+12
 5894 00d6 1A68     		ldr	r2, [r3]
 5895 00d8 214B     		ldr	r3, .L221+16
 5896 00da 1B68     		ldr	r3, [r3]
 5897 00dc 101C     		add	r0, r2, #0
 5898 00de 191C     		add	r1, r3, #0
 5899 00e0 FFF7FEFF 		bl	__aeabi_fsub
 5900 00e4 031C     		add	r3, r0, #0
 5901 00e6 7B60     		str	r3, [r7, #4]
1063:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	if (ftmpAngle > 180.0F) ftmpAngle -= 360.0F;
 5902              		.loc 1 1063 0
 5903 00e8 7B68     		ldr	r3, [r7, #4]
 5904 00ea 181C     		add	r0, r3, #0
 5905 00ec 2649     		ldr	r1, .L221+56
 5906 00ee FFF7FEFF 		bl	__aeabi_fcmpgt
 5907 00f2 031C     		mov	r3, r0
 5908 00f4 002B     		cmp	r3, #0
 5909 00f6 06D0     		beq	.L214
 5910              	.L219:
 5911              		.loc 1 1063 0 is_stmt 0
 5912 00f8 7B68     		ldr	r3, [r7, #4]
 5913 00fa 181C     		add	r0, r3, #0
 5914 00fc 2349     		ldr	r1, .L221+60
 5915 00fe FFF7FEFF 		bl	__aeabi_fsub
 5916 0102 031C     		add	r3, r0, #0
 5917 0104 7B60     		str	r3, [r7, #4]
 5918              	.L214:
1064:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	if (ftmpAngle < -180.0F) ftmpAngle += 360.0F;
 5919              		.loc 1 1064 0 is_stmt 1
 5920 0106 7B68     		ldr	r3, [r7, #4]
 5921 0108 181C     		add	r0, r3, #0
 5922 010a 2149     		ldr	r1, .L221+64
 5923 010c FFF7FEFF 		bl	__aeabi_fcmplt
 5924 0110 031C     		mov	r3, r0
 5925 0112 002B     		cmp	r3, #0
 5926 0114 06D0     		beq	.L216
 5927              	.L220:
 5928              		.loc 1 1064 0 is_stmt 0
 5929 0116 7B68     		ldr	r3, [r7, #4]
 5930 0118 181C     		add	r0, r3, #0
 5931 011a 1C49     		ldr	r1, .L221+60
 5932 011c FFF7FEFF 		bl	__aeabi_fadd
 5933 0120 031C     		add	r3, r0, #0
 5934 0122 7B60     		str	r3, [r7, #4]
 5935              	.L216:
1065:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	fLPdelta6DOF += ANGLE_LPF_FPU * ftmpAngle;
 5936              		.loc 1 1065 0 is_stmt 1
 5937 0124 7B68     		ldr	r3, [r7, #4]
 5938 0126 181C     		add	r0, r3, #0
 5939 0128 F621     		mov	r1, #246
 5940 012a 8905     		lsl	r1, r1, #22
 5941 012c FFF7FEFF 		bl	__aeabi_fmul
 5942 0130 031C     		add	r3, r0, #0
 5943 0132 1A1C     		add	r2, r3, #0
 5944 0134 0A4B     		ldr	r3, .L221+16
 5945 0136 1B68     		ldr	r3, [r3]
 5946 0138 101C     		add	r0, r2, #0
 5947 013a 191C     		add	r1, r3, #0
 5948 013c FFF7FEFF 		bl	__aeabi_fadd
 5949 0140 031C     		add	r3, r0, #0
 5950 0142 1A1C     		add	r2, r3, #0
 5951 0144 064B     		ldr	r3, .L221+16
 5952 0146 1A60     		str	r2, [r3]
1066:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1067:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	return;
1068:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** }
 5953              		.loc 1 1068 0
 5954 0148 BD46     		mov	sp, r7
 5955 014a 03B0     		add	sp, sp, #12
 5956              		@ sp needed for prologue
 5957 014c 90BD     		pop	{r4, r7, pc}
 5958              	.L222:
 5959 014e C046     		.align	2
 5960              	.L221:
 5961 0150 00000000 		.word	loopcounter
 5962 0154 00000000 		.word	fLPR6DOFn
 5963 0158 00000000 		.word	fR6DOFn
 5964 015c 00000000 		.word	fdelta6DOF
 5965 0160 00000000 		.word	fLPdelta6DOF
 5966 0164 00000000 		.word	fLPR6DOFnm1
 5967 0168 00000000 		.word	ftmpA3x3
 5968 016c 00000000 		.word	ftmpA3x1
 5969 0170 00000000 		.word	ftmpB3x3
 5970 0174 00000000 		.word	COORDSYSTEM
 5971 0178 00000000 		.word	fLPPhi6DOF
 5972 017c 00000000 		.word	fLPThe6DOF
 5973 0180 00000000 		.word	fLPPsi6DOF
 5974 0184 00000000 		.word	fLPRho6DOF
 5975 0188 00003443 		.word	1127481344
 5976 018c 0000B443 		.word	1135869952
 5977 0190 000034C3 		.word	-1020002304
 5978              		.cfi_endproc
 5979              	.LFE16:
 5981              		.section	.text.fmatrixAeqBxTrC,"ax",%progbits
 5982              		.align	2
 5983              		.global	fmatrixAeqBxTrC
 5984              		.code	16
 5985              		.thumb_func
 5987              	fmatrixAeqBxTrC:
 5988              	.LFB17:
1069:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1070:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** // function calculates the matrix product A = B x C^T 
1071:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** void fmatrixAeqBxTrC(float **A, float **B, float **C, int32 rB, int32 cBcC, int32 rC)
1072:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** {
 5989              		.loc 1 1072 0
 5990              		.cfi_startproc
 5991 0000 B0B5     		push	{r4, r5, r7, lr}
 5992              	.LCFI48:
 5993              		.cfi_def_cfa_offset 16
 5994              		.cfi_offset 4, -16
 5995              		.cfi_offset 5, -12
 5996              		.cfi_offset 7, -8
 5997              		.cfi_offset 14, -4
 5998 0002 88B0     		sub	sp, sp, #32
 5999              	.LCFI49:
 6000              		.cfi_def_cfa_offset 48
 6001 0004 00AF     		add	r7, sp, #0
 6002              	.LCFI50:
 6003              		.cfi_def_cfa_register 7
 6004 0006 F860     		str	r0, [r7, #12]
 6005 0008 B960     		str	r1, [r7, #8]
 6006 000a 7A60     		str	r2, [r7, #4]
 6007 000c 3B60     		str	r3, [r7]
1073:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// rB = rows in B 
1074:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// cBcC = columns in B = columns in C 
1075:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// rC = rows in C 
1076:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// A has dimension rB rows x rC columns 
1077:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1078:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	int32 i, j, k;	// counters 
1079:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1080:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (i = 0; i < rB; i++)
 6008              		.loc 1 1080 0
 6009 000e 0023     		mov	r3, #0
 6010 0010 FB61     		str	r3, [r7, #28]
 6011 0012 4EE0     		b	.L224
 6012              	.L229:
1081:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	{
1082:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		for (j = 0; j < rC; j++)
 6013              		.loc 1 1082 0
 6014 0014 0023     		mov	r3, #0
 6015 0016 BB61     		str	r3, [r7, #24]
 6016 0018 44E0     		b	.L225
 6017              	.L228:
1083:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		{
1084:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			A[i][j] = 0.0F;
 6018              		.loc 1 1084 0
 6019 001a FB69     		ldr	r3, [r7, #28]
 6020 001c 9B00     		lsl	r3, r3, #2
 6021 001e FA68     		ldr	r2, [r7, #12]
 6022 0020 D318     		add	r3, r2, r3
 6023 0022 1A68     		ldr	r2, [r3]
 6024 0024 BB69     		ldr	r3, [r7, #24]
 6025 0026 9B00     		lsl	r3, r3, #2
 6026 0028 D318     		add	r3, r2, r3
 6027 002a 0022     		mov	r2, #0
 6028 002c 1A60     		str	r2, [r3]
1085:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			for (k = 0; k < cBcC; k++)
 6029              		.loc 1 1085 0
 6030 002e 0023     		mov	r3, #0
 6031 0030 7B61     		str	r3, [r7, #20]
 6032 0032 30E0     		b	.L226
 6033              	.L227:
1086:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 				A[i][j] += B[i][k] * C[j][k]; 
 6034              		.loc 1 1086 0
 6035 0034 FB69     		ldr	r3, [r7, #28]
 6036 0036 9B00     		lsl	r3, r3, #2
 6037 0038 FA68     		ldr	r2, [r7, #12]
 6038 003a D318     		add	r3, r2, r3
 6039 003c 1A68     		ldr	r2, [r3]
 6040 003e BB69     		ldr	r3, [r7, #24]
 6041 0040 9B00     		lsl	r3, r3, #2
 6042 0042 D418     		add	r4, r2, r3
 6043 0044 FB69     		ldr	r3, [r7, #28]
 6044 0046 9B00     		lsl	r3, r3, #2
 6045 0048 FA68     		ldr	r2, [r7, #12]
 6046 004a D318     		add	r3, r2, r3
 6047 004c 1A68     		ldr	r2, [r3]
 6048 004e BB69     		ldr	r3, [r7, #24]
 6049 0050 9B00     		lsl	r3, r3, #2
 6050 0052 D318     		add	r3, r2, r3
 6051 0054 1D68     		ldr	r5, [r3]
 6052 0056 FB69     		ldr	r3, [r7, #28]
 6053 0058 9B00     		lsl	r3, r3, #2
 6054 005a BA68     		ldr	r2, [r7, #8]
 6055 005c D318     		add	r3, r2, r3
 6056 005e 1A68     		ldr	r2, [r3]
 6057 0060 7B69     		ldr	r3, [r7, #20]
 6058 0062 9B00     		lsl	r3, r3, #2
 6059 0064 D318     		add	r3, r2, r3
 6060 0066 1A68     		ldr	r2, [r3]
 6061 0068 BB69     		ldr	r3, [r7, #24]
 6062 006a 9B00     		lsl	r3, r3, #2
 6063 006c 7968     		ldr	r1, [r7, #4]
 6064 006e CB18     		add	r3, r1, r3
 6065 0070 1968     		ldr	r1, [r3]
 6066 0072 7B69     		ldr	r3, [r7, #20]
 6067 0074 9B00     		lsl	r3, r3, #2
 6068 0076 CB18     		add	r3, r1, r3
 6069 0078 1B68     		ldr	r3, [r3]
 6070 007a 101C     		add	r0, r2, #0
 6071 007c 191C     		add	r1, r3, #0
 6072 007e FFF7FEFF 		bl	__aeabi_fmul
 6073 0082 031C     		add	r3, r0, #0
 6074 0084 281C     		add	r0, r5, #0
 6075 0086 191C     		add	r1, r3, #0
 6076 0088 FFF7FEFF 		bl	__aeabi_fadd
 6077 008c 031C     		add	r3, r0, #0
 6078 008e 2360     		str	r3, [r4]
1085:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			for (k = 0; k < cBcC; k++)
 6079              		.loc 1 1085 0
 6080 0090 7B69     		ldr	r3, [r7, #20]
 6081 0092 0133     		add	r3, r3, #1
 6082 0094 7B61     		str	r3, [r7, #20]
 6083              	.L226:
1085:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			for (k = 0; k < cBcC; k++)
 6084              		.loc 1 1085 0 is_stmt 0
 6085 0096 7A69     		ldr	r2, [r7, #20]
 6086 0098 3B6B     		ldr	r3, [r7, #48]
 6087 009a 9A42     		cmp	r2, r3
 6088 009c CADB     		blt	.L227
1082:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		for (j = 0; j < rC; j++)
 6089              		.loc 1 1082 0 is_stmt 1
 6090 009e BB69     		ldr	r3, [r7, #24]
 6091 00a0 0133     		add	r3, r3, #1
 6092 00a2 BB61     		str	r3, [r7, #24]
 6093              	.L225:
1082:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		for (j = 0; j < rC; j++)
 6094              		.loc 1 1082 0 is_stmt 0
 6095 00a4 BA69     		ldr	r2, [r7, #24]
 6096 00a6 7B6B     		ldr	r3, [r7, #52]
 6097 00a8 9A42     		cmp	r2, r3
 6098 00aa B6DB     		blt	.L228
1080:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (i = 0; i < rB; i++)
 6099              		.loc 1 1080 0 is_stmt 1
 6100 00ac FB69     		ldr	r3, [r7, #28]
 6101 00ae 0133     		add	r3, r3, #1
 6102 00b0 FB61     		str	r3, [r7, #28]
 6103              	.L224:
1080:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (i = 0; i < rB; i++)
 6104              		.loc 1 1080 0 is_stmt 0
 6105 00b2 FA69     		ldr	r2, [r7, #28]
 6106 00b4 3B68     		ldr	r3, [r7]
 6107 00b6 9A42     		cmp	r2, r3
 6108 00b8 ACDB     		blt	.L229
1087:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		}
1088:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	}
1089:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	return;
 6109              		.loc 1 1089 0 is_stmt 1
 6110 00ba C046     		mov	r8, r8
1090:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** }
 6111              		.loc 1 1090 0
 6112 00bc BD46     		mov	sp, r7
 6113 00be 08B0     		add	sp, sp, #32
 6114              		@ sp needed for prologue
 6115 00c0 B0BD     		pop	{r4, r5, r7, pc}
 6116              		.cfi_endproc
 6117              	.LFE17:
 6119 00c2 C046     		.section	.text.fAxisAngleDegFromRotationMatrix,"ax",%progbits
 6120              		.align	2
 6121              		.global	fAxisAngleDegFromRotationMatrix
 6122              		.code	16
 6123              		.thumb_func
 6125              	fAxisAngleDegFromRotationMatrix:
 6126              	.LFB18:
1091:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1092:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** // compute the normalised rotation axis and angles from a rotation matrix 
1093:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** void fAxisAngleDegFromRotationMatrix(float **R, float **n, float *pfeta)
1094:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** {
 6127              		.loc 1 1094 0
 6128              		.cfi_startproc
 6129 0000 B0B5     		push	{r4, r5, r7, lr}
 6130              	.LCFI51:
 6131              		.cfi_def_cfa_offset 16
 6132              		.cfi_offset 4, -16
 6133              		.cfi_offset 5, -12
 6134              		.cfi_offset 7, -8
 6135              		.cfi_offset 14, -4
 6136 0002 86B0     		sub	sp, sp, #24
 6137              	.LCFI52:
 6138              		.cfi_def_cfa_offset 40
 6139 0004 00AF     		add	r7, sp, #0
 6140              	.LCFI53:
 6141              		.cfi_def_cfa_register 7
 6142 0006 F860     		str	r0, [r7, #12]
 6143 0008 B960     		str	r1, [r7, #8]
 6144 000a 7A60     		str	r2, [r7, #4]
1095:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	float ftrace;				// trace of the rotation matrix 
1096:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	float fscale;				// scale factor to normalise rotation axis vector 
1097:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1098:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// calculate the trace of the rotation matrix = 1+2cos(eta) 
1099:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	ftrace = R[0][0] + R[1][1] + R[2][2];
 6145              		.loc 1 1099 0
 6146 000c FB68     		ldr	r3, [r7, #12]
 6147 000e 1B68     		ldr	r3, [r3]
 6148 0010 1A68     		ldr	r2, [r3]
 6149 0012 FB68     		ldr	r3, [r7, #12]
 6150 0014 0433     		add	r3, r3, #4
 6151 0016 1B68     		ldr	r3, [r3]
 6152 0018 0433     		add	r3, r3, #4
 6153 001a 1B68     		ldr	r3, [r3]
 6154 001c 101C     		add	r0, r2, #0
 6155 001e 191C     		add	r1, r3, #0
 6156 0020 FFF7FEFF 		bl	__aeabi_fadd
 6157 0024 031C     		add	r3, r0, #0
 6158 0026 1A1C     		add	r2, r3, #0
 6159 0028 FB68     		ldr	r3, [r7, #12]
 6160 002a 0833     		add	r3, r3, #8
 6161 002c 1B68     		ldr	r3, [r3]
 6162 002e 0833     		add	r3, r3, #8
 6163 0030 1B68     		ldr	r3, [r3]
 6164 0032 101C     		add	r0, r2, #0
 6165 0034 191C     		add	r1, r3, #0
 6166 0036 FFF7FEFF 		bl	__aeabi_fadd
 6167 003a 031C     		add	r3, r0, #0
 6168 003c 7B61     		str	r3, [r7, #20]
1100:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1101:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// calculate differences across the diagonal = 2*n*sin(eta) giving null vector for 0 and 180 deg 
1102:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	n[0][0] = R[1][2] - R[2][1]; 
 6169              		.loc 1 1102 0
 6170 003e BB68     		ldr	r3, [r7, #8]
 6171 0040 1C68     		ldr	r4, [r3]
 6172 0042 FB68     		ldr	r3, [r7, #12]
 6173 0044 0433     		add	r3, r3, #4
 6174 0046 1B68     		ldr	r3, [r3]
 6175 0048 0833     		add	r3, r3, #8
 6176 004a 1A68     		ldr	r2, [r3]
 6177 004c FB68     		ldr	r3, [r7, #12]
 6178 004e 0833     		add	r3, r3, #8
 6179 0050 1B68     		ldr	r3, [r3]
 6180 0052 0433     		add	r3, r3, #4
 6181 0054 1B68     		ldr	r3, [r3]
 6182 0056 101C     		add	r0, r2, #0
 6183 0058 191C     		add	r1, r3, #0
 6184 005a FFF7FEFF 		bl	__aeabi_fsub
 6185 005e 031C     		add	r3, r0, #0
 6186 0060 2360     		str	r3, [r4]
1103:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	n[1][0] = R[2][0] - R[0][2]; 
 6187              		.loc 1 1103 0
 6188 0062 BB68     		ldr	r3, [r7, #8]
 6189 0064 0433     		add	r3, r3, #4
 6190 0066 1C68     		ldr	r4, [r3]
 6191 0068 FB68     		ldr	r3, [r7, #12]
 6192 006a 0833     		add	r3, r3, #8
 6193 006c 1B68     		ldr	r3, [r3]
 6194 006e 1A68     		ldr	r2, [r3]
 6195 0070 FB68     		ldr	r3, [r7, #12]
 6196 0072 1B68     		ldr	r3, [r3]
 6197 0074 0833     		add	r3, r3, #8
 6198 0076 1B68     		ldr	r3, [r3]
 6199 0078 101C     		add	r0, r2, #0
 6200 007a 191C     		add	r1, r3, #0
 6201 007c FFF7FEFF 		bl	__aeabi_fsub
 6202 0080 031C     		add	r3, r0, #0
 6203 0082 2360     		str	r3, [r4]
1104:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	n[2][0] = R[0][1] - R[1][0];
 6204              		.loc 1 1104 0
 6205 0084 BB68     		ldr	r3, [r7, #8]
 6206 0086 0833     		add	r3, r3, #8
 6207 0088 1C68     		ldr	r4, [r3]
 6208 008a FB68     		ldr	r3, [r7, #12]
 6209 008c 1B68     		ldr	r3, [r3]
 6210 008e 0433     		add	r3, r3, #4
 6211 0090 1A68     		ldr	r2, [r3]
 6212 0092 FB68     		ldr	r3, [r7, #12]
 6213 0094 0433     		add	r3, r3, #4
 6214 0096 1B68     		ldr	r3, [r3]
 6215 0098 1B68     		ldr	r3, [r3]
 6216 009a 101C     		add	r0, r2, #0
 6217 009c 191C     		add	r1, r3, #0
 6218 009e FFF7FEFF 		bl	__aeabi_fsub
 6219 00a2 031C     		add	r3, r0, #0
 6220 00a4 2360     		str	r3, [r4]
1105:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	fscale = (float)sqrt(n[0][0] * n[0][0] + n[1][0] * n[1][0] + n[2][0] * n[2][0]);
 6221              		.loc 1 1105 0
 6222 00a6 BB68     		ldr	r3, [r7, #8]
 6223 00a8 1B68     		ldr	r3, [r3]
 6224 00aa 1A68     		ldr	r2, [r3]
 6225 00ac BB68     		ldr	r3, [r7, #8]
 6226 00ae 1B68     		ldr	r3, [r3]
 6227 00b0 1B68     		ldr	r3, [r3]
 6228 00b2 101C     		add	r0, r2, #0
 6229 00b4 191C     		add	r1, r3, #0
 6230 00b6 FFF7FEFF 		bl	__aeabi_fmul
 6231 00ba 031C     		add	r3, r0, #0
 6232 00bc 1C1C     		add	r4, r3, #0
 6233 00be BB68     		ldr	r3, [r7, #8]
 6234 00c0 0433     		add	r3, r3, #4
 6235 00c2 1B68     		ldr	r3, [r3]
 6236 00c4 1A68     		ldr	r2, [r3]
 6237 00c6 BB68     		ldr	r3, [r7, #8]
 6238 00c8 0433     		add	r3, r3, #4
 6239 00ca 1B68     		ldr	r3, [r3]
 6240 00cc 1B68     		ldr	r3, [r3]
 6241 00ce 101C     		add	r0, r2, #0
 6242 00d0 191C     		add	r1, r3, #0
 6243 00d2 FFF7FEFF 		bl	__aeabi_fmul
 6244 00d6 031C     		add	r3, r0, #0
 6245 00d8 201C     		add	r0, r4, #0
 6246 00da 191C     		add	r1, r3, #0
 6247 00dc FFF7FEFF 		bl	__aeabi_fadd
 6248 00e0 031C     		add	r3, r0, #0
 6249 00e2 1C1C     		add	r4, r3, #0
 6250 00e4 BB68     		ldr	r3, [r7, #8]
 6251 00e6 0833     		add	r3, r3, #8
 6252 00e8 1B68     		ldr	r3, [r3]
 6253 00ea 1A68     		ldr	r2, [r3]
 6254 00ec BB68     		ldr	r3, [r7, #8]
 6255 00ee 0833     		add	r3, r3, #8
 6256 00f0 1B68     		ldr	r3, [r3]
 6257 00f2 1B68     		ldr	r3, [r3]
 6258 00f4 101C     		add	r0, r2, #0
 6259 00f6 191C     		add	r1, r3, #0
 6260 00f8 FFF7FEFF 		bl	__aeabi_fmul
 6261 00fc 031C     		add	r3, r0, #0
 6262 00fe 201C     		add	r0, r4, #0
 6263 0100 191C     		add	r1, r3, #0
 6264 0102 FFF7FEFF 		bl	__aeabi_fadd
 6265 0106 031C     		add	r3, r0, #0
 6266 0108 181C     		add	r0, r3, #0
 6267 010a FFF7FEFF 		bl	__aeabi_f2d
 6268 010e 031C     		mov	r3, r0
 6269 0110 0C1C     		mov	r4, r1
 6270 0112 181C     		mov	r0, r3
 6271 0114 211C     		mov	r1, r4
 6272 0116 FFF7FEFF 		bl	sqrt
 6273 011a 031C     		mov	r3, r0
 6274 011c 0C1C     		mov	r4, r1
 6275 011e 181C     		mov	r0, r3
 6276 0120 211C     		mov	r1, r4
 6277 0122 FFF7FEFF 		bl	__aeabi_d2f
 6278 0126 031C     		add	r3, r0, #0
 6279 0128 3B61     		str	r3, [r7, #16]
1106:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1107:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// normal case when the vector is not zero and the angle is not 0 or 180 deg 
1108:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	if (fscale != 0.0F)
 6280              		.loc 1 1108 0
 6281 012a 3869     		ldr	r0, [r7, #16]
 6282 012c 0021     		mov	r1, #0
 6283 012e FFF7FEFF 		bl	__aeabi_fcmpeq
 6284 0132 031C     		mov	r3, r0
 6285 0134 002B     		cmp	r3, #0
 6286 0136 66D1     		bne	.L254
 6287              	.L248:
1109:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	{
1110:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		// normalise the unit vector with previously stored differences 
1111:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		fscale = 1.0F / fscale;
 6288              		.loc 1 1111 0
 6289 0138 FE20     		mov	r0, #254
 6290 013a 8005     		lsl	r0, r0, #22
 6291 013c 3969     		ldr	r1, [r7, #16]
 6292 013e FFF7FEFF 		bl	__aeabi_fdiv
 6293 0142 031C     		add	r3, r0, #0
 6294 0144 3B61     		str	r3, [r7, #16]
1112:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		n[0][0] *= fscale;
 6295              		.loc 1 1112 0
 6296 0146 BB68     		ldr	r3, [r7, #8]
 6297 0148 1C68     		ldr	r4, [r3]
 6298 014a BB68     		ldr	r3, [r7, #8]
 6299 014c 1B68     		ldr	r3, [r3]
 6300 014e 1B68     		ldr	r3, [r3]
 6301 0150 181C     		add	r0, r3, #0
 6302 0152 3969     		ldr	r1, [r7, #16]
 6303 0154 FFF7FEFF 		bl	__aeabi_fmul
 6304 0158 031C     		add	r3, r0, #0
 6305 015a 2360     		str	r3, [r4]
1113:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		n[1][0] *= fscale;
 6306              		.loc 1 1113 0
 6307 015c BB68     		ldr	r3, [r7, #8]
 6308 015e 0433     		add	r3, r3, #4
 6309 0160 1C68     		ldr	r4, [r3]
 6310 0162 BB68     		ldr	r3, [r7, #8]
 6311 0164 0433     		add	r3, r3, #4
 6312 0166 1B68     		ldr	r3, [r3]
 6313 0168 1B68     		ldr	r3, [r3]
 6314 016a 181C     		add	r0, r3, #0
 6315 016c 3969     		ldr	r1, [r7, #16]
 6316 016e FFF7FEFF 		bl	__aeabi_fmul
 6317 0172 031C     		add	r3, r0, #0
 6318 0174 2360     		str	r3, [r4]
1114:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		n[2][0] *= fscale;
 6319              		.loc 1 1114 0
 6320 0176 BB68     		ldr	r3, [r7, #8]
 6321 0178 0833     		add	r3, r3, #8
 6322 017a 1C68     		ldr	r4, [r3]
 6323 017c BB68     		ldr	r3, [r7, #8]
 6324 017e 0833     		add	r3, r3, #8
 6325 0180 1B68     		ldr	r3, [r3]
 6326 0182 1B68     		ldr	r3, [r3]
 6327 0184 181C     		add	r0, r3, #0
 6328 0186 3969     		ldr	r1, [r7, #16]
 6329 0188 FFF7FEFF 		bl	__aeabi_fmul
 6330 018c 031C     		add	r3, r0, #0
 6331 018e 2360     		str	r3, [r4]
1115:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1116:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		// calculate the rotation angle eta in the range 0 to 180 degrees 
1117:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		if (ftrace >= 3.0F) *pfeta = 0.0F;
 6332              		.loc 1 1117 0
 6333 0190 7869     		ldr	r0, [r7, #20]
 6334 0192 9C49     		ldr	r1, .L260
 6335 0194 FFF7FEFF 		bl	__aeabi_fcmpge
 6336 0198 031C     		mov	r3, r0
 6337 019a 002B     		cmp	r3, #0
 6338 019c 03D0     		beq	.L255
 6339              	.L249:
 6340              		.loc 1 1117 0 is_stmt 0
 6341 019e 7B68     		ldr	r3, [r7, #4]
 6342 01a0 0022     		mov	r2, #0
 6343 01a2 1A60     		str	r2, [r3]
1118:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		else if (ftrace <= -1.0F) *pfeta = 180.0F;
1119:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		else *pfeta = (float)acos(0.5F * (ftrace - 1.0F)) * RadToDeg;
1120:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1121:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		return;
 6344              		.loc 1 1121 0 is_stmt 1
 6345 01a4 2BE1     		b	.L231
 6346              	.L255:
1118:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		else if (ftrace <= -1.0F) *pfeta = 180.0F;
 6347              		.loc 1 1118 0
 6348 01a6 7869     		ldr	r0, [r7, #20]
 6349 01a8 9749     		ldr	r1, .L260+4
 6350 01aa FFF7FEFF 		bl	__aeabi_fcmple
 6351 01ae 031C     		mov	r3, r0
 6352 01b0 002B     		cmp	r3, #0
 6353 01b2 03D0     		beq	.L256
 6354              	.L250:
1118:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		else if (ftrace <= -1.0F) *pfeta = 180.0F;
 6355              		.loc 1 1118 0 is_stmt 0
 6356 01b4 7B68     		ldr	r3, [r7, #4]
 6357 01b6 954A     		ldr	r2, .L260+8
 6358 01b8 1A60     		str	r2, [r3]
 6359              		.loc 1 1121 0 is_stmt 1
 6360 01ba 20E1     		b	.L231
 6361              	.L256:
1119:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		else *pfeta = (float)acos(0.5F * (ftrace - 1.0F)) * RadToDeg;
 6362              		.loc 1 1119 0
 6363 01bc 7869     		ldr	r0, [r7, #20]
 6364 01be FE21     		mov	r1, #254
 6365 01c0 8905     		lsl	r1, r1, #22
 6366 01c2 FFF7FEFF 		bl	__aeabi_fsub
 6367 01c6 031C     		add	r3, r0, #0
 6368 01c8 181C     		add	r0, r3, #0
 6369 01ca FC21     		mov	r1, #252
 6370 01cc 8905     		lsl	r1, r1, #22
 6371 01ce FFF7FEFF 		bl	__aeabi_fmul
 6372 01d2 031C     		add	r3, r0, #0
 6373 01d4 181C     		add	r0, r3, #0
 6374 01d6 FFF7FEFF 		bl	__aeabi_f2d
 6375 01da 031C     		mov	r3, r0
 6376 01dc 0C1C     		mov	r4, r1
 6377 01de 181C     		mov	r0, r3
 6378 01e0 211C     		mov	r1, r4
 6379 01e2 FFF7FEFF 		bl	acos
 6380 01e6 031C     		mov	r3, r0
 6381 01e8 0C1C     		mov	r4, r1
 6382 01ea 181C     		mov	r0, r3
 6383 01ec 211C     		mov	r1, r4
 6384 01ee FFF7FEFF 		bl	__aeabi_d2f
 6385 01f2 031C     		add	r3, r0, #0
 6386 01f4 181C     		add	r0, r3, #0
 6387 01f6 8649     		ldr	r1, .L260+12
 6388 01f8 FFF7FEFF 		bl	__aeabi_fmul
 6389 01fc 031C     		add	r3, r0, #0
 6390 01fe 1A1C     		add	r2, r3, #0
 6391 0200 7B68     		ldr	r3, [r7, #4]
 6392 0202 1A60     		str	r2, [r3]
 6393              		.loc 1 1121 0
 6394 0204 FBE0     		b	.L231
 6395              	.L254:
1122:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	}
1123:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1124:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// if positive trace (actually trace = 3) then it's zero deg rotation 
1125:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	if (ftrace > 0.0F)
 6396              		.loc 1 1125 0
 6397 0206 7869     		ldr	r0, [r7, #20]
 6398 0208 0021     		mov	r1, #0
 6399 020a FFF7FEFF 		bl	__aeabi_fcmpgt
 6400 020e 031C     		mov	r3, r0
 6401 0210 002B     		cmp	r3, #0
 6402 0212 12D0     		beq	.L257
 6403              	.L251:
1126:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	{
1127:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		// choose an arbitrary normalised rotation axis here x 
1128:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		n[0][0] = 1.0F;
 6404              		.loc 1 1128 0
 6405 0214 BB68     		ldr	r3, [r7, #8]
 6406 0216 1B68     		ldr	r3, [r3]
 6407 0218 FE22     		mov	r2, #254
 6408 021a 9205     		lsl	r2, r2, #22
 6409 021c 1A60     		str	r2, [r3]
1129:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		n[1][0] = n[2][0] = 0.0F;
 6410              		.loc 1 1129 0
 6411 021e BB68     		ldr	r3, [r7, #8]
 6412 0220 0433     		add	r3, r3, #4
 6413 0222 1A68     		ldr	r2, [r3]
 6414 0224 BB68     		ldr	r3, [r7, #8]
 6415 0226 0833     		add	r3, r3, #8
 6416 0228 1B68     		ldr	r3, [r3]
 6417 022a 0021     		mov	r1, #0
 6418 022c 1960     		str	r1, [r3]
 6419 022e 1B68     		ldr	r3, [r3]
 6420 0230 1360     		str	r3, [r2]
1130:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		// and set the rotation angle eta to zero 
1131:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		*pfeta = 0.0F;
 6421              		.loc 1 1131 0
 6422 0232 7B68     		ldr	r3, [r7, #4]
 6423 0234 0022     		mov	r2, #0
 6424 0236 1A60     		str	r2, [r3]
1132:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1133:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		return;
 6425              		.loc 1 1133 0
 6426 0238 E1E0     		b	.L231
 6427              	.L257:
1134:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	}
1135:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1136:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// finally it must be a rotation of 180 deg (with trace = -1) with two possible axis directions 
1137:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// we can arbitrarily select n[0] to be non-negative 
1138:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	n[0][0] = (float)sqrt(fabs(0.5F * (R[0][0] + 1.0F)));
 6428              		.loc 1 1138 0
 6429 023a BB68     		ldr	r3, [r7, #8]
 6430 023c 1D68     		ldr	r5, [r3]
 6431 023e FB68     		ldr	r3, [r7, #12]
 6432 0240 1B68     		ldr	r3, [r3]
 6433 0242 1B68     		ldr	r3, [r3]
 6434 0244 181C     		add	r0, r3, #0
 6435 0246 FE21     		mov	r1, #254
 6436 0248 8905     		lsl	r1, r1, #22
 6437 024a FFF7FEFF 		bl	__aeabi_fadd
 6438 024e 031C     		add	r3, r0, #0
 6439 0250 181C     		add	r0, r3, #0
 6440 0252 FC21     		mov	r1, #252
 6441 0254 8905     		lsl	r1, r1, #22
 6442 0256 FFF7FEFF 		bl	__aeabi_fmul
 6443 025a 031C     		add	r3, r0, #0
 6444 025c 5B00     		lsl	r3, r3, #1
 6445 025e 5B08     		lsr	r3, r3, #1
 6446 0260 181C     		add	r0, r3, #0
 6447 0262 FFF7FEFF 		bl	__aeabi_f2d
 6448 0266 031C     		mov	r3, r0
 6449 0268 0C1C     		mov	r4, r1
 6450 026a 181C     		mov	r0, r3
 6451 026c 211C     		mov	r1, r4
 6452 026e FFF7FEFF 		bl	sqrt
 6453 0272 031C     		mov	r3, r0
 6454 0274 0C1C     		mov	r4, r1
 6455 0276 181C     		mov	r0, r3
 6456 0278 211C     		mov	r1, r4
 6457 027a FFF7FEFF 		bl	__aeabi_d2f
 6458 027e 031C     		add	r3, r0, #0
 6459 0280 2B60     		str	r3, [r5]
1139:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// use the sign of R[0][1]=2*nx*ny to determine the sign of the y component 
1140:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	if (R[0][1] >= 0.0F)
 6460              		.loc 1 1140 0
 6461 0282 FB68     		ldr	r3, [r7, #12]
 6462 0284 1B68     		ldr	r3, [r3]
 6463 0286 0433     		add	r3, r3, #4
 6464 0288 1B68     		ldr	r3, [r3]
 6465 028a 181C     		add	r0, r3, #0
 6466 028c 0021     		mov	r1, #0
 6467 028e FFF7FEFF 		bl	__aeabi_fcmpge
 6468 0292 031C     		mov	r3, r0
 6469 0294 002B     		cmp	r3, #0
 6470 0296 27D0     		beq	.L258
 6471              	.L252:
1141:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		n[1][0] = (float)sqrt(fabs(0.5F * (R[1][1] + 1.0F)));
 6472              		.loc 1 1141 0
 6473 0298 BB68     		ldr	r3, [r7, #8]
 6474 029a 0433     		add	r3, r3, #4
 6475 029c 1D68     		ldr	r5, [r3]
 6476 029e FB68     		ldr	r3, [r7, #12]
 6477 02a0 0433     		add	r3, r3, #4
 6478 02a2 1B68     		ldr	r3, [r3]
 6479 02a4 0433     		add	r3, r3, #4
 6480 02a6 1B68     		ldr	r3, [r3]
 6481 02a8 181C     		add	r0, r3, #0
 6482 02aa FE21     		mov	r1, #254
 6483 02ac 8905     		lsl	r1, r1, #22
 6484 02ae FFF7FEFF 		bl	__aeabi_fadd
 6485 02b2 031C     		add	r3, r0, #0
 6486 02b4 181C     		add	r0, r3, #0
 6487 02b6 FC21     		mov	r1, #252
 6488 02b8 8905     		lsl	r1, r1, #22
 6489 02ba FFF7FEFF 		bl	__aeabi_fmul
 6490 02be 031C     		add	r3, r0, #0
 6491 02c0 5B00     		lsl	r3, r3, #1
 6492 02c2 5B08     		lsr	r3, r3, #1
 6493 02c4 181C     		add	r0, r3, #0
 6494 02c6 FFF7FEFF 		bl	__aeabi_f2d
 6495 02ca 031C     		mov	r3, r0
 6496 02cc 0C1C     		mov	r4, r1
 6497 02ce 181C     		mov	r0, r3
 6498 02d0 211C     		mov	r1, r4
 6499 02d2 FFF7FEFF 		bl	sqrt
 6500 02d6 031C     		mov	r3, r0
 6501 02d8 0C1C     		mov	r4, r1
 6502 02da 181C     		mov	r0, r3
 6503 02dc 211C     		mov	r1, r4
 6504 02de FFF7FEFF 		bl	__aeabi_d2f
 6505 02e2 031C     		add	r3, r0, #0
 6506 02e4 2B60     		str	r3, [r5]
 6507 02e6 29E0     		b	.L244
 6508              	.L258:
1142:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	else
1143:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		n[1][0] = (float)-sqrt(fabs(0.5F * (R[1][1] + 1.0F)));
 6509              		.loc 1 1143 0
 6510 02e8 BB68     		ldr	r3, [r7, #8]
 6511 02ea 0433     		add	r3, r3, #4
 6512 02ec 1D68     		ldr	r5, [r3]
 6513 02ee FB68     		ldr	r3, [r7, #12]
 6514 02f0 0433     		add	r3, r3, #4
 6515 02f2 1B68     		ldr	r3, [r3]
 6516 02f4 0433     		add	r3, r3, #4
 6517 02f6 1B68     		ldr	r3, [r3]
 6518 02f8 181C     		add	r0, r3, #0
 6519 02fa FE21     		mov	r1, #254
 6520 02fc 8905     		lsl	r1, r1, #22
 6521 02fe FFF7FEFF 		bl	__aeabi_fadd
 6522 0302 031C     		add	r3, r0, #0
 6523 0304 181C     		add	r0, r3, #0
 6524 0306 FC21     		mov	r1, #252
 6525 0308 8905     		lsl	r1, r1, #22
 6526 030a FFF7FEFF 		bl	__aeabi_fmul
 6527 030e 031C     		add	r3, r0, #0
 6528 0310 5B00     		lsl	r3, r3, #1
 6529 0312 5B08     		lsr	r3, r3, #1
 6530 0314 181C     		add	r0, r3, #0
 6531 0316 FFF7FEFF 		bl	__aeabi_f2d
 6532 031a 031C     		mov	r3, r0
 6533 031c 0C1C     		mov	r4, r1
 6534 031e 181C     		mov	r0, r3
 6535 0320 211C     		mov	r1, r4
 6536 0322 FFF7FEFF 		bl	sqrt
 6537 0326 031C     		mov	r3, r0
 6538 0328 0C1C     		mov	r4, r1
 6539 032a 181C     		mov	r0, r3
 6540 032c 211C     		mov	r1, r4
 6541 032e FFF7FEFF 		bl	__aeabi_d2f
 6542 0332 031C     		add	r3, r0, #0
 6543 0334 8022     		mov	r2, #128
 6544 0336 1206     		lsl	r2, r2, #24
 6545 0338 5340     		eor	r3, r2
 6546 033a 2B60     		str	r3, [r5]
 6547              	.L244:
1144:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// use the sign of R[0][2]=2*nx*ny to determine the sign of the z component 
1145:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	if (R[0][2] >= 0.0F)
 6548              		.loc 1 1145 0
 6549 033c FB68     		ldr	r3, [r7, #12]
 6550 033e 1B68     		ldr	r3, [r3]
 6551 0340 0833     		add	r3, r3, #8
 6552 0342 1B68     		ldr	r3, [r3]
 6553 0344 181C     		add	r0, r3, #0
 6554 0346 0021     		mov	r1, #0
 6555 0348 FFF7FEFF 		bl	__aeabi_fcmpge
 6556 034c 031C     		mov	r3, r0
 6557 034e 002B     		cmp	r3, #0
 6558 0350 27D0     		beq	.L259
 6559              	.L253:
1146:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		n[2][0] = (float)sqrt(fabs(0.5F * (R[2][2] + 1.0F)));
 6560              		.loc 1 1146 0
 6561 0352 BB68     		ldr	r3, [r7, #8]
 6562 0354 0833     		add	r3, r3, #8
 6563 0356 1D68     		ldr	r5, [r3]
 6564 0358 FB68     		ldr	r3, [r7, #12]
 6565 035a 0833     		add	r3, r3, #8
 6566 035c 1B68     		ldr	r3, [r3]
 6567 035e 0833     		add	r3, r3, #8
 6568 0360 1B68     		ldr	r3, [r3]
 6569 0362 181C     		add	r0, r3, #0
 6570 0364 FE21     		mov	r1, #254
 6571 0366 8905     		lsl	r1, r1, #22
 6572 0368 FFF7FEFF 		bl	__aeabi_fadd
 6573 036c 031C     		add	r3, r0, #0
 6574 036e 181C     		add	r0, r3, #0
 6575 0370 FC21     		mov	r1, #252
 6576 0372 8905     		lsl	r1, r1, #22
 6577 0374 FFF7FEFF 		bl	__aeabi_fmul
 6578 0378 031C     		add	r3, r0, #0
 6579 037a 5B00     		lsl	r3, r3, #1
 6580 037c 5B08     		lsr	r3, r3, #1
 6581 037e 181C     		add	r0, r3, #0
 6582 0380 FFF7FEFF 		bl	__aeabi_f2d
 6583 0384 031C     		mov	r3, r0
 6584 0386 0C1C     		mov	r4, r1
 6585 0388 181C     		mov	r0, r3
 6586 038a 211C     		mov	r1, r4
 6587 038c FFF7FEFF 		bl	sqrt
 6588 0390 031C     		mov	r3, r0
 6589 0392 0C1C     		mov	r4, r1
 6590 0394 181C     		mov	r0, r3
 6591 0396 211C     		mov	r1, r4
 6592 0398 FFF7FEFF 		bl	__aeabi_d2f
 6593 039c 031C     		add	r3, r0, #0
 6594 039e 2B60     		str	r3, [r5]
 6595 03a0 29E0     		b	.L247
 6596              	.L259:
1147:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	else
1148:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		n[2][0] = (float)-sqrt(fabs(0.5F * (R[2][2] + 1.0F)));
 6597              		.loc 1 1148 0
 6598 03a2 BB68     		ldr	r3, [r7, #8]
 6599 03a4 0833     		add	r3, r3, #8
 6600 03a6 1D68     		ldr	r5, [r3]
 6601 03a8 FB68     		ldr	r3, [r7, #12]
 6602 03aa 0833     		add	r3, r3, #8
 6603 03ac 1B68     		ldr	r3, [r3]
 6604 03ae 0833     		add	r3, r3, #8
 6605 03b0 1B68     		ldr	r3, [r3]
 6606 03b2 181C     		add	r0, r3, #0
 6607 03b4 FE21     		mov	r1, #254
 6608 03b6 8905     		lsl	r1, r1, #22
 6609 03b8 FFF7FEFF 		bl	__aeabi_fadd
 6610 03bc 031C     		add	r3, r0, #0
 6611 03be 181C     		add	r0, r3, #0
 6612 03c0 FC21     		mov	r1, #252
 6613 03c2 8905     		lsl	r1, r1, #22
 6614 03c4 FFF7FEFF 		bl	__aeabi_fmul
 6615 03c8 031C     		add	r3, r0, #0
 6616 03ca 5B00     		lsl	r3, r3, #1
 6617 03cc 5B08     		lsr	r3, r3, #1
 6618 03ce 181C     		add	r0, r3, #0
 6619 03d0 FFF7FEFF 		bl	__aeabi_f2d
 6620 03d4 031C     		mov	r3, r0
 6621 03d6 0C1C     		mov	r4, r1
 6622 03d8 181C     		mov	r0, r3
 6623 03da 211C     		mov	r1, r4
 6624 03dc FFF7FEFF 		bl	sqrt
 6625 03e0 031C     		mov	r3, r0
 6626 03e2 0C1C     		mov	r4, r1
 6627 03e4 181C     		mov	r0, r3
 6628 03e6 211C     		mov	r1, r4
 6629 03e8 FFF7FEFF 		bl	__aeabi_d2f
 6630 03ec 031C     		add	r3, r0, #0
 6631 03ee 8022     		mov	r2, #128
 6632 03f0 1206     		lsl	r2, r2, #24
 6633 03f2 5340     		eor	r3, r2
 6634 03f4 2B60     		str	r3, [r5]
 6635              	.L247:
1149:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// the resulting rotation axis is normalised 
1150:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// set the rotation angle eta to 180 degrees 
1151:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	*pfeta = 180.0F;
 6636              		.loc 1 1151 0
 6637 03f6 7B68     		ldr	r3, [r7, #4]
 6638 03f8 044A     		ldr	r2, .L260+8
 6639 03fa 1A60     		str	r2, [r3]
1152:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1153:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	return;
 6640              		.loc 1 1153 0
 6641 03fc C046     		mov	r8, r8
 6642              	.L231:
1154:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** }
 6643              		.loc 1 1154 0
 6644 03fe BD46     		mov	sp, r7
 6645 0400 06B0     		add	sp, sp, #24
 6646              		@ sp needed for prologue
 6647 0402 B0BD     		pop	{r4, r5, r7, pc}
 6648              	.L261:
 6649              		.align	2
 6650              	.L260:
 6651 0404 00004040 		.word	1077936128
 6652 0408 000080BF 		.word	-1082130432
 6653 040c 00003443 		.word	1127481344
 6654 0410 E12E6542 		.word	1113927393
 6655              		.cfi_endproc
 6656              	.LFE18:
 6658              		.section	.text.fRotationMatrixFromAxisAngleDeg,"ax",%progbits
 6659              		.align	2
 6660              		.global	fRotationMatrixFromAxisAngleDeg
 6661              		.code	16
 6662              		.thumb_func
 6664              	fRotationMatrixFromAxisAngleDeg:
 6665              	.LFB19:
1155:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1156:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** // calculate a rotation matrix from the rotation axis and angles 
1157:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** void fRotationMatrixFromAxisAngleDeg(float **R, float **n, float feta)
1158:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** {
 6666              		.loc 1 1158 0
 6667              		.cfi_startproc
 6668 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 6669              	.LCFI54:
 6670              		.cfi_def_cfa_offset 20
 6671              		.cfi_offset 4, -20
 6672              		.cfi_offset 5, -16
 6673              		.cfi_offset 6, -12
 6674              		.cfi_offset 7, -8
 6675              		.cfi_offset 14, -4
 6676 0002 89B0     		sub	sp, sp, #36
 6677              	.LCFI55:
 6678              		.cfi_def_cfa_offset 56
 6679 0004 00AF     		add	r7, sp, #0
 6680              	.LCFI56:
 6681              		.cfi_def_cfa_register 7
 6682 0006 F860     		str	r0, [r7, #12]
 6683 0008 B960     		str	r1, [r7, #8]
 6684 000a 7A60     		str	r2, [r7, #4]
1159:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	float fsineta, fcoseta;		// sin(eta) and cos(eta) 
1160:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	float f1mcoseta;			// 1.-cos(eta) 
1161:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	float ftmp;					// scratch variable
1162:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1163:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// for safety, provide identity matrix (zero rotation) if null axis is specified 
1164:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	if ((n[0][0] == 0.0F) && (n[1][0] == 0.0F) && (n[2][0] == 0.0F))
 6685              		.loc 1 1164 0
 6686 000c BB68     		ldr	r3, [r7, #8]
 6687 000e 1B68     		ldr	r3, [r3]
 6688 0010 1B68     		ldr	r3, [r3]
 6689 0012 181C     		add	r0, r3, #0
 6690 0014 0021     		mov	r1, #0
 6691 0016 FFF7FEFF 		bl	__aeabi_fcmpeq
 6692 001a 031C     		mov	r3, r0
 6693 001c 002B     		cmp	r3, #0
 6694 001e 48D0     		beq	.L263
 6695              	.L269:
 6696              		.loc 1 1164 0 is_stmt 0
 6697 0020 BB68     		ldr	r3, [r7, #8]
 6698 0022 0433     		add	r3, r3, #4
 6699 0024 1B68     		ldr	r3, [r3]
 6700 0026 1B68     		ldr	r3, [r3]
 6701 0028 181C     		add	r0, r3, #0
 6702 002a 0021     		mov	r1, #0
 6703 002c FFF7FEFF 		bl	__aeabi_fcmpeq
 6704 0030 031C     		mov	r3, r0
 6705 0032 002B     		cmp	r3, #0
 6706 0034 3DD0     		beq	.L263
 6707              	.L270:
 6708 0036 BB68     		ldr	r3, [r7, #8]
 6709 0038 0833     		add	r3, r3, #8
 6710 003a 1B68     		ldr	r3, [r3]
 6711 003c 1B68     		ldr	r3, [r3]
 6712 003e 181C     		add	r0, r3, #0
 6713 0040 0021     		mov	r1, #0
 6714 0042 FFF7FEFF 		bl	__aeabi_fcmpeq
 6715 0046 031C     		mov	r3, r0
 6716 0048 002B     		cmp	r3, #0
 6717 004a 32D0     		beq	.L263
 6718              	.L271:
1165:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	{
1166:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		R[0][0] = R[1][1]= R[2][2] = 1.0F;
 6719              		.loc 1 1166 0 is_stmt 1
 6720 004c FB68     		ldr	r3, [r7, #12]
 6721 004e 1968     		ldr	r1, [r3]
 6722 0050 FB68     		ldr	r3, [r7, #12]
 6723 0052 0433     		add	r3, r3, #4
 6724 0054 1B68     		ldr	r3, [r3]
 6725 0056 0433     		add	r3, r3, #4
 6726 0058 FA68     		ldr	r2, [r7, #12]
 6727 005a 0832     		add	r2, r2, #8
 6728 005c 1268     		ldr	r2, [r2]
 6729 005e 0832     		add	r2, r2, #8
 6730 0060 FE20     		mov	r0, #254
 6731 0062 8005     		lsl	r0, r0, #22
 6732 0064 1060     		str	r0, [r2]
 6733 0066 1268     		ldr	r2, [r2]
 6734 0068 1A60     		str	r2, [r3]
 6735 006a 1B68     		ldr	r3, [r3]
 6736 006c 0B60     		str	r3, [r1]
1167:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		R[0][1] = R[0][2] = R[1][0] = R[1][2] = R[2][0] = R[2][1] = 0.0F;
 6737              		.loc 1 1167 0
 6738 006e FB68     		ldr	r3, [r7, #12]
 6739 0070 1B68     		ldr	r3, [r3]
 6740 0072 1D1D     		add	r5, r3, #4
 6741 0074 FB68     		ldr	r3, [r7, #12]
 6742 0076 1B68     		ldr	r3, [r3]
 6743 0078 0833     		add	r3, r3, #8
 6744 007a FA68     		ldr	r2, [r7, #12]
 6745 007c 0432     		add	r2, r2, #4
 6746 007e 1268     		ldr	r2, [r2]
 6747 0080 F968     		ldr	r1, [r7, #12]
 6748 0082 0431     		add	r1, r1, #4
 6749 0084 0968     		ldr	r1, [r1]
 6750 0086 0831     		add	r1, r1, #8
 6751 0088 F868     		ldr	r0, [r7, #12]
 6752 008a 0830     		add	r0, r0, #8
 6753 008c 0068     		ldr	r0, [r0]
 6754 008e FC68     		ldr	r4, [r7, #12]
 6755 0090 0834     		add	r4, r4, #8
 6756 0092 2468     		ldr	r4, [r4]
 6757 0094 0434     		add	r4, r4, #4
 6758 0096 0026     		mov	r6, #0
 6759 0098 2660     		str	r6, [r4]
 6760 009a 2468     		ldr	r4, [r4]
 6761 009c 0460     		str	r4, [r0]
 6762 009e 0068     		ldr	r0, [r0]
 6763 00a0 0860     		str	r0, [r1]
 6764 00a2 0968     		ldr	r1, [r1]
 6765 00a4 1160     		str	r1, [r2]
 6766 00a6 1268     		ldr	r2, [r2]
 6767 00a8 1A60     		str	r2, [r3]
 6768 00aa 1B68     		ldr	r3, [r3]
 6769 00ac 2B60     		str	r3, [r5]
1168:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	}
1169:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	else
1170:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	{
1171:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		// calculate the sine and cosine of the rotation angle 
1172:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		fsineta = (float)sin(feta * DegToRad);
1173:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		fcoseta = (float)cos(feta * DegToRad);
1174:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		f1mcoseta = 1.0F - fcoseta;
1175:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1176:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		// for safety, normalise the rotation axis 
1177:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		ftmp = 1.0F / (float)sqrt(n[0][0] * n[0][0] + n[1][0] * n[1][0] + n[2][0] * n[2][0]);
1178:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		n[0][0] *= ftmp;
1179:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		n[1][0] *= ftmp;
1180:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		n[2][0] *= ftmp;
1181:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1182:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		// construct the remaining elements of the rotation matrix 
1183:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		R[0][0] = n[0][0] * n[0][0] * f1mcoseta + fcoseta;
1184:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		R[1][1] = n[1][0] * n[1][0] * f1mcoseta + fcoseta;
1185:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		R[2][2] = n[2][0] * n[2][0] * f1mcoseta + fcoseta;
1186:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		R[0][1] = n[0][0] * n[1][0] * f1mcoseta + n[2][0] * fsineta;
1187:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		R[1][0] = n[0][0] * n[1][0] * f1mcoseta - n[2][0] * fsineta;
1188:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		R[0][2] = n[0][0] * n[2][0] * f1mcoseta - n[1][0] * fsineta;
1189:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		R[2][0] = n[0][0] * n[2][0] * f1mcoseta + n[1][0] * fsineta;
1190:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		R[1][2] = n[1][0] * n[2][0] * f1mcoseta + n[0][0] * fsineta;
1191:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		R[2][1] = n[1][0] * n[2][0] * f1mcoseta - n[0][0] * fsineta;
1192:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	}
1193:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1194:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	return;
 6770              		.loc 1 1194 0
 6771 00ae C046     		mov	r8, r8
 6772 00b0 CCE1     		b	.L272
 6773              	.L263:
1172:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		fsineta = (float)sin(feta * DegToRad);
 6774              		.loc 1 1172 0
 6775 00b2 7868     		ldr	r0, [r7, #4]
 6776 00b4 E749     		ldr	r1, .L273
 6777 00b6 FFF7FEFF 		bl	__aeabi_fmul
 6778 00ba 031C     		add	r3, r0, #0
 6779 00bc 181C     		add	r0, r3, #0
 6780 00be FFF7FEFF 		bl	__aeabi_f2d
 6781 00c2 031C     		mov	r3, r0
 6782 00c4 0C1C     		mov	r4, r1
 6783 00c6 181C     		mov	r0, r3
 6784 00c8 211C     		mov	r1, r4
 6785 00ca FFF7FEFF 		bl	sin
 6786 00ce 031C     		mov	r3, r0
 6787 00d0 0C1C     		mov	r4, r1
 6788 00d2 181C     		mov	r0, r3
 6789 00d4 211C     		mov	r1, r4
 6790 00d6 FFF7FEFF 		bl	__aeabi_d2f
 6791 00da 031C     		add	r3, r0, #0
 6792 00dc FB61     		str	r3, [r7, #28]
1173:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		fcoseta = (float)cos(feta * DegToRad);
 6793              		.loc 1 1173 0
 6794 00de 7868     		ldr	r0, [r7, #4]
 6795 00e0 DC49     		ldr	r1, .L273
 6796 00e2 FFF7FEFF 		bl	__aeabi_fmul
 6797 00e6 031C     		add	r3, r0, #0
 6798 00e8 181C     		add	r0, r3, #0
 6799 00ea FFF7FEFF 		bl	__aeabi_f2d
 6800 00ee 031C     		mov	r3, r0
 6801 00f0 0C1C     		mov	r4, r1
 6802 00f2 181C     		mov	r0, r3
 6803 00f4 211C     		mov	r1, r4
 6804 00f6 FFF7FEFF 		bl	cos
 6805 00fa 031C     		mov	r3, r0
 6806 00fc 0C1C     		mov	r4, r1
 6807 00fe 181C     		mov	r0, r3
 6808 0100 211C     		mov	r1, r4
 6809 0102 FFF7FEFF 		bl	__aeabi_d2f
 6810 0106 031C     		add	r3, r0, #0
 6811 0108 BB61     		str	r3, [r7, #24]
1174:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		f1mcoseta = 1.0F - fcoseta;
 6812              		.loc 1 1174 0
 6813 010a FE20     		mov	r0, #254
 6814 010c 8005     		lsl	r0, r0, #22
 6815 010e B969     		ldr	r1, [r7, #24]
 6816 0110 FFF7FEFF 		bl	__aeabi_fsub
 6817 0114 031C     		add	r3, r0, #0
 6818 0116 7B61     		str	r3, [r7, #20]
1177:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		ftmp = 1.0F / (float)sqrt(n[0][0] * n[0][0] + n[1][0] * n[1][0] + n[2][0] * n[2][0]);
 6819              		.loc 1 1177 0
 6820 0118 BB68     		ldr	r3, [r7, #8]
 6821 011a 1B68     		ldr	r3, [r3]
 6822 011c 1A68     		ldr	r2, [r3]
 6823 011e BB68     		ldr	r3, [r7, #8]
 6824 0120 1B68     		ldr	r3, [r3]
 6825 0122 1B68     		ldr	r3, [r3]
 6826 0124 101C     		add	r0, r2, #0
 6827 0126 191C     		add	r1, r3, #0
 6828 0128 FFF7FEFF 		bl	__aeabi_fmul
 6829 012c 031C     		add	r3, r0, #0
 6830 012e 1C1C     		add	r4, r3, #0
 6831 0130 BB68     		ldr	r3, [r7, #8]
 6832 0132 0433     		add	r3, r3, #4
 6833 0134 1B68     		ldr	r3, [r3]
 6834 0136 1A68     		ldr	r2, [r3]
 6835 0138 BB68     		ldr	r3, [r7, #8]
 6836 013a 0433     		add	r3, r3, #4
 6837 013c 1B68     		ldr	r3, [r3]
 6838 013e 1B68     		ldr	r3, [r3]
 6839 0140 101C     		add	r0, r2, #0
 6840 0142 191C     		add	r1, r3, #0
 6841 0144 FFF7FEFF 		bl	__aeabi_fmul
 6842 0148 031C     		add	r3, r0, #0
 6843 014a 201C     		add	r0, r4, #0
 6844 014c 191C     		add	r1, r3, #0
 6845 014e FFF7FEFF 		bl	__aeabi_fadd
 6846 0152 031C     		add	r3, r0, #0
 6847 0154 1C1C     		add	r4, r3, #0
 6848 0156 BB68     		ldr	r3, [r7, #8]
 6849 0158 0833     		add	r3, r3, #8
 6850 015a 1B68     		ldr	r3, [r3]
 6851 015c 1A68     		ldr	r2, [r3]
 6852 015e BB68     		ldr	r3, [r7, #8]
 6853 0160 0833     		add	r3, r3, #8
 6854 0162 1B68     		ldr	r3, [r3]
 6855 0164 1B68     		ldr	r3, [r3]
 6856 0166 101C     		add	r0, r2, #0
 6857 0168 191C     		add	r1, r3, #0
 6858 016a FFF7FEFF 		bl	__aeabi_fmul
 6859 016e 031C     		add	r3, r0, #0
 6860 0170 201C     		add	r0, r4, #0
 6861 0172 191C     		add	r1, r3, #0
 6862 0174 FFF7FEFF 		bl	__aeabi_fadd
 6863 0178 031C     		add	r3, r0, #0
 6864 017a 181C     		add	r0, r3, #0
 6865 017c FFF7FEFF 		bl	__aeabi_f2d
 6866 0180 031C     		mov	r3, r0
 6867 0182 0C1C     		mov	r4, r1
 6868 0184 181C     		mov	r0, r3
 6869 0186 211C     		mov	r1, r4
 6870 0188 FFF7FEFF 		bl	sqrt
 6871 018c 031C     		mov	r3, r0
 6872 018e 0C1C     		mov	r4, r1
 6873 0190 181C     		mov	r0, r3
 6874 0192 211C     		mov	r1, r4
 6875 0194 FFF7FEFF 		bl	__aeabi_d2f
 6876 0198 031C     		add	r3, r0, #0
 6877 019a FE20     		mov	r0, #254
 6878 019c 8005     		lsl	r0, r0, #22
 6879 019e 191C     		add	r1, r3, #0
 6880 01a0 FFF7FEFF 		bl	__aeabi_fdiv
 6881 01a4 031C     		add	r3, r0, #0
 6882 01a6 3B61     		str	r3, [r7, #16]
1178:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		n[0][0] *= ftmp;
 6883              		.loc 1 1178 0
 6884 01a8 BB68     		ldr	r3, [r7, #8]
 6885 01aa 1C68     		ldr	r4, [r3]
 6886 01ac BB68     		ldr	r3, [r7, #8]
 6887 01ae 1B68     		ldr	r3, [r3]
 6888 01b0 1B68     		ldr	r3, [r3]
 6889 01b2 181C     		add	r0, r3, #0
 6890 01b4 3969     		ldr	r1, [r7, #16]
 6891 01b6 FFF7FEFF 		bl	__aeabi_fmul
 6892 01ba 031C     		add	r3, r0, #0
 6893 01bc 2360     		str	r3, [r4]
1179:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		n[1][0] *= ftmp;
 6894              		.loc 1 1179 0
 6895 01be BB68     		ldr	r3, [r7, #8]
 6896 01c0 0433     		add	r3, r3, #4
 6897 01c2 1C68     		ldr	r4, [r3]
 6898 01c4 BB68     		ldr	r3, [r7, #8]
 6899 01c6 0433     		add	r3, r3, #4
 6900 01c8 1B68     		ldr	r3, [r3]
 6901 01ca 1B68     		ldr	r3, [r3]
 6902 01cc 181C     		add	r0, r3, #0
 6903 01ce 3969     		ldr	r1, [r7, #16]
 6904 01d0 FFF7FEFF 		bl	__aeabi_fmul
 6905 01d4 031C     		add	r3, r0, #0
 6906 01d6 2360     		str	r3, [r4]
1180:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		n[2][0] *= ftmp;
 6907              		.loc 1 1180 0
 6908 01d8 BB68     		ldr	r3, [r7, #8]
 6909 01da 0833     		add	r3, r3, #8
 6910 01dc 1C68     		ldr	r4, [r3]
 6911 01de BB68     		ldr	r3, [r7, #8]
 6912 01e0 0833     		add	r3, r3, #8
 6913 01e2 1B68     		ldr	r3, [r3]
 6914 01e4 1B68     		ldr	r3, [r3]
 6915 01e6 181C     		add	r0, r3, #0
 6916 01e8 3969     		ldr	r1, [r7, #16]
 6917 01ea FFF7FEFF 		bl	__aeabi_fmul
 6918 01ee 031C     		add	r3, r0, #0
 6919 01f0 2360     		str	r3, [r4]
1183:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		R[0][0] = n[0][0] * n[0][0] * f1mcoseta + fcoseta;
 6920              		.loc 1 1183 0
 6921 01f2 FB68     		ldr	r3, [r7, #12]
 6922 01f4 1C68     		ldr	r4, [r3]
 6923 01f6 BB68     		ldr	r3, [r7, #8]
 6924 01f8 1B68     		ldr	r3, [r3]
 6925 01fa 1A68     		ldr	r2, [r3]
 6926 01fc BB68     		ldr	r3, [r7, #8]
 6927 01fe 1B68     		ldr	r3, [r3]
 6928 0200 1B68     		ldr	r3, [r3]
 6929 0202 101C     		add	r0, r2, #0
 6930 0204 191C     		add	r1, r3, #0
 6931 0206 FFF7FEFF 		bl	__aeabi_fmul
 6932 020a 031C     		add	r3, r0, #0
 6933 020c 181C     		add	r0, r3, #0
 6934 020e 7969     		ldr	r1, [r7, #20]
 6935 0210 FFF7FEFF 		bl	__aeabi_fmul
 6936 0214 031C     		add	r3, r0, #0
 6937 0216 181C     		add	r0, r3, #0
 6938 0218 B969     		ldr	r1, [r7, #24]
 6939 021a FFF7FEFF 		bl	__aeabi_fadd
 6940 021e 031C     		add	r3, r0, #0
 6941 0220 2360     		str	r3, [r4]
1184:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		R[1][1] = n[1][0] * n[1][0] * f1mcoseta + fcoseta;
 6942              		.loc 1 1184 0
 6943 0222 FB68     		ldr	r3, [r7, #12]
 6944 0224 0433     		add	r3, r3, #4
 6945 0226 1B68     		ldr	r3, [r3]
 6946 0228 1C1D     		add	r4, r3, #4
 6947 022a BB68     		ldr	r3, [r7, #8]
 6948 022c 0433     		add	r3, r3, #4
 6949 022e 1B68     		ldr	r3, [r3]
 6950 0230 1A68     		ldr	r2, [r3]
 6951 0232 BB68     		ldr	r3, [r7, #8]
 6952 0234 0433     		add	r3, r3, #4
 6953 0236 1B68     		ldr	r3, [r3]
 6954 0238 1B68     		ldr	r3, [r3]
 6955 023a 101C     		add	r0, r2, #0
 6956 023c 191C     		add	r1, r3, #0
 6957 023e FFF7FEFF 		bl	__aeabi_fmul
 6958 0242 031C     		add	r3, r0, #0
 6959 0244 181C     		add	r0, r3, #0
 6960 0246 7969     		ldr	r1, [r7, #20]
 6961 0248 FFF7FEFF 		bl	__aeabi_fmul
 6962 024c 031C     		add	r3, r0, #0
 6963 024e 181C     		add	r0, r3, #0
 6964 0250 B969     		ldr	r1, [r7, #24]
 6965 0252 FFF7FEFF 		bl	__aeabi_fadd
 6966 0256 031C     		add	r3, r0, #0
 6967 0258 2360     		str	r3, [r4]
1185:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		R[2][2] = n[2][0] * n[2][0] * f1mcoseta + fcoseta;
 6968              		.loc 1 1185 0
 6969 025a FB68     		ldr	r3, [r7, #12]
 6970 025c 0833     		add	r3, r3, #8
 6971 025e 1B68     		ldr	r3, [r3]
 6972 0260 1C1C     		mov	r4, r3
 6973 0262 0834     		add	r4, r4, #8
 6974 0264 BB68     		ldr	r3, [r7, #8]
 6975 0266 0833     		add	r3, r3, #8
 6976 0268 1B68     		ldr	r3, [r3]
 6977 026a 1A68     		ldr	r2, [r3]
 6978 026c BB68     		ldr	r3, [r7, #8]
 6979 026e 0833     		add	r3, r3, #8
 6980 0270 1B68     		ldr	r3, [r3]
 6981 0272 1B68     		ldr	r3, [r3]
 6982 0274 101C     		add	r0, r2, #0
 6983 0276 191C     		add	r1, r3, #0
 6984 0278 FFF7FEFF 		bl	__aeabi_fmul
 6985 027c 031C     		add	r3, r0, #0
 6986 027e 181C     		add	r0, r3, #0
 6987 0280 7969     		ldr	r1, [r7, #20]
 6988 0282 FFF7FEFF 		bl	__aeabi_fmul
 6989 0286 031C     		add	r3, r0, #0
 6990 0288 181C     		add	r0, r3, #0
 6991 028a B969     		ldr	r1, [r7, #24]
 6992 028c FFF7FEFF 		bl	__aeabi_fadd
 6993 0290 031C     		add	r3, r0, #0
 6994 0292 2360     		str	r3, [r4]
1186:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		R[0][1] = n[0][0] * n[1][0] * f1mcoseta + n[2][0] * fsineta;
 6995              		.loc 1 1186 0
 6996 0294 FB68     		ldr	r3, [r7, #12]
 6997 0296 1B68     		ldr	r3, [r3]
 6998 0298 1C1D     		add	r4, r3, #4
 6999 029a BB68     		ldr	r3, [r7, #8]
 7000 029c 1B68     		ldr	r3, [r3]
 7001 029e 1A68     		ldr	r2, [r3]
 7002 02a0 BB68     		ldr	r3, [r7, #8]
 7003 02a2 0433     		add	r3, r3, #4
 7004 02a4 1B68     		ldr	r3, [r3]
 7005 02a6 1B68     		ldr	r3, [r3]
 7006 02a8 101C     		add	r0, r2, #0
 7007 02aa 191C     		add	r1, r3, #0
 7008 02ac FFF7FEFF 		bl	__aeabi_fmul
 7009 02b0 031C     		add	r3, r0, #0
 7010 02b2 181C     		add	r0, r3, #0
 7011 02b4 7969     		ldr	r1, [r7, #20]
 7012 02b6 FFF7FEFF 		bl	__aeabi_fmul
 7013 02ba 031C     		add	r3, r0, #0
 7014 02bc 1D1C     		add	r5, r3, #0
 7015 02be BB68     		ldr	r3, [r7, #8]
 7016 02c0 0833     		add	r3, r3, #8
 7017 02c2 1B68     		ldr	r3, [r3]
 7018 02c4 1B68     		ldr	r3, [r3]
 7019 02c6 181C     		add	r0, r3, #0
 7020 02c8 F969     		ldr	r1, [r7, #28]
 7021 02ca FFF7FEFF 		bl	__aeabi_fmul
 7022 02ce 031C     		add	r3, r0, #0
 7023 02d0 281C     		add	r0, r5, #0
 7024 02d2 191C     		add	r1, r3, #0
 7025 02d4 FFF7FEFF 		bl	__aeabi_fadd
 7026 02d8 031C     		add	r3, r0, #0
 7027 02da 2360     		str	r3, [r4]
1187:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		R[1][0] = n[0][0] * n[1][0] * f1mcoseta - n[2][0] * fsineta;
 7028              		.loc 1 1187 0
 7029 02dc FB68     		ldr	r3, [r7, #12]
 7030 02de 0433     		add	r3, r3, #4
 7031 02e0 1C68     		ldr	r4, [r3]
 7032 02e2 BB68     		ldr	r3, [r7, #8]
 7033 02e4 1B68     		ldr	r3, [r3]
 7034 02e6 1A68     		ldr	r2, [r3]
 7035 02e8 BB68     		ldr	r3, [r7, #8]
 7036 02ea 0433     		add	r3, r3, #4
 7037 02ec 1B68     		ldr	r3, [r3]
 7038 02ee 1B68     		ldr	r3, [r3]
 7039 02f0 101C     		add	r0, r2, #0
 7040 02f2 191C     		add	r1, r3, #0
 7041 02f4 FFF7FEFF 		bl	__aeabi_fmul
 7042 02f8 031C     		add	r3, r0, #0
 7043 02fa 181C     		add	r0, r3, #0
 7044 02fc 7969     		ldr	r1, [r7, #20]
 7045 02fe FFF7FEFF 		bl	__aeabi_fmul
 7046 0302 031C     		add	r3, r0, #0
 7047 0304 1D1C     		add	r5, r3, #0
 7048 0306 BB68     		ldr	r3, [r7, #8]
 7049 0308 0833     		add	r3, r3, #8
 7050 030a 1B68     		ldr	r3, [r3]
 7051 030c 1B68     		ldr	r3, [r3]
 7052 030e 181C     		add	r0, r3, #0
 7053 0310 F969     		ldr	r1, [r7, #28]
 7054 0312 FFF7FEFF 		bl	__aeabi_fmul
 7055 0316 031C     		add	r3, r0, #0
 7056 0318 281C     		add	r0, r5, #0
 7057 031a 191C     		add	r1, r3, #0
 7058 031c FFF7FEFF 		bl	__aeabi_fsub
 7059 0320 031C     		add	r3, r0, #0
 7060 0322 2360     		str	r3, [r4]
1188:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		R[0][2] = n[0][0] * n[2][0] * f1mcoseta - n[1][0] * fsineta;
 7061              		.loc 1 1188 0
 7062 0324 FB68     		ldr	r3, [r7, #12]
 7063 0326 1B68     		ldr	r3, [r3]
 7064 0328 1C1C     		mov	r4, r3
 7065 032a 0834     		add	r4, r4, #8
 7066 032c BB68     		ldr	r3, [r7, #8]
 7067 032e 1B68     		ldr	r3, [r3]
 7068 0330 1A68     		ldr	r2, [r3]
 7069 0332 BB68     		ldr	r3, [r7, #8]
 7070 0334 0833     		add	r3, r3, #8
 7071 0336 1B68     		ldr	r3, [r3]
 7072 0338 1B68     		ldr	r3, [r3]
 7073 033a 101C     		add	r0, r2, #0
 7074 033c 191C     		add	r1, r3, #0
 7075 033e FFF7FEFF 		bl	__aeabi_fmul
 7076 0342 031C     		add	r3, r0, #0
 7077 0344 181C     		add	r0, r3, #0
 7078 0346 7969     		ldr	r1, [r7, #20]
 7079 0348 FFF7FEFF 		bl	__aeabi_fmul
 7080 034c 031C     		add	r3, r0, #0
 7081 034e 1D1C     		add	r5, r3, #0
 7082 0350 BB68     		ldr	r3, [r7, #8]
 7083 0352 0433     		add	r3, r3, #4
 7084 0354 1B68     		ldr	r3, [r3]
 7085 0356 1B68     		ldr	r3, [r3]
 7086 0358 181C     		add	r0, r3, #0
 7087 035a F969     		ldr	r1, [r7, #28]
 7088 035c FFF7FEFF 		bl	__aeabi_fmul
 7089 0360 031C     		add	r3, r0, #0
 7090 0362 281C     		add	r0, r5, #0
 7091 0364 191C     		add	r1, r3, #0
 7092 0366 FFF7FEFF 		bl	__aeabi_fsub
 7093 036a 031C     		add	r3, r0, #0
 7094 036c 2360     		str	r3, [r4]
1189:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		R[2][0] = n[0][0] * n[2][0] * f1mcoseta + n[1][0] * fsineta;
 7095              		.loc 1 1189 0
 7096 036e FB68     		ldr	r3, [r7, #12]
 7097 0370 0833     		add	r3, r3, #8
 7098 0372 1C68     		ldr	r4, [r3]
 7099 0374 BB68     		ldr	r3, [r7, #8]
 7100 0376 1B68     		ldr	r3, [r3]
 7101 0378 1A68     		ldr	r2, [r3]
 7102 037a BB68     		ldr	r3, [r7, #8]
 7103 037c 0833     		add	r3, r3, #8
 7104 037e 1B68     		ldr	r3, [r3]
 7105 0380 1B68     		ldr	r3, [r3]
 7106 0382 101C     		add	r0, r2, #0
 7107 0384 191C     		add	r1, r3, #0
 7108 0386 FFF7FEFF 		bl	__aeabi_fmul
 7109 038a 031C     		add	r3, r0, #0
 7110 038c 181C     		add	r0, r3, #0
 7111 038e 7969     		ldr	r1, [r7, #20]
 7112 0390 FFF7FEFF 		bl	__aeabi_fmul
 7113 0394 031C     		add	r3, r0, #0
 7114 0396 1D1C     		add	r5, r3, #0
 7115 0398 BB68     		ldr	r3, [r7, #8]
 7116 039a 0433     		add	r3, r3, #4
 7117 039c 1B68     		ldr	r3, [r3]
 7118 039e 1B68     		ldr	r3, [r3]
 7119 03a0 181C     		add	r0, r3, #0
 7120 03a2 F969     		ldr	r1, [r7, #28]
 7121 03a4 FFF7FEFF 		bl	__aeabi_fmul
 7122 03a8 031C     		add	r3, r0, #0
 7123 03aa 281C     		add	r0, r5, #0
 7124 03ac 191C     		add	r1, r3, #0
 7125 03ae FFF7FEFF 		bl	__aeabi_fadd
 7126 03b2 031C     		add	r3, r0, #0
 7127 03b4 2360     		str	r3, [r4]
1190:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		R[1][2] = n[1][0] * n[2][0] * f1mcoseta + n[0][0] * fsineta;
 7128              		.loc 1 1190 0
 7129 03b6 FB68     		ldr	r3, [r7, #12]
 7130 03b8 0433     		add	r3, r3, #4
 7131 03ba 1B68     		ldr	r3, [r3]
 7132 03bc 1C1C     		mov	r4, r3
 7133 03be 0834     		add	r4, r4, #8
 7134 03c0 BB68     		ldr	r3, [r7, #8]
 7135 03c2 0433     		add	r3, r3, #4
 7136 03c4 1B68     		ldr	r3, [r3]
 7137 03c6 1A68     		ldr	r2, [r3]
 7138 03c8 BB68     		ldr	r3, [r7, #8]
 7139 03ca 0833     		add	r3, r3, #8
 7140 03cc 1B68     		ldr	r3, [r3]
 7141 03ce 1B68     		ldr	r3, [r3]
 7142 03d0 101C     		add	r0, r2, #0
 7143 03d2 191C     		add	r1, r3, #0
 7144 03d4 FFF7FEFF 		bl	__aeabi_fmul
 7145 03d8 031C     		add	r3, r0, #0
 7146 03da 181C     		add	r0, r3, #0
 7147 03dc 7969     		ldr	r1, [r7, #20]
 7148 03de FFF7FEFF 		bl	__aeabi_fmul
 7149 03e2 031C     		add	r3, r0, #0
 7150 03e4 1D1C     		add	r5, r3, #0
 7151 03e6 BB68     		ldr	r3, [r7, #8]
 7152 03e8 1B68     		ldr	r3, [r3]
 7153 03ea 1B68     		ldr	r3, [r3]
 7154 03ec 181C     		add	r0, r3, #0
 7155 03ee F969     		ldr	r1, [r7, #28]
 7156 03f0 FFF7FEFF 		bl	__aeabi_fmul
 7157 03f4 031C     		add	r3, r0, #0
 7158 03f6 281C     		add	r0, r5, #0
 7159 03f8 191C     		add	r1, r3, #0
 7160 03fa FFF7FEFF 		bl	__aeabi_fadd
 7161 03fe 031C     		add	r3, r0, #0
 7162 0400 2360     		str	r3, [r4]
1191:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		R[2][1] = n[1][0] * n[2][0] * f1mcoseta - n[0][0] * fsineta;
 7163              		.loc 1 1191 0
 7164 0402 FB68     		ldr	r3, [r7, #12]
 7165 0404 0833     		add	r3, r3, #8
 7166 0406 1B68     		ldr	r3, [r3]
 7167 0408 1C1D     		add	r4, r3, #4
 7168 040a BB68     		ldr	r3, [r7, #8]
 7169 040c 0433     		add	r3, r3, #4
 7170 040e 1B68     		ldr	r3, [r3]
 7171 0410 1A68     		ldr	r2, [r3]
 7172 0412 BB68     		ldr	r3, [r7, #8]
 7173 0414 0833     		add	r3, r3, #8
 7174 0416 1B68     		ldr	r3, [r3]
 7175 0418 1B68     		ldr	r3, [r3]
 7176 041a 101C     		add	r0, r2, #0
 7177 041c 191C     		add	r1, r3, #0
 7178 041e FFF7FEFF 		bl	__aeabi_fmul
 7179 0422 031C     		add	r3, r0, #0
 7180 0424 181C     		add	r0, r3, #0
 7181 0426 7969     		ldr	r1, [r7, #20]
 7182 0428 FFF7FEFF 		bl	__aeabi_fmul
 7183 042c 031C     		add	r3, r0, #0
 7184 042e 1D1C     		add	r5, r3, #0
 7185 0430 BB68     		ldr	r3, [r7, #8]
 7186 0432 1B68     		ldr	r3, [r3]
 7187 0434 1B68     		ldr	r3, [r3]
 7188 0436 181C     		add	r0, r3, #0
 7189 0438 F969     		ldr	r1, [r7, #28]
 7190 043a FFF7FEFF 		bl	__aeabi_fmul
 7191 043e 031C     		add	r3, r0, #0
 7192 0440 281C     		add	r0, r5, #0
 7193 0442 191C     		add	r1, r3, #0
 7194 0444 FFF7FEFF 		bl	__aeabi_fsub
 7195 0448 031C     		add	r3, r0, #0
 7196 044a 2360     		str	r3, [r4]
 7197              	.L272:
 7198              		.loc 1 1194 0
 7199 044c C046     		mov	r8, r8
 7200              	.L262:
1195:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** }
 7201              		.loc 1 1195 0
 7202 044e BD46     		mov	sp, r7
 7203 0450 09B0     		add	sp, sp, #36
 7204              		@ sp needed for prologue
 7205 0452 F0BD     		pop	{r4, r5, r6, r7, pc}
 7206              	.L274:
 7207              		.align	2
 7208              	.L273:
 7209 0454 35FA8E3C 		.word	1016003125
 7210              		.cfi_endproc
 7211              	.LFE19:
 7213              		.section	.text.fNEDAnglesDegFromRotationMatrix,"ax",%progbits
 7214              		.align	2
 7215              		.global	fNEDAnglesDegFromRotationMatrix
 7216              		.code	16
 7217              		.thumb_func
 7219              	fNEDAnglesDegFromRotationMatrix:
 7220              	.LFB20:
1196:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1197:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** // extract the NED angles in degrees from the NED rotation matrix 
1198:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** void fNEDAnglesDegFromRotationMatrix(float **R, float *pfPhiDeg, float *pfTheDeg, float *pfPsiDeg, 
1199:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** {
 7221              		.loc 1 1199 0
 7222              		.cfi_startproc
 7223 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 7224              	.LCFI57:
 7225              		.cfi_def_cfa_offset 20
 7226              		.cfi_offset 4, -20
 7227              		.cfi_offset 5, -16
 7228              		.cfi_offset 6, -12
 7229              		.cfi_offset 7, -8
 7230              		.cfi_offset 14, -4
 7231 0002 85B0     		sub	sp, sp, #20
 7232              	.LCFI58:
 7233              		.cfi_def_cfa_offset 40
 7234 0004 00AF     		add	r7, sp, #0
 7235              	.LCFI59:
 7236              		.cfi_def_cfa_register 7
 7237 0006 F860     		str	r0, [r7, #12]
 7238 0008 B960     		str	r1, [r7, #8]
 7239 000a 7A60     		str	r2, [r7, #4]
 7240 000c 3B60     		str	r3, [r7]
1200:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// calculate the pitch angle range -90 to 90 degrees 
1201:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	if (R[0][2] >= 1.0F)
 7241              		.loc 1 1201 0
 7242 000e FB68     		ldr	r3, [r7, #12]
 7243 0010 1B68     		ldr	r3, [r3]
 7244 0012 0833     		add	r3, r3, #8
 7245 0014 1B68     		ldr	r3, [r3]
 7246 0016 181C     		add	r0, r3, #0
 7247 0018 FE21     		mov	r1, #254
 7248 001a 8905     		lsl	r1, r1, #22
 7249 001c FFF7FEFF 		bl	__aeabi_fcmpge
 7250 0020 031C     		mov	r3, r0
 7251 0022 002B     		cmp	r3, #0
 7252 0024 03D0     		beq	.L287
 7253              	.L284:
1202:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		*pfTheDeg = -90.0F;
 7254              		.loc 1 1202 0
 7255 0026 7B68     		ldr	r3, [r7, #4]
 7256 0028 4D4A     		ldr	r2, .L289
 7257 002a 1A60     		str	r2, [r3]
 7258 002c 2DE0     		b	.L278
 7259              	.L287:
1203:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	else if (R[0][2] <= -1.0F)
 7260              		.loc 1 1203 0
 7261 002e FB68     		ldr	r3, [r7, #12]
 7262 0030 1B68     		ldr	r3, [r3]
 7263 0032 0833     		add	r3, r3, #8
 7264 0034 1B68     		ldr	r3, [r3]
 7265 0036 181C     		add	r0, r3, #0
 7266 0038 4A49     		ldr	r1, .L289+4
 7267 003a FFF7FEFF 		bl	__aeabi_fcmple
 7268 003e 031C     		mov	r3, r0
 7269 0040 002B     		cmp	r3, #0
 7270 0042 03D0     		beq	.L288
 7271              	.L285:
1204:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		*pfTheDeg = 90.0F;
 7272              		.loc 1 1204 0
 7273 0044 7B68     		ldr	r3, [r7, #4]
 7274 0046 484A     		ldr	r2, .L289+8
 7275 0048 1A60     		str	r2, [r3]
 7276 004a 1EE0     		b	.L278
 7277              	.L288:
1205:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	else
1206:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		*pfTheDeg = (float) asin(-R[0][2]) * RadToDeg;
 7278              		.loc 1 1206 0
 7279 004c FB68     		ldr	r3, [r7, #12]
 7280 004e 1B68     		ldr	r3, [r3]
 7281 0050 0833     		add	r3, r3, #8
 7282 0052 1B68     		ldr	r3, [r3]
 7283 0054 8022     		mov	r2, #128
 7284 0056 1206     		lsl	r2, r2, #24
 7285 0058 5340     		eor	r3, r2
 7286 005a 181C     		add	r0, r3, #0
 7287 005c FFF7FEFF 		bl	__aeabi_f2d
 7288 0060 031C     		mov	r3, r0
 7289 0062 0C1C     		mov	r4, r1
 7290 0064 181C     		mov	r0, r3
 7291 0066 211C     		mov	r1, r4
 7292 0068 FFF7FEFF 		bl	asin
 7293 006c 031C     		mov	r3, r0
 7294 006e 0C1C     		mov	r4, r1
 7295 0070 181C     		mov	r0, r3
 7296 0072 211C     		mov	r1, r4
 7297 0074 FFF7FEFF 		bl	__aeabi_d2f
 7298 0078 031C     		add	r3, r0, #0
 7299 007a 181C     		add	r0, r3, #0
 7300 007c 3B49     		ldr	r1, .L289+12
 7301 007e FFF7FEFF 		bl	__aeabi_fmul
 7302 0082 031C     		add	r3, r0, #0
 7303 0084 1A1C     		add	r2, r3, #0
 7304 0086 7B68     		ldr	r3, [r7, #4]
 7305 0088 1A60     		str	r2, [r3]
 7306              	.L278:
1207:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1208:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// calculate the roll angle range -180 to 180 degrees 
1209:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	*pfPhiDeg = (float)atan2(R[1][2], R[2][2]) * RadToDeg;
 7307              		.loc 1 1209 0
 7308 008a FB68     		ldr	r3, [r7, #12]
 7309 008c 0433     		add	r3, r3, #4
 7310 008e 1B68     		ldr	r3, [r3]
 7311 0090 0833     		add	r3, r3, #8
 7312 0092 1B68     		ldr	r3, [r3]
 7313 0094 181C     		add	r0, r3, #0
 7314 0096 FFF7FEFF 		bl	__aeabi_f2d
 7315 009a 051C     		mov	r5, r0
 7316 009c 0E1C     		mov	r6, r1
 7317 009e FB68     		ldr	r3, [r7, #12]
 7318 00a0 0833     		add	r3, r3, #8
 7319 00a2 1B68     		ldr	r3, [r3]
 7320 00a4 0833     		add	r3, r3, #8
 7321 00a6 1B68     		ldr	r3, [r3]
 7322 00a8 181C     		add	r0, r3, #0
 7323 00aa FFF7FEFF 		bl	__aeabi_f2d
 7324 00ae 031C     		mov	r3, r0
 7325 00b0 0C1C     		mov	r4, r1
 7326 00b2 281C     		mov	r0, r5
 7327 00b4 311C     		mov	r1, r6
 7328 00b6 1A1C     		mov	r2, r3
 7329 00b8 231C     		mov	r3, r4
 7330 00ba FFF7FEFF 		bl	atan2
 7331 00be 031C     		mov	r3, r0
 7332 00c0 0C1C     		mov	r4, r1
 7333 00c2 181C     		mov	r0, r3
 7334 00c4 211C     		mov	r1, r4
 7335 00c6 FFF7FEFF 		bl	__aeabi_d2f
 7336 00ca 031C     		add	r3, r0, #0
 7337 00cc 181C     		add	r0, r3, #0
 7338 00ce 2749     		ldr	r1, .L289+12
 7339 00d0 FFF7FEFF 		bl	__aeabi_fmul
 7340 00d4 031C     		add	r3, r0, #0
 7341 00d6 1A1C     		add	r2, r3, #0
 7342 00d8 BB68     		ldr	r3, [r7, #8]
 7343 00da 1A60     		str	r2, [r3]
1210:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1211:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// calculate the yaw and compass angle rangle 0 to 360 degrees 
1212:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	*pfPsiDeg = (float)atan2(R[0][1], R[0][0]) * RadToDeg; 
 7344              		.loc 1 1212 0
 7345 00dc FB68     		ldr	r3, [r7, #12]
 7346 00de 1B68     		ldr	r3, [r3]
 7347 00e0 0433     		add	r3, r3, #4
 7348 00e2 1B68     		ldr	r3, [r3]
 7349 00e4 181C     		add	r0, r3, #0
 7350 00e6 FFF7FEFF 		bl	__aeabi_f2d
 7351 00ea 051C     		mov	r5, r0
 7352 00ec 0E1C     		mov	r6, r1
 7353 00ee FB68     		ldr	r3, [r7, #12]
 7354 00f0 1B68     		ldr	r3, [r3]
 7355 00f2 1B68     		ldr	r3, [r3]
 7356 00f4 181C     		add	r0, r3, #0
 7357 00f6 FFF7FEFF 		bl	__aeabi_f2d
 7358 00fa 031C     		mov	r3, r0
 7359 00fc 0C1C     		mov	r4, r1
 7360 00fe 281C     		mov	r0, r5
 7361 0100 311C     		mov	r1, r6
 7362 0102 1A1C     		mov	r2, r3
 7363 0104 231C     		mov	r3, r4
 7364 0106 FFF7FEFF 		bl	atan2
 7365 010a 031C     		mov	r3, r0
 7366 010c 0C1C     		mov	r4, r1
 7367 010e 181C     		mov	r0, r3
 7368 0110 211C     		mov	r1, r4
 7369 0112 FFF7FEFF 		bl	__aeabi_d2f
 7370 0116 031C     		add	r3, r0, #0
 7371 0118 181C     		add	r0, r3, #0
 7372 011a 1449     		ldr	r1, .L289+12
 7373 011c FFF7FEFF 		bl	__aeabi_fmul
 7374 0120 031C     		add	r3, r0, #0
 7375 0122 1A1C     		add	r2, r3, #0
 7376 0124 3B68     		ldr	r3, [r7]
 7377 0126 1A60     		str	r2, [r3]
1213:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	if (*pfPsiDeg < 0.0F)
 7378              		.loc 1 1213 0
 7379 0128 3B68     		ldr	r3, [r7]
 7380 012a 1B68     		ldr	r3, [r3]
 7381 012c 181C     		add	r0, r3, #0
 7382 012e 0021     		mov	r1, #0
 7383 0130 FFF7FEFF 		bl	__aeabi_fcmplt
 7384 0134 031C     		mov	r3, r0
 7385 0136 002B     		cmp	r3, #0
 7386 0138 09D0     		beq	.L281
 7387              	.L286:
1214:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		*pfPsiDeg += 360.0F;
 7388              		.loc 1 1214 0
 7389 013a 3B68     		ldr	r3, [r7]
 7390 013c 1B68     		ldr	r3, [r3]
 7391 013e 181C     		add	r0, r3, #0
 7392 0140 0B49     		ldr	r1, .L289+16
 7393 0142 FFF7FEFF 		bl	__aeabi_fadd
 7394 0146 031C     		add	r3, r0, #0
 7395 0148 1A1C     		add	r2, r3, #0
 7396 014a 3B68     		ldr	r3, [r7]
 7397 014c 1A60     		str	r2, [r3]
 7398              	.L281:
1215:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	*pfRhoDeg = *pfPsiDeg;
 7399              		.loc 1 1215 0
 7400 014e 3B68     		ldr	r3, [r7]
 7401 0150 1A68     		ldr	r2, [r3]
 7402 0152 BB6A     		ldr	r3, [r7, #40]
 7403 0154 1A60     		str	r2, [r3]
1216:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1217:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	return;
 7404              		.loc 1 1217 0
 7405 0156 C046     		mov	r8, r8
1218:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** }
 7406              		.loc 1 1218 0
 7407 0158 BD46     		mov	sp, r7
 7408 015a 05B0     		add	sp, sp, #20
 7409              		@ sp needed for prologue
 7410 015c F0BD     		pop	{r4, r5, r6, r7, pc}
 7411              	.L290:
 7412 015e C046     		.align	2
 7413              	.L289:
 7414 0160 0000B4C2 		.word	-1028390912
 7415 0164 000080BF 		.word	-1082130432
 7416 0168 0000B442 		.word	1119092736
 7417 016c E12E6542 		.word	1113927393
 7418 0170 0000B443 		.word	1135869952
 7419              		.cfi_endproc
 7420              	.LFE20:
 7422              		.section	.text.fNEDRotationMatrixFromAnglesDeg,"ax",%progbits
 7423              		.align	2
 7424              		.global	fNEDRotationMatrixFromAnglesDeg
 7425              		.code	16
 7426              		.thumb_func
 7428              	fNEDRotationMatrixFromAnglesDeg:
 7429              	.LFB21:
1219:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1220:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1221:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** // construct a NED rotation matrix from the NED Euler angles in degrees 
1222:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** void fNEDRotationMatrixFromAnglesDeg(float **R, float fPhiDeg, float fTheDeg, float fPsiDeg)
1223:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** {
 7430              		.loc 1 1223 0
 7431              		.cfi_startproc
 7432 0000 B0B5     		push	{r4, r5, r7, lr}
 7433              	.LCFI60:
 7434              		.cfi_def_cfa_offset 16
 7435              		.cfi_offset 4, -16
 7436              		.cfi_offset 5, -12
 7437              		.cfi_offset 7, -8
 7438              		.cfi_offset 14, -4
 7439 0002 8AB0     		sub	sp, sp, #40
 7440              	.LCFI61:
 7441              		.cfi_def_cfa_offset 56
 7442 0004 00AF     		add	r7, sp, #0
 7443              	.LCFI62:
 7444              		.cfi_def_cfa_register 7
 7445 0006 F860     		str	r0, [r7, #12]
 7446 0008 B960     		str	r1, [r7, #8]
 7447 000a 7A60     		str	r2, [r7, #4]
 7448 000c 3B60     		str	r3, [r7]
1224:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	float sinPhi, cosPhi, sinThe, cosThe, sinPsi, cosPsi;		// sines and cosines 
1225:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1226:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// calculate the sines and cosines
1227:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	sinPhi = (float) sin(fPhiDeg * DegToRad);
 7449              		.loc 1 1227 0
 7450 000e B868     		ldr	r0, [r7, #8]
 7451 0010 8D49     		ldr	r1, .L293
 7452 0012 FFF7FEFF 		bl	__aeabi_fmul
 7453 0016 031C     		add	r3, r0, #0
 7454 0018 181C     		add	r0, r3, #0
 7455 001a FFF7FEFF 		bl	__aeabi_f2d
 7456 001e 031C     		mov	r3, r0
 7457 0020 0C1C     		mov	r4, r1
 7458 0022 181C     		mov	r0, r3
 7459 0024 211C     		mov	r1, r4
 7460 0026 FFF7FEFF 		bl	sin
 7461 002a 031C     		mov	r3, r0
 7462 002c 0C1C     		mov	r4, r1
 7463 002e 181C     		mov	r0, r3
 7464 0030 211C     		mov	r1, r4
 7465 0032 FFF7FEFF 		bl	__aeabi_d2f
 7466 0036 031C     		add	r3, r0, #0
 7467 0038 7B62     		str	r3, [r7, #36]
1228:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	sinThe = (float) sin(fTheDeg * DegToRad);
 7468              		.loc 1 1228 0
 7469 003a 7868     		ldr	r0, [r7, #4]
 7470 003c 8249     		ldr	r1, .L293
 7471 003e FFF7FEFF 		bl	__aeabi_fmul
 7472 0042 031C     		add	r3, r0, #0
 7473 0044 181C     		add	r0, r3, #0
 7474 0046 FFF7FEFF 		bl	__aeabi_f2d
 7475 004a 031C     		mov	r3, r0
 7476 004c 0C1C     		mov	r4, r1
 7477 004e 181C     		mov	r0, r3
 7478 0050 211C     		mov	r1, r4
 7479 0052 FFF7FEFF 		bl	sin
 7480 0056 031C     		mov	r3, r0
 7481 0058 0C1C     		mov	r4, r1
 7482 005a 181C     		mov	r0, r3
 7483 005c 211C     		mov	r1, r4
 7484 005e FFF7FEFF 		bl	__aeabi_d2f
 7485 0062 031C     		add	r3, r0, #0
 7486 0064 3B62     		str	r3, [r7, #32]
1229:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	sinPsi = (float) sin(fPsiDeg * DegToRad);
 7487              		.loc 1 1229 0
 7488 0066 3868     		ldr	r0, [r7]
 7489 0068 7749     		ldr	r1, .L293
 7490 006a FFF7FEFF 		bl	__aeabi_fmul
 7491 006e 031C     		add	r3, r0, #0
 7492 0070 181C     		add	r0, r3, #0
 7493 0072 FFF7FEFF 		bl	__aeabi_f2d
 7494 0076 031C     		mov	r3, r0
 7495 0078 0C1C     		mov	r4, r1
 7496 007a 181C     		mov	r0, r3
 7497 007c 211C     		mov	r1, r4
 7498 007e FFF7FEFF 		bl	sin
 7499 0082 031C     		mov	r3, r0
 7500 0084 0C1C     		mov	r4, r1
 7501 0086 181C     		mov	r0, r3
 7502 0088 211C     		mov	r1, r4
 7503 008a FFF7FEFF 		bl	__aeabi_d2f
 7504 008e 031C     		add	r3, r0, #0
 7505 0090 FB61     		str	r3, [r7, #28]
1230:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	cosPhi = (float) cos(fPhiDeg * DegToRad);
 7506              		.loc 1 1230 0
 7507 0092 B868     		ldr	r0, [r7, #8]
 7508 0094 6C49     		ldr	r1, .L293
 7509 0096 FFF7FEFF 		bl	__aeabi_fmul
 7510 009a 031C     		add	r3, r0, #0
 7511 009c 181C     		add	r0, r3, #0
 7512 009e FFF7FEFF 		bl	__aeabi_f2d
 7513 00a2 031C     		mov	r3, r0
 7514 00a4 0C1C     		mov	r4, r1
 7515 00a6 181C     		mov	r0, r3
 7516 00a8 211C     		mov	r1, r4
 7517 00aa FFF7FEFF 		bl	cos
 7518 00ae 031C     		mov	r3, r0
 7519 00b0 0C1C     		mov	r4, r1
 7520 00b2 181C     		mov	r0, r3
 7521 00b4 211C     		mov	r1, r4
 7522 00b6 FFF7FEFF 		bl	__aeabi_d2f
 7523 00ba 031C     		add	r3, r0, #0
 7524 00bc BB61     		str	r3, [r7, #24]
1231:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	cosThe = (float) cos(fTheDeg * DegToRad);
 7525              		.loc 1 1231 0
 7526 00be 7868     		ldr	r0, [r7, #4]
 7527 00c0 6149     		ldr	r1, .L293
 7528 00c2 FFF7FEFF 		bl	__aeabi_fmul
 7529 00c6 031C     		add	r3, r0, #0
 7530 00c8 181C     		add	r0, r3, #0
 7531 00ca FFF7FEFF 		bl	__aeabi_f2d
 7532 00ce 031C     		mov	r3, r0
 7533 00d0 0C1C     		mov	r4, r1
 7534 00d2 181C     		mov	r0, r3
 7535 00d4 211C     		mov	r1, r4
 7536 00d6 FFF7FEFF 		bl	cos
 7537 00da 031C     		mov	r3, r0
 7538 00dc 0C1C     		mov	r4, r1
 7539 00de 181C     		mov	r0, r3
 7540 00e0 211C     		mov	r1, r4
 7541 00e2 FFF7FEFF 		bl	__aeabi_d2f
 7542 00e6 031C     		add	r3, r0, #0
 7543 00e8 7B61     		str	r3, [r7, #20]
1232:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	cosPsi = (float) cos(fPsiDeg * DegToRad);
 7544              		.loc 1 1232 0
 7545 00ea 3868     		ldr	r0, [r7]
 7546 00ec 5649     		ldr	r1, .L293
 7547 00ee FFF7FEFF 		bl	__aeabi_fmul
 7548 00f2 031C     		add	r3, r0, #0
 7549 00f4 181C     		add	r0, r3, #0
 7550 00f6 FFF7FEFF 		bl	__aeabi_f2d
 7551 00fa 031C     		mov	r3, r0
 7552 00fc 0C1C     		mov	r4, r1
 7553 00fe 181C     		mov	r0, r3
 7554 0100 211C     		mov	r1, r4
 7555 0102 FFF7FEFF 		bl	cos
 7556 0106 031C     		mov	r3, r0
 7557 0108 0C1C     		mov	r4, r1
 7558 010a 181C     		mov	r0, r3
 7559 010c 211C     		mov	r1, r4
 7560 010e FFF7FEFF 		bl	__aeabi_d2f
 7561 0112 031C     		add	r3, r0, #0
 7562 0114 3B61     		str	r3, [r7, #16]
1233:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1234:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// construct the matrix
1235:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	R[0][0] = cosThe * cosPsi;
 7563              		.loc 1 1235 0
 7564 0116 FB68     		ldr	r3, [r7, #12]
 7565 0118 1C68     		ldr	r4, [r3]
 7566 011a 7869     		ldr	r0, [r7, #20]
 7567 011c 3969     		ldr	r1, [r7, #16]
 7568 011e FFF7FEFF 		bl	__aeabi_fmul
 7569 0122 031C     		add	r3, r0, #0
 7570 0124 2360     		str	r3, [r4]
1236:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	R[0][1] = cosThe * sinPsi;
 7571              		.loc 1 1236 0
 7572 0126 FB68     		ldr	r3, [r7, #12]
 7573 0128 1B68     		ldr	r3, [r3]
 7574 012a 1C1D     		add	r4, r3, #4
 7575 012c 7869     		ldr	r0, [r7, #20]
 7576 012e F969     		ldr	r1, [r7, #28]
 7577 0130 FFF7FEFF 		bl	__aeabi_fmul
 7578 0134 031C     		add	r3, r0, #0
 7579 0136 2360     		str	r3, [r4]
1237:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	R[0][2] = -sinThe;
 7580              		.loc 1 1237 0
 7581 0138 FB68     		ldr	r3, [r7, #12]
 7582 013a 1B68     		ldr	r3, [r3]
 7583 013c 0833     		add	r3, r3, #8
 7584 013e 3A6A     		ldr	r2, [r7, #32]
 7585 0140 8021     		mov	r1, #128
 7586 0142 0906     		lsl	r1, r1, #24
 7587 0144 4A40     		eor	r2, r1
 7588 0146 1A60     		str	r2, [r3]
1238:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	R[1][0] = cosPsi * sinThe * sinPhi - cosPhi * sinPsi;
 7589              		.loc 1 1238 0
 7590 0148 FB68     		ldr	r3, [r7, #12]
 7591 014a 0433     		add	r3, r3, #4
 7592 014c 1C68     		ldr	r4, [r3]
 7593 014e 3869     		ldr	r0, [r7, #16]
 7594 0150 396A     		ldr	r1, [r7, #32]
 7595 0152 FFF7FEFF 		bl	__aeabi_fmul
 7596 0156 031C     		add	r3, r0, #0
 7597 0158 181C     		add	r0, r3, #0
 7598 015a 796A     		ldr	r1, [r7, #36]
 7599 015c FFF7FEFF 		bl	__aeabi_fmul
 7600 0160 031C     		add	r3, r0, #0
 7601 0162 1D1C     		add	r5, r3, #0
 7602 0164 B869     		ldr	r0, [r7, #24]
 7603 0166 F969     		ldr	r1, [r7, #28]
 7604 0168 FFF7FEFF 		bl	__aeabi_fmul
 7605 016c 031C     		add	r3, r0, #0
 7606 016e 281C     		add	r0, r5, #0
 7607 0170 191C     		add	r1, r3, #0
 7608 0172 FFF7FEFF 		bl	__aeabi_fsub
 7609 0176 031C     		add	r3, r0, #0
 7610 0178 2360     		str	r3, [r4]
1239:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	R[1][1] = cosPhi * cosPsi + sinPhi * sinThe * sinPsi;
 7611              		.loc 1 1239 0
 7612 017a FB68     		ldr	r3, [r7, #12]
 7613 017c 0433     		add	r3, r3, #4
 7614 017e 1B68     		ldr	r3, [r3]
 7615 0180 1C1D     		add	r4, r3, #4
 7616 0182 B869     		ldr	r0, [r7, #24]
 7617 0184 3969     		ldr	r1, [r7, #16]
 7618 0186 FFF7FEFF 		bl	__aeabi_fmul
 7619 018a 031C     		add	r3, r0, #0
 7620 018c 1D1C     		add	r5, r3, #0
 7621 018e 786A     		ldr	r0, [r7, #36]
 7622 0190 396A     		ldr	r1, [r7, #32]
 7623 0192 FFF7FEFF 		bl	__aeabi_fmul
 7624 0196 031C     		add	r3, r0, #0
 7625 0198 181C     		add	r0, r3, #0
 7626 019a F969     		ldr	r1, [r7, #28]
 7627 019c FFF7FEFF 		bl	__aeabi_fmul
 7628 01a0 031C     		add	r3, r0, #0
 7629 01a2 281C     		add	r0, r5, #0
 7630 01a4 191C     		add	r1, r3, #0
 7631 01a6 FFF7FEFF 		bl	__aeabi_fadd
 7632 01aa 031C     		add	r3, r0, #0
 7633 01ac 2360     		str	r3, [r4]
1240:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	R[1][2] = cosThe * sinPhi; 
 7634              		.loc 1 1240 0
 7635 01ae FB68     		ldr	r3, [r7, #12]
 7636 01b0 0433     		add	r3, r3, #4
 7637 01b2 1B68     		ldr	r3, [r3]
 7638 01b4 1C1C     		mov	r4, r3
 7639 01b6 0834     		add	r4, r4, #8
 7640 01b8 7869     		ldr	r0, [r7, #20]
 7641 01ba 796A     		ldr	r1, [r7, #36]
 7642 01bc FFF7FEFF 		bl	__aeabi_fmul
 7643 01c0 031C     		add	r3, r0, #0
 7644 01c2 2360     		str	r3, [r4]
1241:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	R[2][0] = cosPhi * cosPsi * sinThe + sinPhi * sinPsi;
 7645              		.loc 1 1241 0
 7646 01c4 FB68     		ldr	r3, [r7, #12]
 7647 01c6 0833     		add	r3, r3, #8
 7648 01c8 1C68     		ldr	r4, [r3]
 7649 01ca B869     		ldr	r0, [r7, #24]
 7650 01cc 3969     		ldr	r1, [r7, #16]
 7651 01ce FFF7FEFF 		bl	__aeabi_fmul
 7652 01d2 031C     		add	r3, r0, #0
 7653 01d4 181C     		add	r0, r3, #0
 7654 01d6 396A     		ldr	r1, [r7, #32]
 7655 01d8 FFF7FEFF 		bl	__aeabi_fmul
 7656 01dc 031C     		add	r3, r0, #0
 7657 01de 1D1C     		add	r5, r3, #0
 7658 01e0 786A     		ldr	r0, [r7, #36]
 7659 01e2 F969     		ldr	r1, [r7, #28]
 7660 01e4 FFF7FEFF 		bl	__aeabi_fmul
 7661 01e8 031C     		add	r3, r0, #0
 7662 01ea 281C     		add	r0, r5, #0
 7663 01ec 191C     		add	r1, r3, #0
 7664 01ee FFF7FEFF 		bl	__aeabi_fadd
 7665 01f2 031C     		add	r3, r0, #0
 7666 01f4 2360     		str	r3, [r4]
1242:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	R[2][1] = cosPhi * sinThe * sinPsi - cosPsi * sinPhi;
 7667              		.loc 1 1242 0
 7668 01f6 FB68     		ldr	r3, [r7, #12]
 7669 01f8 0833     		add	r3, r3, #8
 7670 01fa 1B68     		ldr	r3, [r3]
 7671 01fc 1C1D     		add	r4, r3, #4
 7672 01fe B869     		ldr	r0, [r7, #24]
 7673 0200 396A     		ldr	r1, [r7, #32]
 7674 0202 FFF7FEFF 		bl	__aeabi_fmul
 7675 0206 031C     		add	r3, r0, #0
 7676 0208 181C     		add	r0, r3, #0
 7677 020a F969     		ldr	r1, [r7, #28]
 7678 020c FFF7FEFF 		bl	__aeabi_fmul
 7679 0210 031C     		add	r3, r0, #0
 7680 0212 1D1C     		add	r5, r3, #0
 7681 0214 3869     		ldr	r0, [r7, #16]
 7682 0216 796A     		ldr	r1, [r7, #36]
 7683 0218 FFF7FEFF 		bl	__aeabi_fmul
 7684 021c 031C     		add	r3, r0, #0
 7685 021e 281C     		add	r0, r5, #0
 7686 0220 191C     		add	r1, r3, #0
 7687 0222 FFF7FEFF 		bl	__aeabi_fsub
 7688 0226 031C     		add	r3, r0, #0
 7689 0228 2360     		str	r3, [r4]
1243:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	R[2][2] = cosThe * cosPhi;
 7690              		.loc 1 1243 0
 7691 022a FB68     		ldr	r3, [r7, #12]
 7692 022c 0833     		add	r3, r3, #8
 7693 022e 1B68     		ldr	r3, [r3]
 7694 0230 1C1C     		mov	r4, r3
 7695 0232 0834     		add	r4, r4, #8
 7696 0234 7869     		ldr	r0, [r7, #20]
 7697 0236 B969     		ldr	r1, [r7, #24]
 7698 0238 FFF7FEFF 		bl	__aeabi_fmul
 7699 023c 031C     		add	r3, r0, #0
 7700 023e 2360     		str	r3, [r4]
1244:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1245:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	return;
 7701              		.loc 1 1245 0
 7702 0240 C046     		mov	r8, r8
1246:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** }
 7703              		.loc 1 1246 0
 7704 0242 BD46     		mov	sp, r7
 7705 0244 0AB0     		add	sp, sp, #40
 7706              		@ sp needed for prologue
 7707 0246 B0BD     		pop	{r4, r5, r7, pc}
 7708              	.L294:
 7709              		.align	2
 7710              	.L293:
 7711 0248 35FA8E3C 		.word	1016003125
 7712              		.cfi_endproc
 7713              	.LFE21:
 7715              		.section	.text.fQuaternionFromRotationMatrix,"ax",%progbits
 7716              		.align	2
 7717              		.global	fQuaternionFromRotationMatrix
 7718              		.code	16
 7719              		.thumb_func
 7721              	fQuaternionFromRotationMatrix:
 7722              	.LFB22:
1247:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1248:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** // compute the orientation quaternion from a rotation matrix 
1249:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** void fQuaternionFromRotationMatrix(float **R,  fquaternion *pq)
1250:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** {
 7723              		.loc 1 1250 0
 7724              		.cfi_startproc
 7725 0000 90B5     		push	{r4, r7, lr}
 7726              	.LCFI63:
 7727              		.cfi_def_cfa_offset 12
 7728              		.cfi_offset 4, -12
 7729              		.cfi_offset 7, -8
 7730              		.cfi_offset 14, -4
 7731 0002 85B0     		sub	sp, sp, #20
 7732              	.LCFI64:
 7733              		.cfi_def_cfa_offset 32
 7734 0004 00AF     		add	r7, sp, #0
 7735              	.LCFI65:
 7736              		.cfi_def_cfa_register 7
 7737 0006 7860     		str	r0, [r7, #4]
 7738 0008 3960     		str	r1, [r7]
1251:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	float foneplustrace;		// 1+trace of the rotation matrix 
1252:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	float fscale;				// temporary scale factor 
1253:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1254:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// calculate one plus the trace of the rotation matrix = 4*q0*q0 
1255:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	foneplustrace = 1.0F + R[0][0] + R[1][1] + R[2][2];
 7739              		.loc 1 1255 0
 7740 000a 7B68     		ldr	r3, [r7, #4]
 7741 000c 1B68     		ldr	r3, [r3]
 7742 000e 1B68     		ldr	r3, [r3]
 7743 0010 181C     		add	r0, r3, #0
 7744 0012 FE21     		mov	r1, #254
 7745 0014 8905     		lsl	r1, r1, #22
 7746 0016 FFF7FEFF 		bl	__aeabi_fadd
 7747 001a 031C     		add	r3, r0, #0
 7748 001c 1A1C     		add	r2, r3, #0
 7749 001e 7B68     		ldr	r3, [r7, #4]
 7750 0020 0433     		add	r3, r3, #4
 7751 0022 1B68     		ldr	r3, [r3]
 7752 0024 0433     		add	r3, r3, #4
 7753 0026 1B68     		ldr	r3, [r3]
 7754 0028 101C     		add	r0, r2, #0
 7755 002a 191C     		add	r1, r3, #0
 7756 002c FFF7FEFF 		bl	__aeabi_fadd
 7757 0030 031C     		add	r3, r0, #0
 7758 0032 1A1C     		add	r2, r3, #0
 7759 0034 7B68     		ldr	r3, [r7, #4]
 7760 0036 0833     		add	r3, r3, #8
 7761 0038 1B68     		ldr	r3, [r3]
 7762 003a 0833     		add	r3, r3, #8
 7763 003c 1B68     		ldr	r3, [r3]
 7764 003e 101C     		add	r0, r2, #0
 7765 0040 191C     		add	r1, r3, #0
 7766 0042 FFF7FEFF 		bl	__aeabi_fadd
 7767 0046 031C     		add	r3, r0, #0
 7768 0048 FB60     		str	r3, [r7, #12]
1256:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1257:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// normal case when q0 is not zero 
1258:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	if (foneplustrace > 0.0F)
 7769              		.loc 1 1258 0
 7770 004a F868     		ldr	r0, [r7, #12]
 7771 004c 0021     		mov	r1, #0
 7772 004e FFF7FEFF 		bl	__aeabi_fcmpgt
 7773 0052 031C     		mov	r3, r0
 7774 0054 002B     		cmp	r3, #0
 7775 0056 78D0     		beq	.L306
 7776              	.L303:
1259:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	{
1260:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		// calculate q0 to q3
1261:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		pq->q0 = 0.5F * (float)sqrt(foneplustrace); // q0 guaranteed non-negative
 7777              		.loc 1 1261 0
 7778 0058 F868     		ldr	r0, [r7, #12]
 7779 005a FFF7FEFF 		bl	__aeabi_f2d
 7780 005e 031C     		mov	r3, r0
 7781 0060 0C1C     		mov	r4, r1
 7782 0062 181C     		mov	r0, r3
 7783 0064 211C     		mov	r1, r4
 7784 0066 FFF7FEFF 		bl	sqrt
 7785 006a 031C     		mov	r3, r0
 7786 006c 0C1C     		mov	r4, r1
 7787 006e 181C     		mov	r0, r3
 7788 0070 211C     		mov	r1, r4
 7789 0072 FFF7FEFF 		bl	__aeabi_d2f
 7790 0076 031C     		add	r3, r0, #0
 7791 0078 181C     		add	r0, r3, #0
 7792 007a FC21     		mov	r1, #252
 7793 007c 8905     		lsl	r1, r1, #22
 7794 007e FFF7FEFF 		bl	__aeabi_fmul
 7795 0082 031C     		add	r3, r0, #0
 7796 0084 1A1C     		add	r2, r3, #0
 7797 0086 3B68     		ldr	r3, [r7]
 7798 0088 1A60     		str	r2, [r3]
1262:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		fscale = 1.0F / pq->q0;
 7799              		.loc 1 1262 0
 7800 008a 3B68     		ldr	r3, [r7]
 7801 008c 1B68     		ldr	r3, [r3]
 7802 008e FE20     		mov	r0, #254
 7803 0090 8005     		lsl	r0, r0, #22
 7804 0092 191C     		add	r1, r3, #0
 7805 0094 FFF7FEFF 		bl	__aeabi_fdiv
 7806 0098 031C     		add	r3, r0, #0
 7807 009a BB60     		str	r3, [r7, #8]
1263:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		pq->q1 = 0.25F * fscale * (R[1][2] - R[2][1]); 
 7808              		.loc 1 1263 0
 7809 009c B868     		ldr	r0, [r7, #8]
 7810 009e FA21     		mov	r1, #250
 7811 00a0 8905     		lsl	r1, r1, #22
 7812 00a2 FFF7FEFF 		bl	__aeabi_fmul
 7813 00a6 031C     		add	r3, r0, #0
 7814 00a8 1C1C     		add	r4, r3, #0
 7815 00aa 7B68     		ldr	r3, [r7, #4]
 7816 00ac 0433     		add	r3, r3, #4
 7817 00ae 1B68     		ldr	r3, [r3]
 7818 00b0 0833     		add	r3, r3, #8
 7819 00b2 1A68     		ldr	r2, [r3]
 7820 00b4 7B68     		ldr	r3, [r7, #4]
 7821 00b6 0833     		add	r3, r3, #8
 7822 00b8 1B68     		ldr	r3, [r3]
 7823 00ba 0433     		add	r3, r3, #4
 7824 00bc 1B68     		ldr	r3, [r3]
 7825 00be 101C     		add	r0, r2, #0
 7826 00c0 191C     		add	r1, r3, #0
 7827 00c2 FFF7FEFF 		bl	__aeabi_fsub
 7828 00c6 031C     		add	r3, r0, #0
 7829 00c8 201C     		add	r0, r4, #0
 7830 00ca 191C     		add	r1, r3, #0
 7831 00cc FFF7FEFF 		bl	__aeabi_fmul
 7832 00d0 031C     		add	r3, r0, #0
 7833 00d2 1A1C     		add	r2, r3, #0
 7834 00d4 3B68     		ldr	r3, [r7]
 7835 00d6 5A60     		str	r2, [r3, #4]
1264:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		pq->q2 = 0.25F * fscale * (R[2][0] - R[0][2]); 
 7836              		.loc 1 1264 0
 7837 00d8 B868     		ldr	r0, [r7, #8]
 7838 00da FA21     		mov	r1, #250
 7839 00dc 8905     		lsl	r1, r1, #22
 7840 00de FFF7FEFF 		bl	__aeabi_fmul
 7841 00e2 031C     		add	r3, r0, #0
 7842 00e4 1C1C     		add	r4, r3, #0
 7843 00e6 7B68     		ldr	r3, [r7, #4]
 7844 00e8 0833     		add	r3, r3, #8
 7845 00ea 1B68     		ldr	r3, [r3]
 7846 00ec 1A68     		ldr	r2, [r3]
 7847 00ee 7B68     		ldr	r3, [r7, #4]
 7848 00f0 1B68     		ldr	r3, [r3]
 7849 00f2 0833     		add	r3, r3, #8
 7850 00f4 1B68     		ldr	r3, [r3]
 7851 00f6 101C     		add	r0, r2, #0
 7852 00f8 191C     		add	r1, r3, #0
 7853 00fa FFF7FEFF 		bl	__aeabi_fsub
 7854 00fe 031C     		add	r3, r0, #0
 7855 0100 201C     		add	r0, r4, #0
 7856 0102 191C     		add	r1, r3, #0
 7857 0104 FFF7FEFF 		bl	__aeabi_fmul
 7858 0108 031C     		add	r3, r0, #0
 7859 010a 1A1C     		add	r2, r3, #0
 7860 010c 3B68     		ldr	r3, [r7]
 7861 010e 9A60     		str	r2, [r3, #8]
1265:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		pq->q3 = 0.25F * fscale * (R[0][1] - R[1][0]);
 7862              		.loc 1 1265 0
 7863 0110 B868     		ldr	r0, [r7, #8]
 7864 0112 FA21     		mov	r1, #250
 7865 0114 8905     		lsl	r1, r1, #22
 7866 0116 FFF7FEFF 		bl	__aeabi_fmul
 7867 011a 031C     		add	r3, r0, #0
 7868 011c 1C1C     		add	r4, r3, #0
 7869 011e 7B68     		ldr	r3, [r7, #4]
 7870 0120 1B68     		ldr	r3, [r3]
 7871 0122 0433     		add	r3, r3, #4
 7872 0124 1A68     		ldr	r2, [r3]
 7873 0126 7B68     		ldr	r3, [r7, #4]
 7874 0128 0433     		add	r3, r3, #4
 7875 012a 1B68     		ldr	r3, [r3]
 7876 012c 1B68     		ldr	r3, [r3]
 7877 012e 101C     		add	r0, r2, #0
 7878 0130 191C     		add	r1, r3, #0
 7879 0132 FFF7FEFF 		bl	__aeabi_fsub
 7880 0136 031C     		add	r3, r0, #0
 7881 0138 201C     		add	r0, r4, #0
 7882 013a 191C     		add	r1, r3, #0
 7883 013c FFF7FEFF 		bl	__aeabi_fmul
 7884 0140 031C     		add	r3, r0, #0
 7885 0142 1A1C     		add	r2, r3, #0
 7886 0144 3B68     		ldr	r3, [r7]
 7887 0146 DA60     		str	r2, [r3, #12]
1266:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1267:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		return;
 7888              		.loc 1 1267 0
 7889 0148 95E0     		b	.L295
 7890              	.L306:
1268:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	}
1269:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1270:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// otherwise q0 is zero meaning 180 deg rotation 
1271:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	pq->q0 = 0.0F;
 7891              		.loc 1 1271 0
 7892 014a 3B68     		ldr	r3, [r7]
 7893 014c 0022     		mov	r2, #0
 7894 014e 1A60     		str	r2, [r3]
1272:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	pq->q1 = (float)sqrt(fabs(0.5F + 0.5F * R[0][0])); 
 7895              		.loc 1 1272 0
 7896 0150 7B68     		ldr	r3, [r7, #4]
 7897 0152 1B68     		ldr	r3, [r3]
 7898 0154 1B68     		ldr	r3, [r3]
 7899 0156 181C     		add	r0, r3, #0
 7900 0158 FC21     		mov	r1, #252
 7901 015a 8905     		lsl	r1, r1, #22
 7902 015c FFF7FEFF 		bl	__aeabi_fmul
 7903 0160 031C     		add	r3, r0, #0
 7904 0162 181C     		add	r0, r3, #0
 7905 0164 FC21     		mov	r1, #252
 7906 0166 8905     		lsl	r1, r1, #22
 7907 0168 FFF7FEFF 		bl	__aeabi_fadd
 7908 016c 031C     		add	r3, r0, #0
 7909 016e 5B00     		lsl	r3, r3, #1
 7910 0170 5B08     		lsr	r3, r3, #1
 7911 0172 181C     		add	r0, r3, #0
 7912 0174 FFF7FEFF 		bl	__aeabi_f2d
 7913 0178 031C     		mov	r3, r0
 7914 017a 0C1C     		mov	r4, r1
 7915 017c 181C     		mov	r0, r3
 7916 017e 211C     		mov	r1, r4
 7917 0180 FFF7FEFF 		bl	sqrt
 7918 0184 031C     		mov	r3, r0
 7919 0186 0C1C     		mov	r4, r1
 7920 0188 181C     		mov	r0, r3
 7921 018a 211C     		mov	r1, r4
 7922 018c FFF7FEFF 		bl	__aeabi_d2f
 7923 0190 021C     		add	r2, r0, #0
 7924 0192 3B68     		ldr	r3, [r7]
 7925 0194 5A60     		str	r2, [r3, #4]
1273:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	pq->q2 = (float)sqrt(fabs(0.5F + 0.5F * R[1][1])); 
 7926              		.loc 1 1273 0
 7927 0196 7B68     		ldr	r3, [r7, #4]
 7928 0198 0433     		add	r3, r3, #4
 7929 019a 1B68     		ldr	r3, [r3]
 7930 019c 0433     		add	r3, r3, #4
 7931 019e 1B68     		ldr	r3, [r3]
 7932 01a0 181C     		add	r0, r3, #0
 7933 01a2 FC21     		mov	r1, #252
 7934 01a4 8905     		lsl	r1, r1, #22
 7935 01a6 FFF7FEFF 		bl	__aeabi_fmul
 7936 01aa 031C     		add	r3, r0, #0
 7937 01ac 181C     		add	r0, r3, #0
 7938 01ae FC21     		mov	r1, #252
 7939 01b0 8905     		lsl	r1, r1, #22
 7940 01b2 FFF7FEFF 		bl	__aeabi_fadd
 7941 01b6 031C     		add	r3, r0, #0
 7942 01b8 5B00     		lsl	r3, r3, #1
 7943 01ba 5B08     		lsr	r3, r3, #1
 7944 01bc 181C     		add	r0, r3, #0
 7945 01be FFF7FEFF 		bl	__aeabi_f2d
 7946 01c2 031C     		mov	r3, r0
 7947 01c4 0C1C     		mov	r4, r1
 7948 01c6 181C     		mov	r0, r3
 7949 01c8 211C     		mov	r1, r4
 7950 01ca FFF7FEFF 		bl	sqrt
 7951 01ce 031C     		mov	r3, r0
 7952 01d0 0C1C     		mov	r4, r1
 7953 01d2 181C     		mov	r0, r3
 7954 01d4 211C     		mov	r1, r4
 7955 01d6 FFF7FEFF 		bl	__aeabi_d2f
 7956 01da 021C     		add	r2, r0, #0
 7957 01dc 3B68     		ldr	r3, [r7]
 7958 01de 9A60     		str	r2, [r3, #8]
1274:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	pq->q3 = (float)sqrt(fabs(0.5F + 0.5F * R[2][2])); 
 7959              		.loc 1 1274 0
 7960 01e0 7B68     		ldr	r3, [r7, #4]
 7961 01e2 0833     		add	r3, r3, #8
 7962 01e4 1B68     		ldr	r3, [r3]
 7963 01e6 0833     		add	r3, r3, #8
 7964 01e8 1B68     		ldr	r3, [r3]
 7965 01ea 181C     		add	r0, r3, #0
 7966 01ec FC21     		mov	r1, #252
 7967 01ee 8905     		lsl	r1, r1, #22
 7968 01f0 FFF7FEFF 		bl	__aeabi_fmul
 7969 01f4 031C     		add	r3, r0, #0
 7970 01f6 181C     		add	r0, r3, #0
 7971 01f8 FC21     		mov	r1, #252
 7972 01fa 8905     		lsl	r1, r1, #22
 7973 01fc FFF7FEFF 		bl	__aeabi_fadd
 7974 0200 031C     		add	r3, r0, #0
 7975 0202 5B00     		lsl	r3, r3, #1
 7976 0204 5B08     		lsr	r3, r3, #1
 7977 0206 181C     		add	r0, r3, #0
 7978 0208 FFF7FEFF 		bl	__aeabi_f2d
 7979 020c 031C     		mov	r3, r0
 7980 020e 0C1C     		mov	r4, r1
 7981 0210 181C     		mov	r0, r3
 7982 0212 211C     		mov	r1, r4
 7983 0214 FFF7FEFF 		bl	sqrt
 7984 0218 031C     		mov	r3, r0
 7985 021a 0C1C     		mov	r4, r1
 7986 021c 181C     		mov	r0, r3
 7987 021e 211C     		mov	r1, r4
 7988 0220 FFF7FEFF 		bl	__aeabi_d2f
 7989 0224 021C     		add	r2, r0, #0
 7990 0226 3B68     		ldr	r3, [r7]
 7991 0228 DA60     		str	r2, [r3, #12]
1275:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1276:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// correct sign ambiguities in q2 and q3 given q1 is assumed non-negative 
1277:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	if (R[0][1] < 0.0F) pq->q2 = -pq->q2;
 7992              		.loc 1 1277 0
 7993 022a 7B68     		ldr	r3, [r7, #4]
 7994 022c 1B68     		ldr	r3, [r3]
 7995 022e 0433     		add	r3, r3, #4
 7996 0230 1B68     		ldr	r3, [r3]
 7997 0232 181C     		add	r0, r3, #0
 7998 0234 0021     		mov	r1, #0
 7999 0236 FFF7FEFF 		bl	__aeabi_fcmplt
 8000 023a 031C     		mov	r3, r0
 8001 023c 002B     		cmp	r3, #0
 8002 023e 06D0     		beq	.L299
 8003              	.L304:
 8004              		.loc 1 1277 0 is_stmt 0
 8005 0240 3B68     		ldr	r3, [r7]
 8006 0242 9B68     		ldr	r3, [r3, #8]
 8007 0244 8022     		mov	r2, #128
 8008 0246 1206     		lsl	r2, r2, #24
 8009 0248 5A40     		eor	r2, r3
 8010 024a 3B68     		ldr	r3, [r7]
 8011 024c 9A60     		str	r2, [r3, #8]
 8012              	.L299:
1278:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	if (R[0][2] < 0.0F) pq->q3 = -pq->q3;
 8013              		.loc 1 1278 0 is_stmt 1
 8014 024e 7B68     		ldr	r3, [r7, #4]
 8015 0250 1B68     		ldr	r3, [r3]
 8016 0252 0833     		add	r3, r3, #8
 8017 0254 1B68     		ldr	r3, [r3]
 8018 0256 181C     		add	r0, r3, #0
 8019 0258 0021     		mov	r1, #0
 8020 025a FFF7FEFF 		bl	__aeabi_fcmplt
 8021 025e 031C     		mov	r3, r0
 8022 0260 002B     		cmp	r3, #0
 8023 0262 07D0     		beq	.L307
 8024              	.L305:
 8025              		.loc 1 1278 0 is_stmt 0
 8026 0264 3B68     		ldr	r3, [r7]
 8027 0266 DB68     		ldr	r3, [r3, #12]
 8028 0268 8022     		mov	r2, #128
 8029 026a 1206     		lsl	r2, r2, #24
 8030 026c 5A40     		eor	r2, r3
 8031 026e 3B68     		ldr	r3, [r7]
 8032 0270 DA60     		str	r2, [r3, #12]
1279:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1280:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	return;
 8033              		.loc 1 1280 0 is_stmt 1
 8034 0272 00E0     		b	.L295
 8035              	.L307:
 8036              		.loc 1 1280 0 is_stmt 0
 8037 0274 C046     		mov	r8, r8
 8038              	.L295:
1281:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** }
 8039              		.loc 1 1281 0 is_stmt 1
 8040 0276 BD46     		mov	sp, r7
 8041 0278 05B0     		add	sp, sp, #20
 8042              		@ sp needed for prologue
 8043 027a 90BD     		pop	{r4, r7, pc}
 8044              		.cfi_endproc
 8045              	.LFE22:
 8047              		.section	.text.ResetMagCalibrationFunc,"ax",%progbits
 8048              		.align	2
 8049              		.global	ResetMagCalibrationFunc
 8050              		.code	16
 8051              		.thumb_func
 8053              	ResetMagCalibrationFunc:
 8054              	.LFB23:
1282:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1283:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** void ResetMagCalibrationFunc(void)
1284:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** {
 8055              		.loc 1 1284 0
 8056              		.cfi_startproc
 8057 0000 90B5     		push	{r4, r7, lr}
 8058              	.LCFI66:
 8059              		.cfi_def_cfa_offset 12
 8060              		.cfi_offset 4, -12
 8061              		.cfi_offset 7, -8
 8062              		.cfi_offset 14, -4
 8063 0002 85B0     		sub	sp, sp, #20
 8064              	.LCFI67:
 8065              		.cfi_def_cfa_offset 32
 8066 0004 00AF     		add	r7, sp, #0
 8067              	.LCFI68:
 8068              		.cfi_def_cfa_register 7
1285:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	int32 j, k, l;   // loop counters  
1286:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1287:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// initialise the calibration hard and soft iron estimate to null 
1288:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	fmatrixAeqI(finvW, 3);
 8069              		.loc 1 1288 0
 8070 0006 2A4B     		ldr	r3, .L316
 8071 0008 181C     		mov	r0, r3
 8072 000a 0321     		mov	r1, #3
 8073 000c FFF7FEFF 		bl	fmatrixAeqI
1289:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	fVx = fVy = fVz = 0.;
 8074              		.loc 1 1289 0
 8075 0010 284B     		ldr	r3, .L316+4
 8076 0012 0022     		mov	r2, #0
 8077 0014 1A60     		str	r2, [r3]
 8078 0016 274B     		ldr	r3, .L316+4
 8079 0018 1A68     		ldr	r2, [r3]
 8080 001a 274B     		ldr	r3, .L316+8
 8081 001c 1A60     		str	r2, [r3]
 8082 001e 264B     		ldr	r3, .L316+8
 8083 0020 1A68     		ldr	r2, [r3]
 8084 0022 264B     		ldr	r3, .L316+12
 8085 0024 1A60     		str	r2, [r3]
1290:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	fB = 0.0F;
 8086              		.loc 1 1290 0
 8087 0026 264B     		ldr	r3, .L316+16
 8088 0028 0022     		mov	r2, #0
 8089 002a 1A60     		str	r2, [r3]
1291:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	fFitErrorpc = 1000.0F; 
 8090              		.loc 1 1291 0
 8091 002c 254B     		ldr	r3, .L316+20
 8092 002e 264A     		ldr	r2, .L316+24
 8093 0030 1A60     		str	r2, [r3]
1292:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	validmagcal = 0;
 8094              		.loc 1 1292 0
 8095 0032 264B     		ldr	r3, .L316+28
 8096 0034 0022     		mov	r2, #0
 8097 0036 1A60     		str	r2, [r3]
1293:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1294:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// set the loop counter to 0 to denote first pass 
1295:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	loopcounter = 0;
 8098              		.loc 1 1295 0
 8099 0038 254B     		ldr	r3, .L316+32
 8100 003a 0022     		mov	r2, #0
 8101 003c 1A60     		str	r2, [r3]
1296:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1297:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// set magnetic buffer index to invalid value -1 to denote invalid
1298:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	MagBufferCount = 0;
 8102              		.loc 1 1298 0
 8103 003e 254B     		ldr	r3, .L316+36
 8104 0040 0022     		mov	r2, #0
 8105 0042 1A60     		str	r2, [r3]
1299:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (j = 0; j < MAGBUFFSIZE; j++)
 8106              		.loc 1 1299 0
 8107 0044 0023     		mov	r3, #0
 8108 0046 FB60     		str	r3, [r7, #12]
 8109 0048 2BE0     		b	.L309
 8110              	.L314:
1300:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		for (k = 0; k < MAGBUFFSIZE; k++)
 8111              		.loc 1 1300 0
 8112 004a 0023     		mov	r3, #0
 8113 004c BB60     		str	r3, [r7, #8]
 8114 004e 22E0     		b	.L310
 8115              	.L313:
1301:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			for (l = 0; l < MAGBUFFSIZE; l++)
 8116              		.loc 1 1301 0
 8117 0050 0023     		mov	r3, #0
 8118 0052 7B60     		str	r3, [r7, #4]
 8119 0054 19E0     		b	.L311
 8120              	.L312:
1302:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 				iMagBuff[j][k][l].index = -1;
 8121              		.loc 1 1302 0
 8122 0056 2048     		ldr	r0, .L316+40
 8123 0058 7B68     		ldr	r3, [r7, #4]
 8124 005a B968     		ldr	r1, [r7, #8]
 8125 005c FC68     		ldr	r4, [r7, #12]
 8126 005e 1A1C     		mov	r2, r3
 8127 0060 5200     		lsl	r2, r2, #1
 8128 0062 D218     		add	r2, r2, r3
 8129 0064 9300     		lsl	r3, r2, #2
 8130 0066 1A1C     		mov	r2, r3
 8131 0068 0B1C     		mov	r3, r1
 8132 006a 1B01     		lsl	r3, r3, #4
 8133 006c 5B1A     		sub	r3, r3, r1
 8134 006e 9B00     		lsl	r3, r3, #2
 8135 0070 D218     		add	r2, r2, r3
 8136 0072 9623     		mov	r3, #150
 8137 0074 5B00     		lsl	r3, r3, #1
 8138 0076 6343     		mul	r3, r4
 8139 0078 D318     		add	r3, r2, r3
 8140 007a C318     		add	r3, r0, r3
 8141 007c 0833     		add	r3, r3, #8
 8142 007e 0122     		mov	r2, #1
 8143 0080 5242     		neg	r2, r2
 8144 0082 1A60     		str	r2, [r3]
1301:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			for (l = 0; l < MAGBUFFSIZE; l++)
 8145              		.loc 1 1301 0
 8146 0084 7B68     		ldr	r3, [r7, #4]
 8147 0086 0133     		add	r3, r3, #1
 8148 0088 7B60     		str	r3, [r7, #4]
 8149              	.L311:
1301:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 			for (l = 0; l < MAGBUFFSIZE; l++)
 8150              		.loc 1 1301 0 is_stmt 0
 8151 008a 7B68     		ldr	r3, [r7, #4]
 8152 008c 042B     		cmp	r3, #4
 8153 008e E2DD     		ble	.L312
1300:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		for (k = 0; k < MAGBUFFSIZE; k++)
 8154              		.loc 1 1300 0 is_stmt 1
 8155 0090 BB68     		ldr	r3, [r7, #8]
 8156 0092 0133     		add	r3, r3, #1
 8157 0094 BB60     		str	r3, [r7, #8]
 8158              	.L310:
1300:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		for (k = 0; k < MAGBUFFSIZE; k++)
 8159              		.loc 1 1300 0 is_stmt 0
 8160 0096 BB68     		ldr	r3, [r7, #8]
 8161 0098 042B     		cmp	r3, #4
 8162 009a D9DD     		ble	.L313
1299:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (j = 0; j < MAGBUFFSIZE; j++)
 8163              		.loc 1 1299 0 is_stmt 1
 8164 009c FB68     		ldr	r3, [r7, #12]
 8165 009e 0133     		add	r3, r3, #1
 8166 00a0 FB60     		str	r3, [r7, #12]
 8167              	.L309:
1299:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (j = 0; j < MAGBUFFSIZE; j++)
 8168              		.loc 1 1299 0 is_stmt 0
 8169 00a2 FB68     		ldr	r3, [r7, #12]
 8170 00a4 042B     		cmp	r3, #4
 8171 00a6 D0DD     		ble	.L314
1303:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1304:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	return;
 8172              		.loc 1 1304 0 is_stmt 1
 8173 00a8 C046     		mov	r8, r8
1305:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** }
 8174              		.loc 1 1305 0
 8175 00aa BD46     		mov	sp, r7
 8176 00ac 05B0     		add	sp, sp, #20
 8177              		@ sp needed for prologue
 8178 00ae 90BD     		pop	{r4, r7, pc}
 8179              	.L317:
 8180              		.align	2
 8181              	.L316:
 8182 00b0 00000000 		.word	finvW
 8183 00b4 00000000 		.word	fVz
 8184 00b8 00000000 		.word	fVy
 8185 00bc 00000000 		.word	fVx
 8186 00c0 00000000 		.word	fB
 8187 00c4 00000000 		.word	fFitErrorpc
 8188 00c8 00007A44 		.word	1148846080
 8189 00cc 00000000 		.word	validmagcal
 8190 00d0 00000000 		.word	loopcounter
 8191 00d4 00000000 		.word	MagBufferCount
 8192 00d8 00000000 		.word	iMagBuff
 8193              		.cfi_endproc
 8194              	.LFE23:
 8196              		.global	ErrFlag
 8197              		.section	.bss.ErrFlag,"aw",%nobits
 8198              		.align	2
 8201              	ErrFlag:
 8202 0000 00000000 		.space	4
 8203              		.global	average
 8204              		.section	.data.average,"aw",%progbits
 8205              		.align	1
 8208              	average:
 8209 0000 2800     		.short	40
 8210              		.global	averageCounter
 8211              		.section	.bss.averageCounter,"aw",%nobits
 8214              	averageCounter:
 8215 0000 00       		.space	1
 8216              		.global	calCounter
 8217              		.section	.bss.calCounter,"aw",%nobits
 8218              		.align	1
 8221              	calCounter:
 8222 0000 0000     		.space	2
 8223              		.comm	APhi6DOF,4,4
 8224              		.comm	AThe6DOF,4,4
 8225              		.comm	APsi6DOF,4,4
 8226              		.comm	buffer,10,4
 8227              		.section	.rodata
 8228 01eb 00       		.align	2
 8229              	.LC163:
 8230 01ec 25303464 		.ascii	"%04d\000"
 8230      00
 8231              		.section	.text.ControlLoopCompass,"ax",%progbits
 8232              		.align	2
 8233              		.global	ControlLoopCompass
 8234              		.code	16
 8235              		.thumb_func
 8237              	ControlLoopCompass:
 8238              	.LFB24:
1306:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1307:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1308:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1309:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****  int ErrFlag = 0;;
1310:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****  uint16 average = 40;
1311:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****  uint8 averageCounter = 0;
1312:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****  uint16 calCounter = 0;
1313:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****  int APhi6DOF, AThe6DOF, APsi6DOF; 
1314:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****  char buffer[10];
1315:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1316:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** void ControlLoopCompass(void) 
1317:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** {
 8239              		.loc 1 1317 0
 8240              		.cfi_startproc
 8241 0000 B0B5     		push	{r4, r5, r7, lr}
 8242              	.LCFI69:
 8243              		.cfi_def_cfa_offset 16
 8244              		.cfi_offset 4, -16
 8245              		.cfi_offset 5, -12
 8246              		.cfi_offset 7, -8
 8247              		.cfi_offset 14, -4
 8248 0002 82B0     		sub	sp, sp, #8
 8249              	.LCFI70:
 8250              		.cfi_def_cfa_offset 24
 8251 0004 02AF     		add	r7, sp, #8
 8252              	.LCFI71:
 8253              		.cfi_def_cfa 7, 16
1318:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****  
1319:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****   
1320:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****      //printf("\n");
1321:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****   
1322:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****   
1323:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****  // for (i = 0; i < miterations; i++)
1324:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****  // {
1325:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1326:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****  // call sensor driver simulation to get accel and mag data in integer counts 	
1327:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****     fSixDOFMyNEDSensorDrivers(); 
 8254              		.loc 1 1327 0
 8255 0006 FFF7FEFF 		bl	fSixDOFMyNEDSensorDrivers
1328:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1329:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** // update the magnetometer measurement buffer integer magnetometer data
1330:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****     fUpdateMagnetometerBuffer();
 8256              		.loc 1 1330 0
 8257 000a FFF7FEFF 		bl	fUpdateMagnetometerBuffer
1331:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1332:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** // remove hard and soft iron terms from Bp (uT) to get calibrated data Bc (uT) 
1333:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****     fInvertMagCal();
 8258              		.loc 1 1333 0
 8259 000e FFF7FEFF 		bl	fInvertMagCal
1334:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1335:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** // NED coordinate system
1336:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****     feCompassNED(fBcx, fBcy, fBcz, fGpx, fGpy, fGpz);
 8260              		.loc 1 1336 0
 8261 0012 2A4B     		ldr	r3, .L321
 8262 0014 1868     		ldr	r0, [r3]
 8263 0016 2A4B     		ldr	r3, .L321+4
 8264 0018 1968     		ldr	r1, [r3]
 8265 001a 2A4B     		ldr	r3, .L321+8
 8266 001c 1A68     		ldr	r2, [r3]
 8267 001e 2A4B     		ldr	r3, .L321+12
 8268 0020 1B68     		ldr	r3, [r3]
 8269 0022 2A4C     		ldr	r4, .L321+16
 8270 0024 2568     		ldr	r5, [r4]
 8271 0026 2A4C     		ldr	r4, .L321+20
 8272 0028 2468     		ldr	r4, [r4]
 8273 002a 0095     		str	r5, [sp]
 8274 002c 0194     		str	r4, [sp, #4]
 8275 002e FFF7FEFF 		bl	feCompassNED
1337:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		
1338:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****     Conversion();
 8276              		.loc 1 1338 0
 8277 0032 FFF7FEFF 		bl	Conversion
1339:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****      if (validmagcal !=0)
 8278              		.loc 1 1339 0
 8279 0036 274B     		ldr	r3, .L321+24
 8280 0038 1B68     		ldr	r3, [r3]
 8281 003a 002B     		cmp	r3, #0
 8282 003c 35D0     		beq	.L319
1340:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****     {
1341:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****      APhi6DOF = median(iPhi6DOF, &arr_medianas[0]);
 8283              		.loc 1 1341 0
 8284 003e 264B     		ldr	r3, .L321+28
 8285 0040 1A68     		ldr	r2, [r3]
 8286 0042 264B     		ldr	r3, .L321+32
 8287 0044 101C     		mov	r0, r2
 8288 0046 191C     		mov	r1, r3
 8289 0048 FFF7FEFF 		bl	median
 8290 004c 021C     		mov	r2, r0
 8291 004e 244B     		ldr	r3, .L321+36
 8292 0050 1A60     		str	r2, [r3]
1342:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****      AThe6DOF = median(iThe6DOF, &arr_medianas[1]);
 8293              		.loc 1 1342 0
 8294 0052 244B     		ldr	r3, .L321+40
 8295 0054 1A68     		ldr	r2, [r3]
 8296 0056 244B     		ldr	r3, .L321+44
 8297 0058 101C     		mov	r0, r2
 8298 005a 191C     		mov	r1, r3
 8299 005c FFF7FEFF 		bl	median
 8300 0060 021C     		mov	r2, r0
 8301 0062 224B     		ldr	r3, .L321+48
 8302 0064 1A60     		str	r2, [r3]
1343:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****      APsi6DOF = median(iPsi6DOF, &arr_medianas[2]);
 8303              		.loc 1 1343 0
 8304 0066 224B     		ldr	r3, .L321+52
 8305 0068 1A68     		ldr	r2, [r3]
 8306 006a 224B     		ldr	r3, .L321+56
 8307 006c 101C     		mov	r0, r2
 8308 006e 191C     		mov	r1, r3
 8309 0070 FFF7FEFF 		bl	median
 8310 0074 021C     		mov	r2, r0
 8311 0076 204B     		ldr	r3, .L321+60
 8312 0078 1A60     		str	r2, [r3]
1344:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****     //    printf("Yaw =%4d Pitch =%4d Roll =%4d \r", APhi6DOF, AThe6DOF, APsi6DOF);
1345:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****      APsi6DOF = 359 - APsi6DOF;
 8313              		.loc 1 1345 0
 8314 007a 1F4B     		ldr	r3, .L321+60
 8315 007c 1B68     		ldr	r3, [r3]
 8316 007e 1F4A     		ldr	r2, .L321+64
 8317 0080 D21A     		sub	r2, r2, r3
 8318 0082 1D4B     		ldr	r3, .L321+60
 8319 0084 1A60     		str	r2, [r3]
1346:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****      
1347:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****      sprintf(buffer,"%04d",APsi6DOF);
 8320              		.loc 1 1347 0
 8321 0086 1C4B     		ldr	r3, .L321+60
 8322 0088 1B68     		ldr	r3, [r3]
 8323 008a 1D49     		ldr	r1, .L321+68
 8324 008c 1D4A     		ldr	r2, .L321+72
 8325 008e 081C     		mov	r0, r1
 8326 0090 111C     		mov	r1, r2
 8327 0092 1A1C     		mov	r2, r3
 8328 0094 FFF7FEFF 		bl	sprintf
1348:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****      vfnLCD_Write_Msg(buffer);   //print when it is calibrated
 8329              		.loc 1 1348 0
 8330 0098 194B     		ldr	r3, .L321+68
 8331 009a 181C     		mov	r0, r3
 8332 009c FFF7FEFF 		bl	vfnLCD_Write_Msg
1349:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****      ecompass_direction = APsi6DOF;
 8333              		.loc 1 1349 0
 8334 00a0 154B     		ldr	r3, .L321+60
 8335 00a2 1A68     		ldr	r2, [r3]
 8336 00a4 184B     		ldr	r3, .L321+76
 8337 00a6 1A60     		str	r2, [r3]
 8338 00a8 01E0     		b	.L320
 8339              	.L319:
1350:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****     }
1351:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** // try to find an improved calibration if update is enabled 
1352:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****   else 
1353:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****     {  
1354:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****      fCalibrationUpdate();
 8340              		.loc 1 1354 0
 8341 00aa FFF7FEFF 		bl	fCalibrationUpdate
 8342              	.L320:
1355:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****     }
1356:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****     loopcounter++;
 8343              		.loc 1 1356 0
 8344 00ae 174B     		ldr	r3, .L321+80
 8345 00b0 1B68     		ldr	r3, [r3]
 8346 00b2 5A1C     		add	r2, r3, #1
 8347 00b4 154B     		ldr	r3, .L321+80
 8348 00b6 1A60     		str	r2, [r3]
1357:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****    
1358:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****  // } 
1359:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****   
1360:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1361:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** }
 8349              		.loc 1 1361 0
 8350 00b8 BD46     		mov	sp, r7
 8351              		@ sp needed for prologue
 8352 00ba B0BD     		pop	{r4, r5, r7, pc}
 8353              	.L322:
 8354              		.align	2
 8355              	.L321:
 8356 00bc 00000000 		.word	fBcx
 8357 00c0 00000000 		.word	fBcy
 8358 00c4 00000000 		.word	fBcz
 8359 00c8 00000000 		.word	fGpx
 8360 00cc 00000000 		.word	fGpy
 8361 00d0 00000000 		.word	fGpz
 8362 00d4 00000000 		.word	validmagcal
 8363 00d8 00000000 		.word	iPhi6DOF
 8364 00dc 00000000 		.word	arr_medianas
 8365 00e0 00000000 		.word	APhi6DOF
 8366 00e4 00000000 		.word	iThe6DOF
 8367 00e8 24000000 		.word	arr_medianas+36
 8368 00ec 00000000 		.word	AThe6DOF
 8369 00f0 00000000 		.word	iPsi6DOF
 8370 00f4 48000000 		.word	arr_medianas+72
 8371 00f8 00000000 		.word	APsi6DOF
 8372 00fc 67010000 		.word	359
 8373 0100 00000000 		.word	buffer
 8374 0104 EC010000 		.word	.LC163
 8375 0108 00000000 		.word	ecompass_direction
 8376 010c 00000000 		.word	loopcounter
 8377              		.cfi_endproc
 8378              	.LFE24:
 8380              		.section	.text.eCompassInit,"ax",%progbits
 8381              		.align	2
 8382              		.global	eCompassInit
 8383              		.code	16
 8384              		.thumb_func
 8386              	eCompassInit:
 8387              	.LFB25:
1362:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1363:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1364:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1365:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** void eCompassInit(void)
1366:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** {
 8388              		.loc 1 1366 0
 8389              		.cfi_startproc
 8390 0000 80B5     		push	{r7, lr}
 8391              	.LCFI72:
 8392              		.cfi_def_cfa_offset 8
 8393              		.cfi_offset 7, -8
 8394              		.cfi_offset 14, -4
 8395 0002 82B0     		sub	sp, sp, #8
 8396              	.LCFI73:
 8397              		.cfi_def_cfa_offset 16
 8398 0004 00AF     		add	r7, sp, #0
 8399              	.LCFI74:
 8400              		.cfi_def_cfa_register 7
1367:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	
1368:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****   	int32 i;							// loop counter 
1369:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	//int32 niterations;					// number of eCompass iterations to be performed 
1370:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****     //     printf("\n\n eCompass Initialization\n");
1371:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****    //      printf("\n\n Taking measurements for Calibration\n\n Move Constantly the Board until Cal
1372:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****          
1373:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****     
1374:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****    //printf("\n\nTrial new calibration geomagnetic field (uT) B=%9.3f", ftrB);
1375:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// apply the tweak for C's limitation on functions receiving variable size arrays 
1376:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// 3 row arrays used by all calibration models
1377:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (i = 0; i < 3; i++)
 8401              		.loc 1 1377 0
 8402 0006 0023     		mov	r3, #0
 8403 0008 7B60     		str	r3, [r7, #4]
 8404 000a 6DE0     		b	.L324
 8405              	.L325:
1378:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	{
1379:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		//invSimW[i] = xinvSimW[i]; 	
1380:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		//SimW[i] = xSimW[i];
1381:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		finvW[i] = xfinvW[i];
 8406              		.loc 1 1381 0
 8407 000c 7A68     		ldr	r2, [r7, #4]
 8408 000e 131C     		mov	r3, r2
 8409 0010 5B00     		lsl	r3, r3, #1
 8410 0012 9B18     		add	r3, r3, r2
 8411 0014 9B00     		lsl	r3, r3, #2
 8412 0016 724A     		ldr	r2, .L332
 8413 0018 9918     		add	r1, r3, r2
 8414 001a 724B     		ldr	r3, .L332+4
 8415 001c 7A68     		ldr	r2, [r7, #4]
 8416 001e 9200     		lsl	r2, r2, #2
 8417 0020 D150     		str	r1, [r2, r3]
1382:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		ftrinvW[i] = xftrinvW[i];
 8418              		.loc 1 1382 0
 8419 0022 7A68     		ldr	r2, [r7, #4]
 8420 0024 131C     		mov	r3, r2
 8421 0026 5B00     		lsl	r3, r3, #1
 8422 0028 9B18     		add	r3, r3, r2
 8423 002a 9B00     		lsl	r3, r3, #2
 8424 002c 6E4A     		ldr	r2, .L332+8
 8425 002e 9918     		add	r1, r3, r2
 8426 0030 6E4B     		ldr	r3, .L332+12
 8427 0032 7A68     		ldr	r2, [r7, #4]
 8428 0034 9200     		lsl	r2, r2, #2
 8429 0036 D150     		str	r1, [r2, r3]
1383:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		A[i] = xA[i];
 8430              		.loc 1 1383 0
 8431 0038 7A68     		ldr	r2, [r7, #4]
 8432 003a 131C     		mov	r3, r2
 8433 003c 5B00     		lsl	r3, r3, #1
 8434 003e 9B18     		add	r3, r3, r2
 8435 0040 9B00     		lsl	r3, r3, #2
 8436 0042 6B4A     		ldr	r2, .L332+16
 8437 0044 9918     		add	r1, r3, r2
 8438 0046 6B4B     		ldr	r3, .L332+20
 8439 0048 7A68     		ldr	r2, [r7, #4]
 8440 004a 9200     		lsl	r2, r2, #2
 8441 004c D150     		str	r1, [r2, r3]
1384:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		invA[i] = xinvA[i];
 8442              		.loc 1 1384 0
 8443 004e 7A68     		ldr	r2, [r7, #4]
 8444 0050 131C     		mov	r3, r2
 8445 0052 5B00     		lsl	r3, r3, #1
 8446 0054 9B18     		add	r3, r3, r2
 8447 0056 9B00     		lsl	r3, r3, #2
 8448 0058 674A     		ldr	r2, .L332+24
 8449 005a 9918     		add	r1, r3, r2
 8450 005c 674B     		ldr	r3, .L332+28
 8451 005e 7A68     		ldr	r2, [r7, #4]
 8452 0060 9200     		lsl	r2, r2, #2
 8453 0062 D150     		str	r1, [r2, r3]
1385:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		ftmpA3x3[i] = xftmpA3x3[i];
 8454              		.loc 1 1385 0
 8455 0064 7A68     		ldr	r2, [r7, #4]
 8456 0066 131C     		mov	r3, r2
 8457 0068 5B00     		lsl	r3, r3, #1
 8458 006a 9B18     		add	r3, r3, r2
 8459 006c 9B00     		lsl	r3, r3, #2
 8460 006e 644A     		ldr	r2, .L332+32
 8461 0070 9918     		add	r1, r3, r2
 8462 0072 644B     		ldr	r3, .L332+36
 8463 0074 7A68     		ldr	r2, [r7, #4]
 8464 0076 9200     		lsl	r2, r2, #2
 8465 0078 D150     		str	r1, [r2, r3]
1386:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		ftmpB3x3[i] = xftmpB3x3[i];
 8466              		.loc 1 1386 0
 8467 007a 7A68     		ldr	r2, [r7, #4]
 8468 007c 131C     		mov	r3, r2
 8469 007e 5B00     		lsl	r3, r3, #1
 8470 0080 9B18     		add	r3, r3, r2
 8471 0082 9B00     		lsl	r3, r3, #2
 8472 0084 604A     		ldr	r2, .L332+40
 8473 0086 9918     		add	r1, r3, r2
 8474 0088 604B     		ldr	r3, .L332+44
 8475 008a 7A68     		ldr	r2, [r7, #4]
 8476 008c 9200     		lsl	r2, r2, #2
 8477 008e D150     		str	r1, [r2, r3]
1387:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		ftmpA3x1[i] = xftmpA3x1[i];
 8478              		.loc 1 1387 0
 8479 0090 7B68     		ldr	r3, [r7, #4]
 8480 0092 9A00     		lsl	r2, r3, #2
 8481 0094 5E4B     		ldr	r3, .L332+48
 8482 0096 D118     		add	r1, r2, r3
 8483 0098 5E4B     		ldr	r3, .L332+52
 8484 009a 7A68     		ldr	r2, [r7, #4]
 8485 009c 9200     		lsl	r2, r2, #2
 8486 009e D150     		str	r1, [r2, r3]
1388:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		fR6DOFn[i] = xfR6DOFn[i];
 8487              		.loc 1 1388 0
 8488 00a0 7A68     		ldr	r2, [r7, #4]
 8489 00a2 131C     		mov	r3, r2
 8490 00a4 5B00     		lsl	r3, r3, #1
 8491 00a6 9B18     		add	r3, r3, r2
 8492 00a8 9B00     		lsl	r3, r3, #2
 8493 00aa 5B4A     		ldr	r2, .L332+56
 8494 00ac 9918     		add	r1, r3, r2
 8495 00ae 5B4B     		ldr	r3, .L332+60
 8496 00b0 7A68     		ldr	r2, [r7, #4]
 8497 00b2 9200     		lsl	r2, r2, #2
 8498 00b4 D150     		str	r1, [r2, r3]
1389:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		fLPR6DOFn[i] = xfLPR6DOFn[i];
 8499              		.loc 1 1389 0
 8500 00b6 7A68     		ldr	r2, [r7, #4]
 8501 00b8 131C     		mov	r3, r2
 8502 00ba 5B00     		lsl	r3, r3, #1
 8503 00bc 9B18     		add	r3, r3, r2
 8504 00be 9B00     		lsl	r3, r3, #2
 8505 00c0 574A     		ldr	r2, .L332+64
 8506 00c2 9918     		add	r1, r3, r2
 8507 00c4 574B     		ldr	r3, .L332+68
 8508 00c6 7A68     		ldr	r2, [r7, #4]
 8509 00c8 9200     		lsl	r2, r2, #2
 8510 00ca D150     		str	r1, [r2, r3]
1390:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		fLPR6DOFnm1[i] = xfLPR6DOFnm1[i];
 8511              		.loc 1 1390 0
 8512 00cc 7A68     		ldr	r2, [r7, #4]
 8513 00ce 131C     		mov	r3, r2
 8514 00d0 5B00     		lsl	r3, r3, #1
 8515 00d2 9B18     		add	r3, r3, r2
 8516 00d4 9B00     		lsl	r3, r3, #2
 8517 00d6 544A     		ldr	r2, .L332+72
 8518 00d8 9918     		add	r1, r3, r2
 8519 00da 544B     		ldr	r3, .L332+76
 8520 00dc 7A68     		ldr	r2, [r7, #4]
 8521 00de 9200     		lsl	r2, r2, #2
 8522 00e0 D150     		str	r1, [r2, r3]
1377:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (i = 0; i < 3; i++)
 8523              		.loc 1 1377 0
 8524 00e2 7B68     		ldr	r3, [r7, #4]
 8525 00e4 0133     		add	r3, r3, #1
 8526 00e6 7B60     		str	r3, [r7, #4]
 8527              	.L324:
1377:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (i = 0; i < 3; i++)
 8528              		.loc 1 1377 0 is_stmt 0
 8529 00e8 7B68     		ldr	r3, [r7, #4]
 8530 00ea 022B     		cmp	r3, #2
 8531 00ec 8EDD     		ble	.L325
1391:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	}
1392:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// 4 row arrays for 4 element float calibration
1393:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (i = 0; i < 4; i++)
 8532              		.loc 1 1393 0 is_stmt 1
 8533 00ee 0023     		mov	r3, #0
 8534 00f0 7B60     		str	r3, [r7, #4]
 8535 00f2 22E0     		b	.L326
 8536              	.L327:
1394:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	{
1395:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		ftmpB4x1[i] = xftmpB4x1[i];
 8537              		.loc 1 1395 0
 8538 00f4 7B68     		ldr	r3, [r7, #4]
 8539 00f6 9A00     		lsl	r2, r3, #2
 8540 00f8 4D4B     		ldr	r3, .L332+80
 8541 00fa D118     		add	r1, r2, r3
 8542 00fc 4D4B     		ldr	r3, .L332+84
 8543 00fe 7A68     		ldr	r2, [r7, #4]
 8544 0100 9200     		lsl	r2, r2, #2
 8545 0102 D150     		str	r1, [r2, r3]
1396:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		ftmpA4x1[i] = xftmpA4x1[i];
 8546              		.loc 1 1396 0
 8547 0104 7B68     		ldr	r3, [r7, #4]
 8548 0106 9A00     		lsl	r2, r3, #2
 8549 0108 4B4B     		ldr	r3, .L332+88
 8550 010a D118     		add	r1, r2, r3
 8551 010c 4B4B     		ldr	r3, .L332+92
 8552 010e 7A68     		ldr	r2, [r7, #4]
 8553 0110 9200     		lsl	r2, r2, #2
 8554 0112 D150     		str	r1, [r2, r3]
1397:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		ftmpA4x4[i] = xftmpA4x4[i];
 8555              		.loc 1 1397 0
 8556 0114 7B68     		ldr	r3, [r7, #4]
 8557 0116 1A01     		lsl	r2, r3, #4
 8558 0118 494B     		ldr	r3, .L332+96
 8559 011a D118     		add	r1, r2, r3
 8560 011c 494B     		ldr	r3, .L332+100
 8561 011e 7A68     		ldr	r2, [r7, #4]
 8562 0120 9200     		lsl	r2, r2, #2
 8563 0122 D150     		str	r1, [r2, r3]
1398:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		ftmpB4x4[i] = xftmpB4x4[i];
 8564              		.loc 1 1398 0
 8565 0124 7B68     		ldr	r3, [r7, #4]
 8566 0126 1A01     		lsl	r2, r3, #4
 8567 0128 474B     		ldr	r3, .L332+104
 8568 012a D118     		add	r1, r2, r3
 8569 012c 474B     		ldr	r3, .L332+108
 8570 012e 7A68     		ldr	r2, [r7, #4]
 8571 0130 9200     		lsl	r2, r2, #2
 8572 0132 D150     		str	r1, [r2, r3]
1393:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (i = 0; i < 4; i++)
 8573              		.loc 1 1393 0
 8574 0134 7B68     		ldr	r3, [r7, #4]
 8575 0136 0133     		add	r3, r3, #1
 8576 0138 7B60     		str	r3, [r7, #4]
 8577              	.L326:
1393:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (i = 0; i < 4; i++)
 8578              		.loc 1 1393 0 is_stmt 0
 8579 013a 7B68     		ldr	r3, [r7, #4]
 8580 013c 032B     		cmp	r3, #3
 8581 013e D9DD     		ble	.L327
1399:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	}
1400:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// 7 row arrays for 7 element float calibration
1401:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (i = 0; i < 7; i++)
 8582              		.loc 1 1401 0 is_stmt 1
 8583 0140 0023     		mov	r3, #0
 8584 0142 7B60     		str	r3, [r7, #4]
 8585 0144 20E0     		b	.L328
 8586              	.L329:
1402:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	{
1403:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		ftmpA7x7[i] = xftmpA7x7[i];	
 8587              		.loc 1 1403 0
 8588 0146 7A68     		ldr	r2, [r7, #4]
 8589 0148 131C     		mov	r3, r2
 8590 014a DB00     		lsl	r3, r3, #3
 8591 014c 9B1A     		sub	r3, r3, r2
 8592 014e 9B00     		lsl	r3, r3, #2
 8593 0150 3F4A     		ldr	r2, .L332+112
 8594 0152 9918     		add	r1, r3, r2
 8595 0154 3F4B     		ldr	r3, .L332+116
 8596 0156 7A68     		ldr	r2, [r7, #4]
 8597 0158 9200     		lsl	r2, r2, #2
 8598 015a D150     		str	r1, [r2, r3]
1404:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		ftmpB7x7[i] = xftmpB7x7[i];	
 8599              		.loc 1 1404 0
 8600 015c 7A68     		ldr	r2, [r7, #4]
 8601 015e 131C     		mov	r3, r2
 8602 0160 DB00     		lsl	r3, r3, #3
 8603 0162 9B1A     		sub	r3, r3, r2
 8604 0164 9B00     		lsl	r3, r3, #2
 8605 0166 3C4A     		ldr	r2, .L332+120
 8606 0168 9918     		add	r1, r3, r2
 8607 016a 3C4B     		ldr	r3, .L332+124
 8608 016c 7A68     		ldr	r2, [r7, #4]
 8609 016e 9200     		lsl	r2, r2, #2
 8610 0170 D150     		str	r1, [r2, r3]
1405:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		ftmpA7x1[i] = xftmpA7x1[i];	
 8611              		.loc 1 1405 0
 8612 0172 7B68     		ldr	r3, [r7, #4]
 8613 0174 9A00     		lsl	r2, r3, #2
 8614 0176 3A4B     		ldr	r3, .L332+128
 8615 0178 D118     		add	r1, r2, r3
 8616 017a 3A4B     		ldr	r3, .L332+132
 8617 017c 7A68     		ldr	r2, [r7, #4]
 8618 017e 9200     		lsl	r2, r2, #2
 8619 0180 D150     		str	r1, [r2, r3]
1401:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (i = 0; i < 7; i++)
 8620              		.loc 1 1401 0
 8621 0182 7B68     		ldr	r3, [r7, #4]
 8622 0184 0133     		add	r3, r3, #1
 8623 0186 7B60     		str	r3, [r7, #4]
 8624              	.L328:
1401:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (i = 0; i < 7; i++)
 8625              		.loc 1 1401 0 is_stmt 0
 8626 0188 7B68     		ldr	r3, [r7, #4]
 8627 018a 062B     		cmp	r3, #6
 8628 018c DBDD     		ble	.L329
1406:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	}
1407:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// MAXEQUATIONS row arrays of measurements
1408:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (i = 0; i < MAXEQUATIONS; i++)
 8629              		.loc 1 1408 0 is_stmt 1
 8630 018e 0023     		mov	r3, #0
 8631 0190 7B60     		str	r3, [r7, #4]
 8632 0192 1DE0     		b	.L330
 8633              	.L331:
1409:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	{
1410:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		fX7[i] = xfX7[i];		// 7 element float calibration
 8634              		.loc 1 1410 0
 8635 0194 7A68     		ldr	r2, [r7, #4]
 8636 0196 131C     		mov	r3, r2
 8637 0198 DB00     		lsl	r3, r3, #3
 8638 019a 9B1A     		sub	r3, r3, r2
 8639 019c 9B00     		lsl	r3, r3, #2
 8640 019e 324A     		ldr	r2, .L332+136
 8641 01a0 9918     		add	r1, r3, r2
 8642 01a2 324B     		ldr	r3, .L332+140
 8643 01a4 7A68     		ldr	r2, [r7, #4]
 8644 01a6 9200     		lsl	r2, r2, #2
 8645 01a8 D150     		str	r1, [r2, r3]
1411:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		fX4[i] = xfX4[i];		// 4 element float calibration
 8646              		.loc 1 1411 0
 8647 01aa 7B68     		ldr	r3, [r7, #4]
 8648 01ac 1A01     		lsl	r2, r3, #4
 8649 01ae 304B     		ldr	r3, .L332+144
 8650 01b0 D118     		add	r1, r2, r3
 8651 01b2 304B     		ldr	r3, .L332+148
 8652 01b4 7A68     		ldr	r2, [r7, #4]
 8653 01b6 9200     		lsl	r2, r2, #2
 8654 01b8 D150     		str	r1, [r2, r3]
1412:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 		fY[i] = xfY[i];			// 4 element float calibration
 8655              		.loc 1 1412 0
 8656 01ba 7B68     		ldr	r3, [r7, #4]
 8657 01bc 9A00     		lsl	r2, r3, #2
 8658 01be 2E4B     		ldr	r3, .L332+152
 8659 01c0 D118     		add	r1, r2, r3
 8660 01c2 2E4B     		ldr	r3, .L332+156
 8661 01c4 7A68     		ldr	r2, [r7, #4]
 8662 01c6 9200     		lsl	r2, r2, #2
 8663 01c8 D150     		str	r1, [r2, r3]
1408:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (i = 0; i < MAXEQUATIONS; i++)
 8664              		.loc 1 1408 0
 8665 01ca 7B68     		ldr	r3, [r7, #4]
 8666 01cc 0133     		add	r3, r3, #1
 8667 01ce 7B60     		str	r3, [r7, #4]
 8668              	.L330:
1408:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	for (i = 0; i < MAXEQUATIONS; i++)
 8669              		.loc 1 1408 0 is_stmt 0
 8670 01d0 7B68     		ldr	r3, [r7, #4]
 8671 01d2 5F2B     		cmp	r3, #95
 8672 01d4 DEDD     		ble	.L331
1413:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	} 
1414:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1415:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1416:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	// reset computed magnetic calibration and magnetometer data buffer and gyro calibration  
1417:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 	    ResetMagCalibrationFunc(); 
 8673              		.loc 1 1417 0 is_stmt 1
 8674 01d6 FFF7FEFF 		bl	ResetMagCalibrationFunc
1418:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1419:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** }
 8675              		.loc 1 1419 0
 8676 01da BD46     		mov	sp, r7
 8677 01dc 02B0     		add	sp, sp, #8
 8678              		@ sp needed for prologue
 8679 01de 80BD     		pop	{r7, pc}
 8680              	.L333:
 8681              		.align	2
 8682              	.L332:
 8683 01e0 00000000 		.word	xfinvW
 8684 01e4 00000000 		.word	finvW
 8685 01e8 00000000 		.word	xftrinvW
 8686 01ec 00000000 		.word	ftrinvW
 8687 01f0 00000000 		.word	xA
 8688 01f4 00000000 		.word	A
 8689 01f8 00000000 		.word	xinvA
 8690 01fc 00000000 		.word	invA
 8691 0200 00000000 		.word	xftmpA3x3
 8692 0204 00000000 		.word	ftmpA3x3
 8693 0208 00000000 		.word	xftmpB3x3
 8694 020c 00000000 		.word	ftmpB3x3
 8695 0210 00000000 		.word	xftmpA3x1
 8696 0214 00000000 		.word	ftmpA3x1
 8697 0218 00000000 		.word	xfR6DOFn
 8698 021c 00000000 		.word	fR6DOFn
 8699 0220 00000000 		.word	xfLPR6DOFn
 8700 0224 00000000 		.word	fLPR6DOFn
 8701 0228 00000000 		.word	xfLPR6DOFnm1
 8702 022c 00000000 		.word	fLPR6DOFnm1
 8703 0230 00000000 		.word	xftmpB4x1
 8704 0234 00000000 		.word	ftmpB4x1
 8705 0238 00000000 		.word	xftmpA4x1
 8706 023c 00000000 		.word	ftmpA4x1
 8707 0240 00000000 		.word	xftmpA4x4
 8708 0244 00000000 		.word	ftmpA4x4
 8709 0248 00000000 		.word	xftmpB4x4
 8710 024c 00000000 		.word	ftmpB4x4
 8711 0250 00000000 		.word	xftmpA7x7
 8712 0254 00000000 		.word	ftmpA7x7
 8713 0258 00000000 		.word	xftmpB7x7
 8714 025c 00000000 		.word	ftmpB7x7
 8715 0260 00000000 		.word	xftmpA7x1
 8716 0264 00000000 		.word	ftmpA7x1
 8717 0268 00000000 		.word	xfX7
 8718 026c 00000000 		.word	fX7
 8719 0270 00000000 		.word	xfX4
 8720 0274 00000000 		.word	fX4
 8721 0278 00000000 		.word	xfY
 8722 027c 00000000 		.word	fY
 8723              		.cfi_endproc
 8724              	.LFE25:
 8726              		.global	__aeabi_f2iz
 8727              		.section	.text.Conversion,"ax",%progbits
 8728              		.align	2
 8729              		.global	Conversion
 8730              		.code	16
 8731              		.thumb_func
 8733              	Conversion:
 8734              	.LFB26:
1420:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** /*
1421:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****   convert float to integer
1422:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1423:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****     phi, The, Psi
1424:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** */
1425:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1426:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** void Conversion (void) {
 8735              		.loc 1 1426 0
 8736              		.cfi_startproc
 8737 0000 80B5     		push	{r7, lr}
 8738              	.LCFI75:
 8739              		.cfi_def_cfa_offset 8
 8740              		.cfi_offset 7, -8
 8741              		.cfi_offset 14, -4
 8742 0002 00AF     		add	r7, sp, #0
 8743              	.LCFI76:
 8744              		.cfi_def_cfa_register 7
1427:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****   iPhi6DOF = (int) fPhi6DOF; 
 8745              		.loc 1 1427 0
 8746 0004 0C4B     		ldr	r3, .L335
 8747 0006 1B68     		ldr	r3, [r3]
 8748 0008 181C     		add	r0, r3, #0
 8749 000a FFF7FEFF 		bl	__aeabi_f2iz
 8750 000e 021C     		mov	r2, r0
 8751 0010 0A4B     		ldr	r3, .L335+4
 8752 0012 1A60     		str	r2, [r3]
1428:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****   iThe6DOF = (int) fThe6DOF;
 8753              		.loc 1 1428 0
 8754 0014 0A4B     		ldr	r3, .L335+8
 8755 0016 1B68     		ldr	r3, [r3]
 8756 0018 181C     		add	r0, r3, #0
 8757 001a FFF7FEFF 		bl	__aeabi_f2iz
 8758 001e 021C     		mov	r2, r0
 8759 0020 084B     		ldr	r3, .L335+12
 8760 0022 1A60     		str	r2, [r3]
1429:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****   iPsi6DOF = (int) fPsi6DOF;
 8761              		.loc 1 1429 0
 8762 0024 084B     		ldr	r3, .L335+16
 8763 0026 1B68     		ldr	r3, [r3]
 8764 0028 181C     		add	r0, r3, #0
 8765 002a FFF7FEFF 		bl	__aeabi_f2iz
 8766 002e 021C     		mov	r2, r0
 8767 0030 064B     		ldr	r3, .L335+20
 8768 0032 1A60     		str	r2, [r3]
1430:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** }
 8769              		.loc 1 1430 0
 8770 0034 BD46     		mov	sp, r7
 8771              		@ sp needed for prologue
 8772 0036 80BD     		pop	{r7, pc}
 8773              	.L336:
 8774              		.align	2
 8775              	.L335:
 8776 0038 00000000 		.word	fPhi6DOF
 8777 003c 00000000 		.word	iPhi6DOF
 8778 0040 00000000 		.word	fThe6DOF
 8779 0044 00000000 		.word	iThe6DOF
 8780 0048 00000000 		.word	fPsi6DOF
 8781 004c 00000000 		.word	iPsi6DOF
 8782              		.cfi_endproc
 8783              	.LFE26:
 8785              		.global	__aeabi_idiv
 8786              		.section	.rodata
 8787 01f1 000000   		.align	2
 8788              	.LC214:
 8789 01f4 43253033 		.ascii	"C%03d\000"
 8789      6400
 8790 01fa 0000     		.section	.text.CalPercentage,"ax",%progbits
 8791              		.align	2
 8792              		.global	CalPercentage
 8793              		.code	16
 8794              		.thumb_func
 8796              	CalPercentage:
 8797              	.LFB27:
1431:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** /*
1432:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****    Calibration status percentage
1433:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** 
1434:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** */
1435:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** void CalPercentage (void) {
 8798              		.loc 1 1435 0
 8799              		.cfi_startproc
 8800 0000 80B5     		push	{r7, lr}
 8801              	.LCFI77:
 8802              		.cfi_def_cfa_offset 8
 8803              		.cfi_offset 7, -8
 8804              		.cfi_offset 14, -4
 8805 0002 84B0     		sub	sp, sp, #16
 8806              	.LCFI78:
 8807              		.cfi_def_cfa_offset 24
 8808 0004 00AF     		add	r7, sp, #0
 8809              	.LCFI79:
 8810              		.cfi_def_cfa_register 7
1436:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****     int iVarPercentage = 0;
 8811              		.loc 1 1436 0
 8812 0006 0023     		mov	r3, #0
 8813 0008 FB60     		str	r3, [r7, #12]
1437:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****     char buffer[10];
1438:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****     iVarPercentage = (MagBufferCount*100)/MINEQUATIONS;
 8814              		.loc 1 1438 0
 8815 000a 0C4B     		ldr	r3, .L338
 8816 000c 1B68     		ldr	r3, [r3]
 8817 000e 6422     		mov	r2, #100
 8818 0010 5343     		mul	r3, r2
 8819 0012 181C     		mov	r0, r3
 8820 0014 1821     		mov	r1, #24
 8821 0016 FFF7FEFF 		bl	__aeabi_idiv
 8822 001a 031C     		mov	r3, r0
 8823 001c FB60     		str	r3, [r7, #12]
1439:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****     sprintf(buffer,"C%03d",iVarPercentage);
 8824              		.loc 1 1439 0
 8825 001e 391C     		mov	r1, r7
 8826 0020 074A     		ldr	r2, .L338+4
 8827 0022 FB68     		ldr	r3, [r7, #12]
 8828 0024 081C     		mov	r0, r1
 8829 0026 111C     		mov	r1, r2
 8830 0028 1A1C     		mov	r2, r3
 8831 002a FFF7FEFF 		bl	sprintf
1440:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c ****     vfnLCD_Write_Msg(buffer);
 8832              		.loc 1 1440 0
 8833 002e 3B1C     		mov	r3, r7
 8834 0030 181C     		mov	r0, r3
 8835 0032 FFF7FEFF 		bl	vfnLCD_Write_Msg
1441:C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_Demo/ecompass\sensorCompass.c **** }
 8836              		.loc 1 1441 0
 8837 0036 BD46     		mov	sp, r7
 8838 0038 04B0     		add	sp, sp, #16
 8839              		@ sp needed for prologue
 8840 003a 80BD     		pop	{r7, pc}
 8841              	.L339:
 8842              		.align	2
 8843              	.L338:
 8844 003c 00000000 		.word	MagBufferCount
 8845 0040 F4010000 		.word	.LC214
 8846              		.cfi_endproc
 8847              	.LFE27:
 8849              		.text
 8850              	.Letext0:
 8851              		.file 2 "C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/cpu/arm_cm0.h"
 8852              		.file 3 "C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_De
 8853              		.file 4 "C:/Users/b01252/Documents/Freescale/L4K/software/kinetis_kl46_sc/src/projects/FRDMKL46_De
DEFINED SYMBOLS
                            *ABS*:00000000 sensorCompass.c
                            *COM*:00000002 iGpx
                            *COM*:00000002 iGpy
                            *COM*:00000002 iGpz
                            *COM*:00000002 iBpx
                            *COM*:00000002 iBpy
                            *COM*:00000002 iBpz
                            *COM*:00000004 fBpx
                            *COM*:00000004 fBpy
                            *COM*:00000004 fBpz
                            *COM*:00000004 fBcx
                            *COM*:00000004 fBcy
                            *COM*:00000004 fBcz
                            *COM*:00000004 fBfx
                            *COM*:00000004 fBfy
                            *COM*:00000004 fBfz
                            *COM*:00000004 fGpx
                            *COM*:00000004 fGpy
                            *COM*:00000004 fGpz
                            *COM*:00000004 fPhi6DOF
                            *COM*:00000004 fLPPhi6DOF
                            *COM*:00000004 fThe6DOF
                            *COM*:00000004 fLPThe6DOF
                            *COM*:00000004 fPsi6DOF
                            *COM*:00000004 fLPPsi6DOF
                            *COM*:00000004 fRho6DOF
                            *COM*:00000004 fLPRho6DOF
                            *COM*:00000004 fdelta6DOF
                            *COM*:00000004 fLPdelta6DOF
                            *COM*:00000004 ecompass_direction
                            *COM*:00000004 validmagcal
                            *COM*:00000004 loopcounter
                            *COM*:00000004 MagBufferCount
                            *COM*:000005dc iMagBuff
                            *COM*:00000004 SOLUTIONSIZE
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:56     .data.CALUPDACTIVE:00000000 CALUPDACTIVE
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:53     .data.CALUPDACTIVE:00000000 $d
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:63     .data.HARDCORRACTIVE:00000000 HARDCORRACTIVE
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:60     .data.HARDCORRACTIVE:00000000 $d
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:70     .data.SOFTCORRACTIVE:00000000 SOFTCORRACTIVE
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:67     .data.SOFTCORRACTIVE:00000000 $d
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:77     .data.TILTCORRACTIVE:00000000 TILTCORRACTIVE
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:74     .data.TILTCORRACTIVE:00000000 $d
                            *COM*:00000004 fVx
                            *COM*:00000004 fVy
                            *COM*:00000004 fVz
                            *COM*:00000024 xfinvW
                            *COM*:0000000c finvW
                            *COM*:00000004 fB
                            *COM*:00000004 fFitErrorpc
                            *COM*:00000024 xA
                            *COM*:0000000c A
                            *COM*:00000024 xinvA
                            *COM*:0000000c invA
                            *COM*:00000004 ftrVx
                            *COM*:00000004 ftrVy
                            *COM*:00000004 ftrVz
                            *COM*:00000024 xftrinvW
                            *COM*:0000000c ftrinvW
                            *COM*:00000004 ftrB
                            *COM*:00000004 ftrFitErrorpc
                            *COM*:00000004 det
                            *COM*:00000024 xfR6DOFn
                            *COM*:0000000c fR6DOFn
                            *COM*:00000024 xfLPR6DOFn
                            *COM*:0000000c fLPR6DOFn
                            *COM*:00000024 xfLPR6DOFnm1
                            *COM*:0000000c fLPR6DOFnm1
                            *COM*:00000a80 xfX7
                            *COM*:00000180 fX7
                            *COM*:000000c4 xftmpA7x7
                            *COM*:0000001c ftmpA7x7
                            *COM*:000000c4 xftmpB7x7
                            *COM*:0000001c ftmpB7x7
                            *COM*:0000001c xftmpA7x1
                            *COM*:0000001c ftmpA7x1
                            *COM*:00000600 xfX4
                            *COM*:00000180 fX4
                            *COM*:00000180 xfY
                            *COM*:00000180 fY
                            *COM*:00000010 xftmpA4x1
                            *COM*:00000010 ftmpA4x1
                            *COM*:00000040 xftmpA4x4
                            *COM*:00000010 ftmpA4x4
                            *COM*:00000010 xftmpB4x1
                            *COM*:00000010 ftmpB4x1
                            *COM*:00000040 xftmpB4x4
                            *COM*:00000010 ftmpB4x4
                            *COM*:00000024 xftmpA3x3
                            *COM*:0000000c ftmpA3x3
                            *COM*:00000024 xftmpB3x3
                            *COM*:0000000c ftmpB3x3
                            *COM*:0000000c xftmpA3x1
                            *COM*:0000000c ftmpA3x1
                            *COM*:00000004 COORDSYSTEM
                            *COM*:00000010 fqR6DOFn
                            *COM*:00000010 fqLPR6DOFn
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:138    .bss.iPhi6DOF:00000000 iPhi6DOF
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:135    .bss.iPhi6DOF:00000000 $d
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:145    .bss.iThe6DOF:00000000 iThe6DOF
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:142    .bss.iThe6DOF:00000000 $d
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:152    .bss.iPsi6DOF:00000000 iPsi6DOF
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:149    .bss.iPsi6DOF:00000000 $d
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:155    .text.fSixDOFMyNEDSensorDrivers:00000000 $t
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:160    .text.fSixDOFMyNEDSensorDrivers:00000000 fSixDOFMyNEDSensorDrivers
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:235    .text.fintToFloatData:00000000 fintToFloatData
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:218    .text.fSixDOFMyNEDSensorDrivers:00000054 $d
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:230    .text.fintToFloatData:00000000 $t
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:338    .text.fintToFloatData:000000bc $d
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:360    .text.fUpdateMagnetometerBuffer:00000000 $t
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:365    .text.fUpdateMagnetometerBuffer:00000000 fUpdateMagnetometerBuffer
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:735    .text.fUpdateMagnetometerBuffer:000002b8 $d
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:754    .text.fUpdateMagnetometerBuffer:000002fc $t
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:902    .text.fUpdateMagnetometerBuffer:000003f0 $d
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:909    .text.fInvertMagCal:00000000 $t
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:914    .text.fInvertMagCal:00000000 fInvertMagCal
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:1143   .text.fInvertMagCal:000001a4 $d
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:1164   .text.feCompassNED:00000000 $t
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:1169   .text.feCompassNED:00000000 feCompassNED
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:1623   .text.feCompassNED:000003d0 $d
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:1637   .text.feCompassNED:00000400 $t
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:7721   .text.fQuaternionFromRotationMatrix:00000000 fQuaternionFromRotationMatrix
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:5768   .text.fLPFOrientationMatrix:00000000 fLPFOrientationMatrix
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:1886   .text.feCompassNED:0000060c $d
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:1899   .rodata:00000000 $d
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:1909   .text.fCalibrationUpdate:00000000 $t
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:1914   .text.fCalibrationUpdate:00000000 fCalibrationUpdate
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:2125   .text.fUpdateCalibration7EIG:00000000 fUpdateCalibration7EIG
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:3963   .text.fmatrixAeqB:00000000 fmatrixAeqB
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:8796   .text.CalPercentage:00000000 CalPercentage
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:2082   .text.fCalibrationUpdate:00000114 $d
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:2120   .text.fUpdateCalibration7EIG:00000000 $t
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:4047   .text.fmatrixAeqTrBxC:00000000 fmatrixAeqTrBxC
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:4186   .text.eigencompute:00000000 eigencompute
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:2475   .text.fUpdateCalibration7EIG:0000025c $d
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:2488   .text.fUpdateCalibration7EIG:00000288 $t
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:5120   .text.fmatrixAeqAxScalar:00000000 fmatrixAeqAxScalar
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:2967   .text.fUpdateCalibration7EIG:00000660 $d
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:2985   .text.fUpdateCalibration7EIG:000006a4 $t
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:3111   .text.fUpdateCalibration7EIG:000007a0 $d
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:3136   .text.fUpdateCalibration4INV:00000000 $t
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:3141   .text.fUpdateCalibration4INV:00000000 fUpdateCalibration4INV
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:5312   .text.f4x4matrixAeqInvSymA:00000000 f4x4matrixAeqInvSymA
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:5544   .text.fmatrixAeqBxC:00000000 fmatrixAeqBxC
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:3543   .text.fUpdateCalibration4INV:000002cc $d
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:3558   .text.fUpdateCalibration4INV:00000300 $t
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:3938   .text.fUpdateCalibration4INV:00000628 $d
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:3958   .text.fmatrixAeqB:00000000 $t
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:4042   .text.fmatrixAeqTrBxC:00000000 $t
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:4181   .text.eigencompute:00000000 $t
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:5115   .text.fmatrixAeqAxScalar:00000000 $t
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:5211   .text.fmatrixPrintA:00000000 $t
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:5216   .text.fmatrixPrintA:00000000 fmatrixPrintA
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:5301   .text.fmatrixPrintA:00000074 $d
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:5307   .text.f4x4matrixAeqInvSymA:00000000 $t
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:5682   .text.fmatrixAeqI:00000000 fmatrixAeqI
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:5533   .text.f4x4matrixAeqInvSymA:00000154 $d
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:5539   .text.fmatrixAeqBxC:00000000 $t
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:5677   .text.fmatrixAeqI:00000000 $t
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:5763   .text.fLPFOrientationMatrix:00000000 $t
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:5987   .text.fmatrixAeqBxTrC:00000000 fmatrixAeqBxTrC
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:6125   .text.fAxisAngleDegFromRotationMatrix:00000000 fAxisAngleDegFromRotationMatrix
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:6664   .text.fRotationMatrixFromAxisAngleDeg:00000000 fRotationMatrixFromAxisAngleDeg
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:7219   .text.fNEDAnglesDegFromRotationMatrix:00000000 fNEDAnglesDegFromRotationMatrix
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:7428   .text.fNEDRotationMatrixFromAnglesDeg:00000000 fNEDRotationMatrixFromAnglesDeg
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:5961   .text.fLPFOrientationMatrix:00000150 $d
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:5982   .text.fmatrixAeqBxTrC:00000000 $t
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:6120   .text.fAxisAngleDegFromRotationMatrix:00000000 $t
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:6651   .text.fAxisAngleDegFromRotationMatrix:00000404 $d
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:6659   .text.fRotationMatrixFromAxisAngleDeg:00000000 $t
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:7209   .text.fRotationMatrixFromAxisAngleDeg:00000454 $d
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:7214   .text.fNEDAnglesDegFromRotationMatrix:00000000 $t
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:7414   .text.fNEDAnglesDegFromRotationMatrix:00000160 $d
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:7423   .text.fNEDRotationMatrixFromAnglesDeg:00000000 $t
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:7711   .text.fNEDRotationMatrixFromAnglesDeg:00000248 $d
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:7716   .text.fQuaternionFromRotationMatrix:00000000 $t
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:8048   .text.ResetMagCalibrationFunc:00000000 $t
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:8053   .text.ResetMagCalibrationFunc:00000000 ResetMagCalibrationFunc
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:8182   .text.ResetMagCalibrationFunc:000000b0 $d
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:8201   .bss.ErrFlag:00000000 ErrFlag
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:8198   .bss.ErrFlag:00000000 $d
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:8208   .data.average:00000000 average
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:8205   .data.average:00000000 $d
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:8214   .bss.averageCounter:00000000 averageCounter
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:8215   .bss.averageCounter:00000000 $d
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:8221   .bss.calCounter:00000000 calCounter
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:8218   .bss.calCounter:00000000 $d
                            *COM*:00000004 APhi6DOF
                            *COM*:00000004 AThe6DOF
                            *COM*:00000004 APsi6DOF
                            *COM*:0000000a buffer
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:8232   .text.ControlLoopCompass:00000000 $t
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:8237   .text.ControlLoopCompass:00000000 ControlLoopCompass
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:8733   .text.Conversion:00000000 Conversion
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:8356   .text.ControlLoopCompass:000000bc $d
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:8381   .text.eCompassInit:00000000 $t
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:8386   .text.eCompassInit:00000000 eCompassInit
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:8683   .text.eCompassInit:000001e0 $d
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:8728   .text.Conversion:00000000 $t
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:8776   .text.Conversion:00000038 $d
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:8791   .text.CalPercentage:00000000 $t
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:8844   .text.CalPercentage:0000003c $d
                     .debug_frame:00000010 $d
C:\Users\b01252\AppData\Local\Temp\ccHfeNci.s:908    .text.fUpdateMagnetometerBuffer:000003f4 $t

UNDEFINED SYMBOLS
iMagReadX
iMagReadY
iMagReadZ
iAcclReadX
iAcclReadY
iAcclReadZ
__aeabi_i2f
__aeabi_fmul
__aeabi_f2d
__aeabi_dmul
__aeabi_dadd
__aeabi_d2iz
atan2
__aeabi_fsub
__aeabi_fadd
__aeabi_d2f
__aeabi_fdiv
__aeabi_fcmpeq
__aeabi_fcmpge
__aeabi_fcmplt
sqrt
asin
sin
cos
atan
__aeabi_idivmod
__aeabi_fcmple
puts
printf
__aeabi_i2d
__aeabi_ddiv
pow
__aeabi_fcmpgt
acos
median
sprintf
vfnLCD_Write_Msg
arr_medianas
__aeabi_f2iz
__aeabi_idiv
