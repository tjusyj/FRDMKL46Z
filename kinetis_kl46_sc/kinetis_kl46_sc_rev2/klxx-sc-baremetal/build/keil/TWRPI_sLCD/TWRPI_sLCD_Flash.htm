<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [C:\Users\b01252\Documents\Freescale\L4K\software\kinetis_kl46_sc\build\keil\TWRPI_sLCD\TWRPI_sLCD_Flash.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image C:\Users\b01252\Documents\Freescale\L4K\software\kinetis_kl46_sc\build\keil\TWRPI_sLCD\TWRPI_sLCD_Flash.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5.02 [Build 28]: Last Updated: Wed Apr 10 17:35:31 2013
<BR><P>
<H3>Maximum Stack Usage =        108 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; start &rArr; sysinit &rArr; pll_init &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[5]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">SysTick_Handler</a><BR>
 <LI><a href="#[15]">ADC0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15]">ADC0_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[15]">ADC0_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[16]">CMP0_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[1f]">DAC0_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[6]">DMA0_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[7]">DMA1_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[8]">DMA2_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[9]">DMA3_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[b]">FTFA_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[e]">I2C0_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[f]">I2C1_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[1d]">I2S_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[23]">LCD_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[d]">LLW_IRQHandler</a> from llwu.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[22]">LPTimer_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[c]">LVD_LVW_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[21]">MCG_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from nmi_isr_handler.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[1c]">PIT_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[24]">PORTA_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[25]">PORTD_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[1a]">RTC_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[1b]">RTC_Seconds_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[a]">Reserved20_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[10]">SPI0_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[11]">SPI1_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[27]">SystemInit</a> from system_mkl46z4.o(.text) referenced from startup_mkl46z4.o(.text)
 <LI><a href="#[17]">TPM0_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[18]">TPM1_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[19]">TPM2_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[20]">TSI0_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[12]">UART0_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[13]">UART1_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[14]">UART2_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[1e]">USB0_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[28]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_mkl46z4.o(.text)
 <LI><a href="#[2a]">_sputc</a> from printf8.o(i._sputc) referenced from printf8.o(i.__0sprintf$8)
 <LI><a href="#[29]">fputc</a> from retarget.o(.text) referenced from printf8.o(i.__0printf$8)
 <LI><a href="#[26]">main</a> from twrpi_slcd.o(.text) referenced from entry8.o(.ARM.Collect$$$$00000009)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[28]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(.text)
</UL>
<P><STRONG><a name="[72]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[2b]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[6c]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[73]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[74]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8.o(.ARM.Collect$$$$00000009))

<P><STRONG><a name="[26]"></a>main</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, twrpi_slcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = main &rArr; start &rArr; sysinit &rArr; pll_init &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vfnLCD_Write_Msg_GoTo
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vfnLCD_Set_Display
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vfnLCD_Init
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vfnLCD_Clear_Display
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;out_char
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;in_char
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry8.o(.ARM.Collect$$$$00000009)
</UL>
<P><STRONG><a name="[34]"></a>in_char</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, io.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = in_char
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_getchar
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[35]"></a>out_char</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, io.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = out_char
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putchar
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[38]"></a>char_present</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, io.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_getchar_present
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, nmi_isr_handler.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>enable_NMI_button</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, nmi_isr_handler.o(.text), UNUSED)

<P><STRONG><a name="[3e]"></a>enable_abort_button</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, sysinit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysinit
</UL>

<P><STRONG><a name="[3a]"></a>sysinit</STRONG> (Thumb, 214 bytes, Stack size 16 bytes, sysinit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = sysinit &rArr; pll_init &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pll_init
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_abort_button
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start
</UL>

<P><STRONG><a name="[76]"></a>clk_out_init</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, sysinit.o(.text), UNUSED)

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>ADC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>CMP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>DAC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>DMA0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DMA1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>DMA2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>DMA3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>DefaultISR</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text), UNUSED)

<P><STRONG><a name="[b]"></a>FTFA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>I2S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>LCD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>LPTimer_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>LVD_LVW_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>MCG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>PIT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>PORTA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>PORTD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>RTC_Seconds_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>Reserved20_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TPM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TPM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TPM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>TSI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>USB0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>SER_PutChar</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, serial.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SER_PutChar
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putchar
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[41]"></a>SER_GetChar</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, serial.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_getchar
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fgetc
</UL>

<P><STRONG><a name="[29]"></a>fputc</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, retarget.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = fputc &rArr; SER_PutChar
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SER_PutChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf8.o(i.__0printf$8)
</UL>
<P><STRONG><a name="[42]"></a>fgetc</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, retarget.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SER_GetChar
</UL>

<P><STRONG><a name="[78]"></a>ferror</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, retarget.o(.text), UNUSED)

<P><STRONG><a name="[43]"></a>_ttywrch</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, retarget.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SER_PutChar
</UL>

<P><STRONG><a name="[79]"></a>_sys_exit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, retarget.o(.text), UNUSED)

<P><STRONG><a name="[7a]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[3d]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atc
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysinit
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[7b]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[3c]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atc
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fei_fee
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fei_fbi
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee_fbi
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fbi_fee
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blpi_fbi
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fbi_blpi
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fbe_fbi
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fbe_fee
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blpe_pbe
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fbe_pbe
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbe_pee
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pll_init
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysinit
</UL>

<P><STRONG><a name="[7c]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[7d]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[7e]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[44]"></a>flash_identify</STRONG> (Thumb, 154 bytes, Stack size 8 bytes, start.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = flash_identify &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_identify
</UL>

<P><STRONG><a name="[45]"></a>cpu_identify</STRONG> (Thumb, 1434 bytes, Stack size 8 bytes, start.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = cpu_identify &rArr; flash_identify &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_identify
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start
</UL>

<P><STRONG><a name="[2d]"></a>start</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, start.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = start &rArr; sysinit &rArr; pll_init &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysinit
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;outSRS
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_identify
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[27]"></a>SystemInit</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, system_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(.text)
</UL>
<P><STRONG><a name="[48]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 310 bytes, Stack size 16 bytes, system_mkl46z4.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[49]"></a>llwu_configure</STRONG> (Thumb, 506 bytes, Stack size 24 bytes, llwu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[4a]"></a>llwu_configure_filter</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, llwu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[d]"></a>LLW_IRQHandler</STRONG> (Thumb, 768 bytes, Stack size 0 bytes, llwu.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>pll_init</STRONG> (Thumb, 714 bytes, Stack size 56 bytes, mcg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = pll_init &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysinit
</UL>

<P><STRONG><a name="[7f]"></a>pee_pbe</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, mcg.o(.text), UNUSED)

<P><STRONG><a name="[4b]"></a>pbe_pee</STRONG> (Thumb, 250 bytes, Stack size 24 bytes, mcg.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[80]"></a>pbe_fbe</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, mcg.o(.text), UNUSED)

<P><STRONG><a name="[4c]"></a>fbe_pbe</STRONG> (Thumb, 282 bytes, Stack size 40 bytes, mcg.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[81]"></a>pbe_blpe</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, mcg.o(.text), UNUSED)

<P><STRONG><a name="[4d]"></a>blpe_pbe</STRONG> (Thumb, 246 bytes, Stack size 32 bytes, mcg.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[82]"></a>blpe_fbe</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, mcg.o(.text), UNUSED)

<P><STRONG><a name="[83]"></a>fbe_blpe</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, mcg.o(.text), UNUSED)

<P><STRONG><a name="[4f]"></a>fll_freq</STRONG> (Thumb, 362 bytes, Stack size 0 bytes, mcg.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee_fei
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fei_fee
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fbi_fei
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fbi_fee
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fbe_fee
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fbe_fei
</UL>

<P><STRONG><a name="[4e]"></a>fbe_fei</STRONG> (Thumb, 212 bytes, Stack size 20 bytes, mcg.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fll_freq
</UL>

<P><STRONG><a name="[84]"></a>fei_fbe</STRONG> (Thumb, 400 bytes, Stack size 20 bytes, mcg.o(.text), UNUSED)

<P><STRONG><a name="[50]"></a>fbe_fee</STRONG> (Thumb, 288 bytes, Stack size 24 bytes, mcg.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fll_freq
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[85]"></a>fee_fbe</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, mcg.o(.text), UNUSED)

<P><STRONG><a name="[51]"></a>fbe_fbi</STRONG> (Thumb, 376 bytes, Stack size 24 bytes, mcg.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[86]"></a>fbi_fbe</STRONG> (Thumb, 412 bytes, Stack size 20 bytes, mcg.o(.text), UNUSED)

<P><STRONG><a name="[52]"></a>fbi_blpi</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, mcg.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[53]"></a>blpi_fbi</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, mcg.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[54]"></a>fbi_fee</STRONG> (Thumb, 484 bytes, Stack size 40 bytes, mcg.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fll_freq
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[55]"></a>fee_fbi</STRONG> (Thumb, 354 bytes, Stack size 24 bytes, mcg.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[56]"></a>fbi_fei</STRONG> (Thumb, 264 bytes, Stack size 20 bytes, mcg.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fll_freq
</UL>

<P><STRONG><a name="[57]"></a>fei_fbi</STRONG> (Thumb, 308 bytes, Stack size 24 bytes, mcg.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[58]"></a>fei_fee</STRONG> (Thumb, 428 bytes, Stack size 48 bytes, mcg.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fll_freq
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[59]"></a>fee_fei</STRONG> (Thumb, 202 bytes, Stack size 16 bytes, mcg.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fll_freq
</UL>

<P><STRONG><a name="[5b]"></a>what_mcg_mode</STRONG> (Thumb, 344 bytes, Stack size 0 bytes, mcg.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atc
</UL>

<P><STRONG><a name="[5a]"></a>atc</STRONG> (Thumb, 432 bytes, Stack size 72 bytes, mcg.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;what_mcg_mode
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[87]"></a>clk_monitor_0</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, mcg.o(.text), UNUSED)

<P><STRONG><a name="[47]"></a>outSRS</STRONG> (Thumb, 352 bytes, Stack size 8 bytes, rcm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = outSRS &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start
</UL>

<P><STRONG><a name="[3f]"></a>uart_init</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = uart_init &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysinit
</UL>

<P><STRONG><a name="[36]"></a>uart_getchar</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SER_GetChar
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;in_char
</UL>

<P><STRONG><a name="[37]"></a>uart_putchar</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SER_PutChar
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;out_char
</UL>

<P><STRONG><a name="[39]"></a>uart_getchar_present</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;char_present
</UL>

<P><STRONG><a name="[88]"></a>uart0_init</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)

<P><STRONG><a name="[89]"></a>uart0_getchar</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)

<P><STRONG><a name="[8a]"></a>uart0_putchar</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)

<P><STRONG><a name="[8b]"></a>uart0_getchar_present</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)

<P><STRONG><a name="[66]"></a>vfnLCD_Scroll</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcddrv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vfnLCD_Write_MsgPlace
</UL>

<P><STRONG><a name="[61]"></a>vfnLCD_Write_Char</STRONG> (Thumb, 214 bytes, Stack size 20 bytes, lcddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = vfnLCD_Write_Char
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vfnLCD_Write_Msg_GoTo
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vfnLCD_Write_MsgPlace
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vfnLCD_Write_Msg
</UL>

<P><STRONG><a name="[60]"></a>vfnLCD_Write_Msg</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, lcddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = vfnLCD_Write_Msg &rArr; vfnLCD_Write_Char
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vfnLCD_Write_Char
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vfnLCD_Set_Display
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vfnLCD_Init
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vfnLCD_Clear_Display
</UL>

<P><STRONG><a name="[62]"></a>vfnLCD_EnablePins</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, lcddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vfnLCD_EnablePins
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vfnLCD_Init
</UL>

<P><STRONG><a name="[2e]"></a>vfnLCD_Init</STRONG> (Thumb, 90 bytes, Stack size 4 bytes, lcddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = vfnLCD_Init &rArr; vfnLCD_Write_Msg &rArr; vfnLCD_Write_Char
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vfnLCD_EnablePins
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vfnLCD_Write_Msg
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[64]"></a>vfnLCD_ConfigureBackplanes</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lcddrv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vfnBP_VScroll
</UL>

<P><STRONG><a name="[63]"></a>vfnBP_VScroll</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, lcddrv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vfnLCD_ConfigureBackplanes
</UL>

<P><STRONG><a name="[8c]"></a>vfnLCD_Home</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcddrv.o(.text), UNUSED)

<P><STRONG><a name="[8d]"></a>vfnLCD_Contrast</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lcddrv.o(.text), UNUSED)

<P><STRONG><a name="[65]"></a>vfnLCD_Write_MsgPlace</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, lcddrv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vfnLCD_Write_Char
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vfnLCD_Scroll
</UL>

<P><STRONG><a name="[33]"></a>vfnLCD_Write_Msg_GoTo</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, lcddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = vfnLCD_Write_Msg_GoTo &rArr; vfnLCD_Write_Char
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vfnLCD_Write_Char
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2f]"></a>vfnLCD_Set_Display</STRONG> (Thumb, 94 bytes, Stack size 4 bytes, lcddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = vfnLCD_Set_Display &rArr; vfnLCD_Write_Msg &rArr; vfnLCD_Write_Char
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vfnLCD_Write_Msg
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[30]"></a>vfnLCD_Clear_Display</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, lcddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = vfnLCD_Clear_Display &rArr; vfnLCD_Write_Msg &rArr; vfnLCD_Write_Char
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vfnLCD_Write_Msg
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8e]"></a>vfnLCD_All_Segments_OFF</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, lcddrv.o(.text), UNUSED)

<P><STRONG><a name="[8f]"></a>PutPoint</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lcddrv.o(.text), UNUSED)

<P><STRONG><a name="[90]"></a>ClrPoint</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, lcddrv.o(.text), UNUSED)

<P><STRONG><a name="[91]"></a>SetX</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lcddrv.o(.text), UNUSED)

<P><STRONG><a name="[92]"></a>vfnlcd_pinmux</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, lcddrv.o(.text), UNUSED)

<P><STRONG><a name="[93]"></a>u8fnlcd_measure_pin_cap</STRONG> (Thumb, 128 bytes, Stack size 20 bytes, lcddrv.o(.text), UNUSED)

<P><STRONG><a name="[5e]"></a>__aeabi_fmul</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, fmul.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atc
</UL>

<P><STRONG><a name="[5d]"></a>__aeabi_fdiv</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, fdiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atc
</UL>

<P><STRONG><a name="[5c]"></a>__aeabi_i2f</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, fflti.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atc
</UL>

<P><STRONG><a name="[5f]"></a>__aeabi_f2uiz</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, ffixui.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atc
</UL>

<P><STRONG><a name="[69]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[67]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>

<P><STRONG><a name="[68]"></a>_float_epilogue</STRONG> (Thumb, 116 bytes, Stack size 12 bytes, fepilogue.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>

<P><STRONG><a name="[2c]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[94]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[6b]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[95]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[6a]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[96]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[6d]"></a>__0printf$8</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[97]"></a>__1printf$8</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)

<P><STRONG><a name="[31]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llwu_configure_filter
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llwu_configure
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;outSRS
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_identify
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_identify
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6f]"></a>__0sprintf$8</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printf8.o(i.__0sprintf$8), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[98]"></a>__1sprintf$8</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0sprintf$8), UNUSED)

<P><STRONG><a name="[32]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0sprintf$8))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[46]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, start.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_identify
</UL>

<P><STRONG><a name="[99]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[6e]"></a>_printf_core</STRONG> (Thumb, 1072 bytes, Stack size 104 bytes, printf8.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$8
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$8
</UL>

<P><STRONG><a name="[71]"></a>_printf_post_padding</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, printf8.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[70]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, printf8.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[2a]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printf8.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf8.o(i.__0sprintf$8)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
